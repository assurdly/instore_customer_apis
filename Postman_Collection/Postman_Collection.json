{
	"info": {
		"_postman_id": "360b6f7c-1f16-4b24-aa8f-b35c8871778f",
		"name": "OnePipe PWA Instore - Automated Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Onboarding",
			"item": [
				{
					"name": "Signup",
					"item": [
						{
							"name": "Begin Signup",
							"item": [
								{
									"name": "Begin Signup",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "533e4713-4091-42e8-b6a5-ba61e7fb3c9d",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"pm.test('Has status field', function(){ ",
													"    pm.expect(jsonData).to.have.property('status');",
													"    pm.expect(jsonData.status).to.equal('Successful');",
													"});",
													"pm.test('Has message field', function(){ ",
													"    pm.expect(jsonData).to.have.property('message');",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "b4fd2b86-502d-430e-a932-45304a6d1fa5",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"action\": \"auth.signup\",\n  \"data\": {\n    \"customer_ref\": \"2347080507367\",\n    \"country\": \"NG\"\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								},
								{
									"name": "Begin Signup - Empty Country Field",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d8417a7c-f500-4f0d-a525-b568f8829ffa",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"pm.test('Has status field', function(){",
													" pm.expect(jsonData).to.have.property('status'); ",
													"    pm.expect(jsonData.status).to.eql('Failed');",
													"});",
													"pm.test('Has message field', function(){",
													"    pm.expect(jsonData).to.have.property('message');",
													"    pm.expect(jsonData.message).to.exist;",
													" });"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "07ec59a6-4e02-41cd-9314-4b6753a195b2",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"action\": \"auth.signup\",\n  \"data\": {\n    \"customer_ref\": \"2349032456062\",\n    \"country\": \"\"\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								},
								{
									"name": "Begin Signup - Empty customer ref",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d8417a7c-f500-4f0d-a525-b568f8829ffa",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"pm.test('Has status field', function(){",
													"    pm.expect(jsonData).to.have.property('status');",
													"    pm.expect(jsonData.status).to.eql('Failed');",
													"});",
													"pm.test('Has message field', function(){",
													"     pm.expect(jsonData).to.have.property('message');",
													"    pm.expect(jsonData.message).to.include('Phone number is required');",
													"",
													"     ",
													" });"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "b00de620-db42-4882-a62a-c0f625b7a0b1",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"action\": \"auth.signup\",\n  \"data\": {\n    \"customer_ref\": \"\",\n    \"country\": \"NG\"\n\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								},
								{
									"name": "Begin Signup - Invalid Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d8417a7c-f500-4f0d-a525-b568f8829ffa",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"pm.test('Has status field', function(){",
													"    pm.expect(jsonData).to.have.property('status');",
													"    pm.expect(jsonData.status).to.eql('Failed');",
													"});",
													"pm.test('Has message field', function(){",
													"    pm.expect(jsonData).to.have.property('message');",
													"    pm.expect(jsonData.message).to.exist.and.not.be.empty;   ",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "6a368cd1-77b4-4443-b534-49139686831e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer 6ec10a2f18cf9f894c49462b7c24a3d4"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"action\": \"auth.signup\",\n  \"data\": {\n    \"customer_ref\": \"2349032456062\",\n    \"country\": \"NG\"\n\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								},
								{
									"name": "Begin Signup - No Auth Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d8417a7c-f500-4f0d-a525-b568f8829ffa",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"pm.test('Has status field', function(){",
													"    pm.expect(jsonData).to.have.property('status');",
													"    pm.expect(jsonData.status).to.eql('Failed');",
													"});",
													"pm.test('Has message field', function(){",
													"    pm.expect(jsonData).to.have.property('message');",
													"    pm.expect(jsonData.message).to.exist.and.not.be.empty;   ",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "ea87920b-4bcc-42e3-aafc-1000dfab6760",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer 6ec10a2f18cf9f894c49462b7c24a3d4",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"action\": \"auth.signup\",\n  \"data\": {\n    \"customer_ref\": \"2349032456062\",\n    \"country\": \"NG\"\n\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								}
							],
							"id": "31c13b61-faf4-4fe9-8a3b-965e98069d32"
						},
						{
							"name": "Verify User Information and ID",
							"item": [
								{
									"name": "Verify User Info & ID - Success",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c384a2ad-565a-469f-9315-35b1edfe83b8",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"pm.test('Has status field', function(){ ",
													"    pm.expect(jsonData).to.have.property('status');",
													"    pm.expect(jsonData.status).to.equal('Successful');",
													"});",
													"pm.test('Has message field', function(){ ",
													"    pm.expect(jsonData).to.have.property('message');",
													"    pm.expect(jsonData.message).to.exist;",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "1c44a00a-07a9-4ceb-a668-286965bcc81d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"action\": \"misc.verify-user-id-details\",\n  \"data\": {\n    \"customer_ref\": \"2349032456062\",\n    \"nin\": \"54680797474\",\n    \"first_name\": \"Tarela\",\n    \"last_name\": \"Okurude\",\n    \"email\": \"tarela@assurdly.com\",\n    \"date_of_birth\": \"2001-10-09-01-01\",\n    \"phone_number\": \"09032456062\"\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								},
								{
									"name": "Verify User Info & ID - Empty Customer Ref",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d8417a7c-f500-4f0d-a525-b568f8829ffa",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"pm.test('Has status field', function(){",
													"    pm.expect(jsonData).to.have.property('status');",
													"    pm.expect(jsonData.status).to.eql('Failed');",
													"});",
													"",
													"pm.test('Has message field', function(){",
													"     pm.expect(jsonData).to.have.property('message');",
													"    pm.expect(jsonData.message).to.include('Customer ref required');",
													" });"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "4695d8e3-9e71-4c9d-bbea-4c636d17c826",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"misc.verify-user-id-details\",\n  \"data\": {\n    \"customer_ref\": \"\",\n    \"nin\": \"54680797474\",\n    \"first_name\": \"Tarela\",\n    \"last_name\": \"Okurude\",\n    \"email\": \"tarela@assurdly.com\",\n    \"date_of_birth\": \"2001-10-09-01-01\",\n    \"phone_number\": \"09032456062\"\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								},
								{
									"name": "Verify User Info & ID - Empty NIN",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d8417a7c-f500-4f0d-a525-b568f8829ffa",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"pm.test('Has status field', function(){",
													"    pm.expect(jsonData).to.have.property('status');",
													"    pm.expect(jsonData.status).to.eql('Failed');",
													"});",
													"",
													"pm.test('Has message field', function(){",
													"     pm.expect(jsonData).to.have.property('message');",
													"    pm.expect(jsonData.message).to.include('Nin is required');",
													" });"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "b43f8d3e-ddab-4a87-8c3d-91d4acde7589",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"misc.verify-user-id-details\",\n  \"data\": {\n    \"customer_ref\": \"2349032456062\",\n    \"nin\": \"\",\n    \"first_name\": \"Tarela\",\n    \"last_name\": \"Okurude\",\n    \"email\": \"tarela@assurdly.com\",\n    \"date_of_birth\": \"2001-10-09-01-01\",\n    \"phone_number\": \"09032456062\"\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								},
								{
									"name": "Verify User Info & ID - Empty First Name",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d8417a7c-f500-4f0d-a525-b568f8829ffa",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"pm.test('Has status field', function(){",
													"    pm.expect(jsonData).to.have.property('status');",
													"    pm.expect(jsonData.status).to.eql('Failed');",
													"});",
													"",
													"pm.test('Has message field', function(){",
													"     pm.expect(jsonData).to.have.property('message');",
													"    pm.expect(jsonData.message).to.include('First Name is required');",
													" });"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "8bb8b6c8-23b0-4a0e-9521-1772270cf5f4",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"misc.verify-user-id-details\",\n  \"data\": {\n    \"customer_ref\": \"2349032456062\",\n    \"nin\": \"54680797474\",\n    \"first_name\": \"\",\n    \"last_name\": \"Okurude\",\n    \"email\": \"tarela@assurdly.com\",\n    \"date_of_birth\": \"2001-10-09-01-01\",\n    \"phone_number\": \"09032456062\"\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								},
								{
									"name": "Verify User Info & ID - Empty Last Name",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d8417a7c-f500-4f0d-a525-b568f8829ffa",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"pm.test('Has status field', function(){",
													"    pm.expect(jsonData).to.have.property('status');",
													"    pm.expect(jsonData.status).to.eql('Failed');",
													"});",
													"",
													"pm.test('Has message field', function(){",
													"     pm.expect(jsonData).to.have.property('message');",
													"    pm.expect(jsonData.message).to.include('Last Name is required');",
													" });"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "f8acff3b-8a2e-4fcb-a157-9675cf12a969",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"misc.verify-user-id-details\",\n  \"data\": {\n    \"customer_ref\": \"2349032456062\",\n    \"nin\": \"54680797474\",\n    \"first_name\": \"Tarela\",\n    \"last_name\": \"\",\n    \"email\": \"tarela@assurdly.com\",\n    \"date_of_birth\": \"2001-10-09\",\n    \"phone_number\": \"09032456062\"\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								},
								{
									"name": "Verify User Info & ID - Empty email",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d8417a7c-f500-4f0d-a525-b568f8829ffa",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"pm.test('Has status field', function(){",
													"    pm.expect(jsonData).to.have.property('status');",
													"    pm.expect(jsonData.status).to.eql('Failed');",
													"});",
													"",
													"pm.test('Has message field', function(){",
													"     pm.expect(jsonData).to.have.property('message');",
													"    pm.expect(jsonData.message).to.include('email must be an email');",
													" });"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "35246fd0-f7cd-44da-8e0d-b517362cd268",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"misc.verify-user-id-details\",\n  \"data\": {\n    \"customer_ref\": \"2349032456062\",\n    \"nin\": \"54680797474\",\n    \"first_name\": \"Tarela\",\n    \"last_name\": \"Okurude\",\n    \"email\": \"\",\n    \"date_of_birth\": \"2001-10-09\",\n    \"phone_number\": \"09032456062\"\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								},
								{
									"name": "Verify User Info & ID - Invalid email",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d8417a7c-f500-4f0d-a525-b568f8829ffa",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"pm.test('Has status field', function(){",
													"    pm.expect(jsonData).to.have.property('status');",
													"    pm.expect(jsonData.status).to.eql('Failed');",
													"});",
													"",
													"pm.test('Has message field', function(){",
													"     pm.expect(jsonData).to.have.property('message');",
													"    pm.expect(jsonData.message).to.include('email must be an email');",
													" });"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "2be1eb15-944c-4734-85a3-97e8e482b4e1",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"misc.verify-user-id-details\",\n  \"data\": {\n    \"customer_ref\": \"2349032456062\",\n    \"nin\": \"54680797474\",\n    \"first_name\": \"Tarela\",\n    \"last_name\": \"Okurude\",\n    \"email\": \"tarelaassurdly.com\",\n    \"date_of_birth\": \"2001-10-09\",\n    \"phone_number\": \"09032456062\"\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								},
								{
									"name": "Verify User Info & ID - Empty Date of Birth",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d8417a7c-f500-4f0d-a525-b568f8829ffa",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"pm.test('Has status field', function(){",
													"    pm.expect(jsonData).to.have.property('status');",
													"    pm.expect(jsonData.status).to.eql('Failed');",
													"});",
													"",
													"pm.test('Has message field', function(){",
													"     pm.expect(jsonData).to.have.property('message');",
													"    pm.expect(jsonData.message).to.include('date_of_birth must be longer than or equal to 10 characters');",
													" });"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "9a7ba7ef-b3b1-4cca-909b-2e155c995cfe",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"misc.verify-user-id-details\",\n  \"data\": {\n    \"customer_ref\": \"2349032456062\",\n    \"nin\": \"54680797474\",\n    \"first_name\": \"Tarela\",\n    \"last_name\": \"Okurude\",\n    \"email\": \"tarela@assurdly.com\",\n    \"date_of_birth\": \"\",\n    \"phone_number\": \"09032456062\"\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								},
								{
									"name": "Verify User Info & ID - Empty Phone Number Field Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d8417a7c-f500-4f0d-a525-b568f8829ffa",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"pm.test('Has status field', function(){",
													"    pm.expect(jsonData).to.have.property('status');",
													"    pm.expect(jsonData.status).to.eql('Failed');",
													"});",
													"",
													"pm.test('Has message field', function(){",
													"     pm.expect(jsonData).to.have.property('message');",
													"    pm.expect(jsonData.message).to.include('Phone number is required');",
													" });"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "e55db2f5-4a5f-4df9-986d-d29e73158766",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"misc.verify-user-id-details\",\n  \"data\": {\n    \"customer_ref\": \"2349032456062\",\n    \"nin\": \"54680797474\",\n    \"first_name\": \"Tarela\",\n    \"last_name\": \"Okurude\",\n    \"email\": \"tarela@assurdly.com\",\n    \"date_of_birth\": \"2001-10-09\",\n    \"phone_number\": \"\"\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								},
								{
									"name": "Verify User Info & ID - Invalid Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d8417a7c-f500-4f0d-a525-b568f8829ffa",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"pm.test('Has status field', function(){",
													"    pm.expect(jsonData).to.have.property('status');",
													"    pm.expect(jsonData.status).to.eql('Failed');",
													"});",
													"",
													"pm.test('Has message field', function(){",
													"     pm.expect(jsonData).to.have.property('message');",
													"    pm.expect(jsonData.message).to.include('Phone number is required');",
													" });"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "20ef6f3c-32cf-4eea-9953-f2194474f1e3",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer 6ec10a2f18cf9f894c49462b7c24a3d2"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"misc.verify-user-id-details\",\n  \"data\": {\n    \"customer_ref\": \"2349032456062\",\n    \"nin\": \"54680797474\",\n    \"first_name\": \"Tarela\",\n    \"last_name\": \"Okurude\",\n    \"email\": \"tarela@assurdly.com\",\n    \"date_of_birth\": \"2001-10-09\",\n    \"phone_number\": \"09032456062\"\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								},
								{
									"name": "Verify User Info & ID - No Auth Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d8417a7c-f500-4f0d-a525-b568f8829ffa",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"pm.test('Has status field', function(){",
													"    pm.expect(jsonData).to.have.property('status');",
													"    pm.expect(jsonData.status).to.eql('Failed');",
													"});",
													"",
													"pm.test('Has message field', function(){",
													"     pm.expect(jsonData).to.have.property('message');",
													"    pm.expect(jsonData.message).to.include('Phone number is required');",
													" });"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "2607d2af-e12f-487f-a3aa-a4b1ad09348d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"misc.verify-user-id-details\",\n  \"data\": {\n    \"customer_ref\": \"2349032456062\",\n    \"nin\": \"54680797474\",\n    \"first_name\": \"Tarela\",\n    \"last_name\": \"Okurude\",\n    \"email\": \"tarela@assurdly.com\",\n    \"date_of_birth\": \"2001-10-09\",\n    \"phone_number\": \"09032456062\"\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								}
							],
							"id": "8a6d5fa4-0377-4c62-aaac-35bc18f8f240"
						},
						{
							"name": "Make First Payment",
							"item": [
								{
									"name": "Make First Payment - Success",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3769e440-48a9-4982-b623-32b781085205",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"pm.test('Has status field', function(){ ",
													"    pm.expect(jsonData).to.have.property('status');",
													"    pm.expect(jsonData.status).to.equal('Processing');",
													"});",
													"",
													"pm.test('Has message field', function(){ ",
													"    pm.expect(jsonData).to.have.property('message');",
													"    pm.expect(jsonData.message).to.exist;",
													"});",
													"",
													"pm.test(\"set tranaction reference as a variable\", function () {",
													"    pm.collectionVariables.set(\"transaction_ref\", jsonData.data.provider_response.meta.transaction_ref);",
													"})",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "835d4d7b-b2c1-4b5a-8fb6-920dc6ca56cf",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"action\": \"auth.make-first-payment\",\n  \"data\": {\n    \"customer_ref\": \"2349032456062\", //2347080507367\n    \"country\": \"NG\",\n    \"first_name\": \"Tarela\",//\"Ayomide\",\n    \"last_name\": \"Okurude\",//\"Liasu\",\n    \"email\": \"tarela@assurdly.com\",//\"ayomide+2@assurdly.com\",\n    \"date_of_birth\": \"2001-10-09\",//\"1999-11-20\",\n    \"nin\": \"74511543661\",//\"54680797474\"\n    \"membership_plan\": \"Free\",\n    \"membership_plan_amount\": \"0\",\n    \"membership_plan_frequency\": \"monthly\",\n    \"account_number\": \"2270251568\",//\"2212979372\",\n    \"bank_code\": \"057\",\n    \"accepted_tnc\": true\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								},
								{
									"name": "Make First Payment - Empty First Name field",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3769e440-48a9-4982-b623-32b781085205",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"pm.test('Has status field', function(){ ",
													"    pm.expect(jsonData).to.have.property('status');",
													"    pm.expect(jsonData.status).to.eql('Failed');",
													"});",
													"",
													"pm.test('Has message field', function(){ ",
													"    pm.expect(jsonData).to.have.property('message');",
													"    pm.expect(jsonData.message).to.include('First Name is required');",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "8ffda62a-bb64-4bba-967e-250d319a7b2b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"action\": \"auth.make-first-payment\",\n  \"data\": {\n    \"customer_ref\": \"2349032456062\",\n    \"country\": \"NG\",\n    \"first_name\": \"\",\n    \"last_name\": \"Okurude\",\n    \"email\": \"tarela@assurdly.com\",\n    \"date_of_birth\": \"2001-10-09\",\n    \"nin\": \"54680797474\",\n    \"membership_plan\": \"Free\",\n    \"membership_plan_amount\": \"0\",\n    \"membership_plan_frequency\": \"monthly\",\n    \"account_number\": \"2270251568\",\n    \"bank_code\": \"057\",\n    \"accepted_tnc\": true\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								},
								{
									"name": "Make First Payment - Empty Last Name field Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3769e440-48a9-4982-b623-32b781085205",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"pm.test('Has status field', function(){ ",
													"    pm.expect(jsonData).to.have.property('status');",
													"    pm.expect(jsonData.status).to.eql('Failed');",
													"});",
													"",
													"pm.test('Has message field', function(){ ",
													"    pm.expect(jsonData).to.have.property('message');",
													"    pm.expect(jsonData.message).to.include('Last Name is required');",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "ae60cc88-20c3-429b-86cd-a1862d190267",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"action\": \"auth.make-first-payment\",\n  \"data\": {\n    \"customer_ref\": \"2349032456062\",\n    \"country\": \"NG\",\n    \"first_name\": \"Tarela\",\n    \"last_name\": \"\",\n    \"email\": \"tarela@assurdly.com\",\n    \"date_of_birth\": \"2001-10-09\",\n    \"nin\": \"54680797474\",\n    \"membership_plan\": \"Free\",\n    \"membership_plan_amount\": \"0\",\n    \"membership_plan_frequency\": \"monthly\",\n    \"account_number\": \"2270251568\",\n    \"bank_code\": \"057\",\n    \"accepted_tnc\": true\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								},
								{
									"name": "Make First Payment - Invalid Email",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3769e440-48a9-4982-b623-32b781085205",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"pm.test('Has status field', function(){ ",
													"    pm.expect(jsonData).to.have.property('status');",
													"    pm.expect(jsonData.status).to.eql('Failed');",
													"});",
													"",
													"pm.test('Has message field', function(){ ",
													"    pm.expect(jsonData).to.have.property('message');",
													"    pm.expect(jsonData.message).to.include('email must be an email');",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "6c998cc5-671f-4ad7-9d1c-e512dd3029f7",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"action\": \"auth.make-first-payment\",\n  \"data\": {\n    \"customer_ref\": \"2349032456062\",\n    \"country\": \"NG\",\n    \"first_name\": \"Tarela\",\n    \"last_name\": \"Okurude\",\n    \"email\": \"tarelaassurdly.com\",\n    \"date_of_birth\": \"2001-10-09\",\n    \"nin\": \"54680797474\",\n    \"membership_plan\": \"Free\",\n    \"membership_plan_amount\": \"0\",\n    \"membership_plan_frequency\": \"monthly\",\n    \"account_number\": \"2270251568\",\n    \"bank_code\": \"057\",\n    \"accepted_tnc\": true\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								},
								{
									"name": "Make First Payment - Invalid NIN",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3769e440-48a9-4982-b623-32b781085205",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"pm.test('Has status field', function(){ ",
													"    pm.expect(jsonData).to.have.property('status');",
													"    pm.expect(jsonData.status).to.eql('Failed');",
													"});",
													"",
													"pm.test('Has message field', function(){ ",
													"    pm.expect(jsonData).to.have.property('message');",
													"    pm.expect(jsonData.message).to.include('nin must be longer than or equal to 11 characters');",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "5a80f8ff-2865-497b-aa56-788497d5d5f0",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer 6ec10a2f18cf9f894c49462b7c24a3d9"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"action\": \"auth.make-first-payment\",\n  \"data\": {\n    \"customer_ref\": \"2349032456062\",\n    \"country\": \"NG\",\n    \"first_name\": \"Tarela\",\n    \"last_name\": \"Okurude\",\n    \"email\": \"tarela@assurdly.com\",\n    \"date_of_birth\": \"2001-10-09\",\n    \"nin\": \"54680\",\n    \"membership_plan\": \"Free\",\n    \"membership_plan_amount\": \"0\",\n    \"membership_plan_frequency\": \"monthly\",\n    \"account_number\": \"2270251568\",\n    \"bank_code\": \"057\",\n    \"accepted_tnc\": true\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}"
									},
									"response": []
								},
								{
									"name": "Make First Payment - Empty Membership Plan",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3769e440-48a9-4982-b623-32b781085205",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"pm.test('Has status field', function(){ ",
													"    pm.expect(jsonData).to.have.property('status');",
													"    pm.expect(jsonData.status).to.eql('Failed');",
													"});",
													"",
													"pm.test('Has message field', function(){ ",
													"    pm.expect(jsonData).to.have.property('message');",
													"    pm.expect(jsonData.message).to.include('Membership Plan required');",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "2f2c6f18-f021-4efb-8fc9-c09c461d177b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"action\": \"auth.make-first-payment\",\n  \"data\": {\n    \"customer_ref\": \"2349032456062\",\n    \"country\": \"NG\",\n    \"first_name\": \"Tarela\",\n    \"last_name\": \"Okurude\",\n    \"email\": \"tarela@assurdly.com\",\n    \"date_of_birth\": \"2001-10-09\",\n    \"nin\": \"54680797474\",\n    \"membership_plan\": \"\",\n    \"membership_plan_amount\": \"0\",\n    \"membership_plan_frequency\": \"monthly\",\n    \"account_number\": \"2270251568\",\n    \"bank_code\": \"057\",\n    \"accepted_tnc\": true\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								},
								{
									"name": "Make First Payment - Incomplete Account Number",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3769e440-48a9-4982-b623-32b781085205",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"pm.test('Has status field', function(){ ",
													"    pm.expect(jsonData).to.have.property('status');",
													"    pm.expect(jsonData.status).to.eql('Failed');",
													"});",
													"",
													"pm.test('Has message field', function(){ ",
													"    pm.expect(jsonData).to.have.property('message');",
													"    pm.expect(jsonData.message).to.include('Account number must be 10 digits');",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "4b37a111-40e6-4b4a-9b03-8565d367dd2a",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"action\": \"auth.make-first-payment\",\n  \"data\": {\n    \"customer_ref\": \"2349032456062\",\n    \"country\": \"NG\",\n    \"first_name\": \"Tarela\",\n    \"last_name\": \"Okurude\",\n    \"email\": \"tarela@assurdly.com\",\n    \"date_of_birth\": \"2001-10-09\",\n    \"nin\": \"54680797474\",\n    \"membership_plan\": \"Free\",\n    \"membership_plan_amount\": \"0\",\n    \"membership_plan_frequency\": \"monthly\",\n    \"account_number\": \"2270\",\n    \"bank_code\": \"057\",\n    \"accepted_tnc\": true\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								},
								{
									"name": "Make First Payment - Invalid Account Number",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3769e440-48a9-4982-b623-32b781085205",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"pm.test('Has status field', function(){ ",
													"    pm.expect(jsonData).to.have.property('status');",
													"    pm.expect(jsonData.status).to.eql('Failed');",
													"});",
													"",
													"pm.test('Has message field', function(){ ",
													"    pm.expect(jsonData).to.have.property('message');",
													"    pm.expect(jsonData.message).to.include('Could not fetch account details. Service may be temporarily offline or account information is invalid. Please try again later.');",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "3931113e-f8d9-44b2-94a5-229a61eb23d6",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"action\": \"auth.make-first-payment\",\n  \"data\": {\n    \"customer_ref\": \"2349032456062\",\n    \"country\": \"NG\",\n    \"first_name\": \"Tarela\",\n    \"last_name\": \"Okurude\",\n    \"email\": \"tarela@assurdly.com\",\n    \"date_of_birth\": \"2001-10-09\",\n    \"nin\": \"54680797474\",\n    \"membership_plan\": \"Free\",\n    \"membership_plan_amount\": \"0\",\n    \"membership_plan_frequency\": \"monthly\",\n    \"account_number\": \"2270abcdef\",\n    \"bank_code\": \"057\",\n    \"accepted_tnc\": true\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								},
								{
									"name": "Make First Payment - Invalid Bank Code",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3769e440-48a9-4982-b623-32b781085205",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"pm.test('Has status field', function(){ ",
													"    pm.expect(jsonData).to.have.property('status');",
													"    pm.expect(jsonData.status).to.eql('Failed');",
													"});",
													"",
													"pm.test('Has message field', function(){ ",
													"    pm.expect(jsonData).to.have.property('message');",
													"    pm.expect(jsonData.message).to.include('Could not fetch account details. Service may be temporarily offline or account information is invalid. Please try again later.');",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "b1a0b59d-1985-46ca-9ec9-ad70b983e388",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"action\": \"auth.make-first-payment\",\n  \"data\": {\n    \"customer_ref\": \"2349032456062\",\n    \"country\": \"NG\",\n    \"first_name\": \"Tarela\",\n    \"last_name\": \"Okurude\",\n    \"email\": \"tarela@assurdly.com\",\n    \"date_of_birth\": \"2001-10-09\",\n    \"nin\": \"54680797474\",\n    \"membership_plan\": \"Free\",\n    \"membership_plan_amount\": \"0\",\n    \"membership_plan_frequency\": \"monthly\",\n    \"account_number\": \"2270251568\",\n    \"bank_code\": \"058\",\n    \"accepted_tnc\": true\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								},
								{
									"name": "Make First Payment - Empty Terms and Condition",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3769e440-48a9-4982-b623-32b781085205",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"pm.test('Has status field', function(){ ",
													"    pm.expect(jsonData).to.have.property('status');",
													"    pm.expect(jsonData.status).to.eql('Failed');",
													"});",
													"",
													"pm.test('Has message field', function(){ ",
													"    pm.expect(jsonData).to.have.property('message');",
													"    pm.expect(jsonData.message).to.include('Terms and Condition required');",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "ed488ff6-b573-4b76-a352-1e305a627c0f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"action\": \"auth.make-first-payment\",\n  \"data\": {\n    \"customer_ref\": \"2349032456062\",\n    \"country\": \"NG\",\n    \"first_name\": \"Tarela\",\n    \"last_name\": \"Okurude\",\n    \"email\": \"tarela@assurdly.com\",\n    \"date_of_birth\": \"2001-10-09\",\n    \"nin\": \"54680797474\",\n    \"membership_plan\": \"Free\",\n    \"membership_plan_amount\": \"0\",\n    \"membership_plan_frequency\": \"monthly\",\n    \"account_number\": \"2270251568\",\n    \"bank_code\": \"057\",\n    \"accepted_tnc\": \"\"\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								},
								{
									"name": "Make First Payment - Invalid Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3769e440-48a9-4982-b623-32b781085205",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"pm.test('Has status field', function(){ ",
													"    pm.expect(jsonData).to.have.property('status');",
													"    pm.expect(jsonData.status).to.eql('Failed');",
													"});",
													"",
													"pm.test('Has message field', function(){",
													"    pm.expect(jsonData).to.have.property('message');",
													"    pm.expect(jsonData.message).to.exist.and.not.be.empty;   ",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "6194b2c2-7a5e-43da-b22d-fa49f7bb655e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer 6ec10a2f18cf9f894c49462b7c24a3d2"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"action\": \"auth.make-first-payment\",\n  \"data\": {\n    \"customer_ref\": \"2349032456062\",\n    \"country\": \"NG\",\n    \"first_name\": \"Tarela\",\n    \"last_name\": \"Okurude\",\n    \"email\": \"tarela@assurdly.com\",\n    \"date_of_birth\": \"2001-10-09\",\n    \"nin\": \"54680797474\",\n    \"membership_plan\": \"Free\",\n    \"membership_plan_amount\": \"0\",\n    \"membership_plan_frequency\": \"monthly\",\n    \"account_number\": \"2270251568\",\n    \"bank_code\": \"057\",\n    \"accepted_tnc\": true\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								},
								{
									"name": "Make First Payment - No Auth Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3769e440-48a9-4982-b623-32b781085205",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"pm.test('Has status field', function(){ ",
													"    pm.expect(jsonData).to.have.property('status');",
													"    pm.expect(jsonData.status).to.eql('Failed');",
													"});",
													"",
													"pm.test('Has message field', function(){",
													"    pm.expect(jsonData).to.have.property('message');",
													"    pm.expect(jsonData.message).to.exist.and.not.be.empty;   ",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "3a42f5bc-7f8c-4a60-b966-4492da2d6265",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"action\": \"auth.make-first-payment\",\n  \"data\": {\n    \"customer_ref\": \"2349032456062\",\n    \"country\": \"NG\",\n    \"first_name\": \"Tarela\",\n    \"last_name\": \"Okurude\",\n    \"email\": \"tarela@assurdly.com\",\n    \"date_of_birth\": \"2001-10-09\",\n    \"nin\": \"54680797474\",\n    \"membership_plan\": \"Free\",\n    \"membership_plan_amount\": \"0\",\n    \"membership_plan_frequency\": \"monthly\",\n    \"account_number\": \"2270251568\",\n    \"bank_code\": \"057\",\n    \"accepted_tnc\": true\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								}
							],
							"id": "99c09d48-4969-4c12-9623-6b7efc2c19ae"
						},
						{
							"name": "Verify First Payment",
							"item": [
								{
									"name": "Verify First Payment - Success",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0f802ae4-29da-4609-bf20-6e08c141b26a",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"pm.test('Has status field', function(){ ",
													"    pm.expect(jsonData).to.have.property('status');",
													"        pm.expect(jsonData.status).to.exist.and.not.be.empty;",
													" });",
													"",
													"pm.test('Has message field', function(){ ",
													"    pm.expect(jsonData).to.have.property('message');",
													"    pm.expect(jsonData.message).to.exist.and.not.be.empty;   ",
													"    });",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "ad39850e-0a76-4c69-b040-c091d9973b07",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"action\": \"auth.verify-first-payment\",\n  \"data\": {\n    \"customer_ref\": \"2349032456062\",//\"2347080507367\",\n    \"transaction_ref\": \"{{transaction_ref}}\"\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								},
								{
									"name": "Verify First Payment - Empty Transaction Reference",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0f802ae4-29da-4609-bf20-6e08c141b26a",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"pm.test('Has status field', function(){ ",
													"    pm.expect(jsonData).to.have.property('status');",
													"        pm.expect(jsonData.status).to.eql('Failed');",
													" });",
													"",
													"pm.test('Has message field', function(){ ",
													"    pm.expect(jsonData.message).to.include('Validation failed: Transaction ref required');",
													"    });",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "a6f5321c-13ad-4784-960a-10d8ac1094ac",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"action\": \"auth.verify-first-payment\",\n  \"data\": {\n    \"customer_ref\": \"2349032456062\",\n    \"transaction_ref\": \"\"\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								},
								{
									"name": "Verify First Payment - Invalid Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0f802ae4-29da-4609-bf20-6e08c141b26a",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"pm.test('Has status field', function(){ ",
													"    pm.expect(jsonData).to.have.property('status');",
													"        pm.expect(jsonData.status).to.eql('Failed');",
													" });",
													"",
													"pm.test('Has message field', function(){ ",
													"    pm.expect(jsonData).to.have.property('message');",
													"    pm.expect(jsonData.message).to.exist.and.not.be.empty;   ",
													"    });",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "b1fe324b-1f09-46ad-b6df-2a9890adb8f3",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer 6ec10a2f18cf9f894c49462b7c24a3d2"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"action\": \"auth.verify-first-payment\",\n  \"data\": {\n    \"customer_ref\": \"2349032456062\",\n    \"transaction_ref\": \"{{transaction_ref}}\"\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								},
								{
									"name": "Verify First Payment - No Auth Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0f802ae4-29da-4609-bf20-6e08c141b26a",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"pm.test('Has status field', function(){ ",
													"    pm.expect(jsonData).to.have.property('status');",
													"        pm.expect(jsonData.status).to.eql('Failed');",
													" });",
													"",
													"pm.test('Has message field', function(){ ",
													"    pm.expect(jsonData).to.have.property('message');",
													"    pm.expect(jsonData.message).to.exist.and.not.be.empty;   ",
													"    });",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "ecbcae85-8198-4efc-8b7a-e1ac3cf64b56",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"action\": \"auth.verify-first-payment\",\n  \"data\": {\n    \"customer_ref\": \"2349032456062\",\n    \"transaction_ref\": \"{{transaction_ref}}\"\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								}
							],
							"id": "ea2e2065-6044-4ef2-a8a6-3ed68cf8e35e"
						}
					],
					"id": "ccafcbe6-79c4-4b39-95a6-6413b20d6965"
				},
				{
					"name": "Login",
					"item": [
						{
							"name": "Login",
							"item": [
								{
									"name": "POST - Login",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4ef60dc8-a959-4b44-a8b7-2abea34a4a01",
												"exec": [
													"const jsonData = pm.response.json()",
													"",
													"pm.test('Response data returns correctly', function(){",
													"  pm.expect(jsonData.data).to.have.property(\"provider_response\")",
													"  pm.expect(jsonData.data.provider_response).to.have.property(\"products\")",
													"  pm.expect(jsonData.data.provider_response).to.have.property(\"reference\")",
													"  pm.expect(jsonData.data.provider_response).to.have.property(\"meta\")",
													"});",
													"",
													"",
													"pm.test(\"reference is set as a collection variable\", function () {",
													"  pm.collectionVariables.set('reference', jsonData.data.provider_response.reference)",
													"});",
													"",
													"pm.test('Login status is not empty', function(){",
													"     pm.expect(jsonData.status).to.exist.and.eq(\"Successful\"); });",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "50021ed9-273b-4721-8da0-3b22ad4e19b6",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"action\": \"auth.login\",\n  \"data\": {\n    \"customer_ref\": \"{{customer_ref}}\"\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								},
								{
									"name": "Login - Invalid customer reference",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2d368258-e282-4d64-a676-8b439e7410d8",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"pm.test('Has status field', function() {",
													"    pm.expect(jsonData).to.have.property('status');",
													"    pm.expect(jsonData.status).to.be.a('string');",
													"    pm.expect(jsonData.status).to.eq('Failed');",
													"});",
													"",
													"pm.test('Has message field', function() {",
													"    pm.expect(jsonData).to.have.property('message');",
													"});",
													"",
													"",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "581edd18-e63b-4c98-9e78-94c2817f4be8",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"action\": \"auth.login\",\n  \"data\": {\n    \"customer_ref\": \"234801234\"\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								},
								{
									"name": "Login - Invalid token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2d368258-e282-4d64-a676-8b439e7410d8",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"pm.test('Has status field', function() {",
													"    pm.expect(jsonData).to.have.property('status');",
													"    pm.expect(jsonData.status).to.be.a('string');",
													"    pm.expect(jsonData.status).to.eq('Failed');",
													"});",
													"",
													"pm.test('Has message field', function() {",
													"    pm.expect(jsonData).to.have.property('message');",
													"});",
													"",
													"",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "979b6f5f-7de4-4a55-bd75-88c25fadd794",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "eyhhgkjhhfknnfhklshhfmsl"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"action\": \"auth.login\",\n  \"data\": {\n    \"customer_ref\": \"2348012345678\"\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								},
								{
									"name": "Login - No Auth Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2d368258-e282-4d64-a676-8b439e7410d8",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"pm.test('Has status field', function() {",
													"    pm.expect(jsonData).to.have.property('status');",
													"    pm.expect(jsonData.status).to.be.a('string');",
													"    pm.expect(jsonData.status).to.eq('Failed');",
													"});",
													"",
													"pm.test('Has message field', function() {",
													"    pm.expect(jsonData).to.have.property('message');",
													"});",
													"",
													"",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "bb2f40d6-9bd6-4ff3-b085-60356edab9f1",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"action\": \"auth.login\",\n  \"data\": {\n    \"customer_ref\": \"{{customer_ref}}\"\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								}
							],
							"id": "1f56a6ab-c0ec-44e0-9c72-ff773289d28d"
						},
						{
							"name": "Send Login OTP",
							"item": [
								{
									"name": "POST - Send Login OTP",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a72bf7f9-1e41-4607-af65-03228adf45f9",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"pm.test(\"Response Data is correctly returned\", function () {",
													"    pm.expect(jsonData.status).to.eql(\"Successful\");",
													"    pm.expect(jsonData.data.provider_response.delivery_status).to.exist;",
													"    pm.expect(jsonData.data.provider_response.expires_on).to.exist;",
													"    pm.expect(jsonData.data.provider_response.prompt_message).to.exist;",
													"    pm.expect(jsonData.data.provider_response.reference).to.exist;",
													"})",
													"",
													"pm.test(\"Set reference as a collection variable\", function () {",
													" pm.collectionVariables.set(\"otp_reference\", jsonData.data.provider_response.reference);",
													"})"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "d963dad3-b756-44af-9d68-78b1b29d5fd2",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"action\": \"auth.send-login-otp\",\n  \"data\": {\n    \"customer_ref\": \"{{customer_ref}}\",\n    \"biller_code\": null\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								},
								{
									"name": "Send Login OTP - empty biller code",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "880c699f-0416-476e-b0f4-210aa8b3db97",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"",
													"pm.test('Has status field', function(){",
													"    pm.expect(jsonData).to.have.property('status'); ",
													"    pm.expect(jsonData.status).to.exist.and.not.be.empty; ",
													"});",
													"pm.test('Has message field', function(){",
													"    pm.expect(jsonData).to.have.property('message'); ",
													"    pm.expect(jsonData.message).to.exist.and.not.be.empty;",
													"});",
													"",
													"pm.test('Has data field', function () {",
													"    pm.expect(jsonData).to.have.property('data');",
													"    pm.expect(jsonData.data.error).to.have.property(\"code\");",
													"})"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "83ff818f-4b36-463a-8d38-627e89850e18",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"action\": \"auth.send-login-otp\",\n  \"data\": {\n    \"customer_ref\": \"{{customer_ref}}\",\n    \"biller_code\": \"\"\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								},
								{
									"name": "Send Login OTP - invalid customer ref",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "880c699f-0416-476e-b0f4-210aa8b3db97",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"pm.test('Has status field', function(){",
													"    pm.expect(jsonData).to.have.property('status'); ",
													"    pm.expect(jsonData.status).to.exist.and.not.be.empty; ",
													"});",
													"pm.test('Has message field', function(){",
													"    pm.expect(jsonData).to.have.property('message'); ",
													"    pm.expect(jsonData.message).to.exist.and.not.be.empty;",
													"});",
													"",
													"pm.test('Has data field', function () {",
													"    pm.expect(jsonData).to.have.property('data');",
													"    pm.expect(jsonData.data.error).to.have.property(\"code\");",
													"})",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "375007b6-574b-4292-908a-2b0d88c6c8e5",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"action\": \"auth.send-login-otp\",\n  \"data\": {\n    \"customer_ref\": \"0801234\",\n    \"biller_code\": \"{{biller_code}}\"\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								},
								{
									"name": "Send Login OTP - invalid token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "880c699f-0416-476e-b0f4-210aa8b3db97",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"",
													"pm.test('Has status field', function(){",
													"    pm.expect(jsonData).to.have.property('status'); ",
													"    pm.expect(jsonData.status).to.exist.and.not.be.empty; ",
													"});",
													"pm.test('Has message field', function(){",
													"    pm.expect(jsonData).to.have.property('message'); ",
													"    pm.expect(jsonData.message).to.exist.and.not.be.empty;",
													"});",
													"",
													"pm.test('Has data field', function () {",
													"    pm.expect(jsonData).to.have.property('data');",
													"    pm.expect(jsonData.data.error).to.have.property(\"code\");",
													"})"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "59da6e73-3ae0-4310-8fb4-9e2b40663fab",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "eyhhgkjhhfknnfhklshhfmsl"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{wrong_token}}",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"action\": \"auth.send-login-otp\",\n  \"data\": {\n    \"customer_ref\": \"08012345678\",\n    \"biller_code\": \"{{biller_code}}\"\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								},
								{
									"name": "Send Login OTP - Empty token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "880c699f-0416-476e-b0f4-210aa8b3db97",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"",
													"pm.test('Has status field', function(){",
													"    pm.expect(jsonData).to.have.property('status'); ",
													"    pm.expect(jsonData.status).to.exist.and.not.be.empty; ",
													"});",
													"pm.test('Has message field', function(){",
													"    pm.expect(jsonData).to.have.property('message'); ",
													"    pm.expect(jsonData.message).to.exist.and.not.be.empty;",
													"});",
													"",
													"pm.test('Has data field', function () {",
													"    pm.expect(jsonData).to.have.property('data');",
													"    pm.expect(jsonData.data.error).to.have.property(\"code\");",
													"})"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "e24f44c0-87d1-46b2-b537-736d443eb24e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"action\": \"auth.send-login-otp\",\n  \"data\": {\n    \"customer_ref\": \"08012345678\",\n    \"biller_code\": \"{{biller_code}}\"\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								}
							],
							"id": "3593e4a9-f1b5-4998-b319-a733b1c827bd"
						},
						{
							"name": "Verify Login OTP",
							"item": [
								{
									"name": "Verify Login OTP",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6b9107c0-37ee-4061-a3d9-7e10082ef1f1",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"pm.test('Status code 200', function () {",
													"  pm.response.to.have.status(200); ",
													"  });",
													"",
													"pm.test('Has status field', function(){",
													" pm.expect(jsonData).to.have.property('status'); ",
													"});",
													"",
													"pm.test('Has message field', function(){",
													" pm.expect(jsonData).to.have.property('message');",
													"    pm.expect(jsonData.message).to.exist.and.not.be.empty;",
													"});",
													"",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "e939b36f-59ae-4b27-95bb-bed590d9f8d3",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"action\": \"auth.verify-otp\",\n  \"data\": {\n    \"customer_ref\": \"2348012345678\",\n    \"otp\": \"{{otp}}\",\n    \"otp_reference\": \"{{otp_reference}}\",\n    \"biller_code\": \"{{biller_code}}\",\n    \"user_agent\": \"{{use_agent}}\",\n    \"ip_address\": \"{{ip_address}}\"\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								},
								{
									"name": "Verify Login OTP  - Invalid OTP",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f5e0abf3-8509-4716-bb7b-1fadeb2a77a5",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"",
													"pm.test(\"check for correct error message\", function () {",
													"    pm.expect(jsonData.data.error.message).to.not.be.null;",
													"    pm.expect(jsonData.data.error.message).to.exist;",
													"});",
													"",
													"pm.test('Has data field', function () {",
													"    pm.expect(jsonData).to.have.property('data');",
													"    pm.expect(jsonData.data.error).to.have.property(\"code\");",
													"})",
													"",
													"",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "3a73ecef-d030-4ab3-802b-880b7e6ff84f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"action\": \"auth.verify-otp\",\n  \"data\": {\n    \"customer_ref\": \"{{customer_ref}}\",\n    \"otp\": \"00000\",\n    \"otp_reference\": \"{{otp_reference}}\",\n    \"biller_code\": \"{{biller_code}}\",\n    \"user_agent\": \"{{use_agent}}\",\n    \"ip_address\": \"{{ip_address}}\"\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								},
								{
									"name": "Verify Login OTP  - Invalid customer reference",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f5e0abf3-8509-4716-bb7b-1fadeb2a77a5",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"",
													"pm.test(\"check for correct error message\", function () {",
													"    pm.expect(jsonData.message).to.not.be.empty;",
													"    pm.expect(jsonData.message).to.exist;",
													"});",
													"",
													"pm.test('Has data field', function () {",
													"    pm.expect(jsonData).to.have.property('data');",
													"    pm.expect(jsonData.data.error).to.have.property(\"code\");",
													"})",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "30e1ca34-b4e8-4eca-ad1a-4c478488759d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"action\": \"auth.verify-otp\",\n  \"data\": {\n    \"customer_ref\": \"\",\n    \"otp\": \"{{otp}}\",\n    \"otp_reference\": \"{{otp_reference}}\",\n    \"biller_code\": \"{{biller_code}}\",\n    \"user_agent\": \"{{use_agent}}\",\n    \"ip_address\": \"{{ip_address}}\"\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								},
								{
									"name": "Verify Login OTP  - empty biller code",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f5e0abf3-8509-4716-bb7b-1fadeb2a77a5",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"",
													"",
													"pm.test(\"check for correct error message\", function () {",
													"    pm.expect(jsonData.message).to.not.be.empty;",
													"    pm.expect(jsonData.message).to.exist;",
													"});",
													"",
													"pm.test('Has data field', function () {",
													"    pm.expect(jsonData).to.have.property('data');",
													"    pm.expect(jsonData.data.error).to.have.property(\"code\");",
													"})",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "2dc7b5c5-1646-44cc-a035-cf570261d069",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"action\": \"auth.verify-otp\",\n  \"data\": {\n    \"customer_ref\": \"{{customer_ref}}\",\n    \"otp\": \"{{otp}}\",\n    \"otp_reference\": \"{{otp_reference}}\",\n    \"biller_code\": \"\",\n    \"user_agent\": \"{{use_agent}}\",\n    \"ip_address\": \"{{ip_address}}\"\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								},
								{
									"name": "Verify Login OTP  - Invalid token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f5e0abf3-8509-4716-bb7b-1fadeb2a77a5",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"pm.test(\"check for correct status code\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"check for correct error message\", function () {",
													"    pm.expect(jsonData.message).to.not.be.empty;",
													"    pm.expect(jsonData.message).to.exist;",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "a25ef54d-3d69-4d74-925e-7418abfa371d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "eyhhgkjhhfknnfhklshhfmsl"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"action\": \"auth.verify-otp\",\n  \"data\": {\n    \"customer_ref\": \"{{customer_ref}}\",\n    \"otp\": \"{{otp}}\",\n    \"otp_reference\": \"{{otp_reference}}\",\n    \"biller_code\": \"{{biller_code}}\",\n    \"user_agent\": \"{{use_agent}}\",\n    \"ip_address\": \"{{ip_address}}\"\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								},
								{
									"name": "Verify Login OTP  - No  token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f5e0abf3-8509-4716-bb7b-1fadeb2a77a5",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"",
													"pm.test(\"check for correct error message\", function () {",
													"    pm.expect(jsonData.message).to.not.be.empty;",
													"    pm.expect(jsonData.message).to.exist;",
													"});",
													"",
													"pm.test('Has data field', function () {",
													"    pm.expect(jsonData).to.have.property('data');",
													"    pm.expect(jsonData.data.error).to.have.property(\"code\");",
													"})",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "3f2786af-248a-409a-b6bf-286bc0f64df4",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"action\": \"auth.verify-otp\",\n  \"data\": {\n    \"customer_ref\": \"{{customer_ref}}\",\n    \"otp\": \"{{otp}}\",\n    \"otp_reference\": \"{{otp_reference}}\",\n    \"biller_code\": \"{{biller_code}}\",\n    \"user_agent\": \"{{use_agent}}\",\n    \"ip_address\": \"{{ip_address}}\"\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								}
							],
							"id": "c610760e-3df7-4264-ae1a-782cf1932c4e"
						},
						{
							"name": "Create PIN",
							"item": [
								{
									"name": "POST - Create PIN - Success",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a7ea8987-9c79-4b17-b730-2e30f29d7307",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"pm.test('Has status field', function(){ ",
													"    pm.expect(jsonData).to.have.property('status'); });",
													"",
													"pm.test('Has message field', function(){ ",
													"    pm.expect(jsonData).to.have.property('message');",
													"        pm.expect(jsonData.message).to.exist.and.not.be.empty;",
													" });",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "a3acabf3-8dae-4940-8e2a-a8b5e0b4b7f0",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"action\": \"auth.create-pin\",\n  \"data\": {\n    \"customer_ref\": \"{{customer_ref}}\",\n    \"biller_code\": \"{{biller_code}}\",\n    \"pin\": \"{{pin}}\",\n    \"pin_confirmation\": \"{{pin}}\"\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								},
								{
									"name": "POST - Create PIN - Confirm PIN Mismatch",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a12c816a-67aa-40cd-aa06-dcde947e1af4",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"pm.test('Has status field', function(){ ",
													"    pm.expect(jsonData).to.have.property('status'); ",
													"});",
													"pm.test('Has message field', function(){ ",
													"    pm.expect(jsonData).to.have.property('message'); ",
													"    pm.expect(jsonData.message).to.include('Validation failed: '); ",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "814262ee-d49f-42d2-9903-ead7627e8d2c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"action\": \"auth.create-pin\",\n  \"data\": {\n    \"customer_ref\": \"{{customer_ref}}\",\n    \"biller_code\": \"{{biller_code}}\",\n    \"pin\": \"{{pin}}\",\n    \"pin_confirmation\": \"{{wrong_pin}}\"\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								},
								{
									"name": "POST - Create PIN - Empty PIN Confirmation",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a12c816a-67aa-40cd-aa06-dcde947e1af4",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"pm.test('Has status field', function(){ ",
													"    pm.expect(jsonData).to.have.property('status'); ",
													"});",
													"pm.test('Has message field', function(){ ",
													"    pm.expect(jsonData).to.have.property('message'); ",
													"    pm.expect(jsonData.message).to.include('PIN Confirmation is required'); ",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "7f01b726-02d7-4dcf-a2b6-c532162b969c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"action\": \"auth.create-pin\",\n  \"data\": {\n    \"customer_ref\": \"{{customer_ref}}\",\n    \"biller_code\": \"{{biller_code}}\",\n    \"pin\": \"{{pin}}\",\n    \"pin_confirmation\": \"\"\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								},
								{
									"name": "POST - Create PIN - Empty PIN",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a12c816a-67aa-40cd-aa06-dcde947e1af4",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"pm.test('Has status field', function(){ ",
													"    pm.expect(jsonData).to.have.property('status'); ",
													"});",
													"pm.test('Has message field', function(){ ",
													"    pm.expect(jsonData).to.have.property('message'); ",
													"    pm.expect(jsonData.message).to.include('PIN is required'); ",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "78064925-1307-4557-82f7-a51e4aed8eee",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"action\": \"auth.create-pin\",\n  \"data\": {\n    \"customer_ref\": \"{{customer_ref}}\",\n    \"biller_code\": \"{{biller_code}}\",\n    \"pin\": \"\",\n    \"pin_confirmation\": \"{{wrong_pin}}\"\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								},
								{
									"name": "POST - Create PIN - Empty PIN and Empty PIN Confirmation",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a12c816a-67aa-40cd-aa06-dcde947e1af4",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"pm.test('Has status field', function(){ ",
													"    pm.expect(jsonData).to.have.property('status'); ",
													"});",
													"pm.test('Has message field', function(){ ",
													"    pm.expect(jsonData).to.have.property('message'); ",
													"    pm.expect(jsonData.message).to.include('PIN is required'); ",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "0ec70549-607c-4256-b1e2-d0dcb6d60601",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"action\": \"auth.create-pin\",\n  \"data\": {\n    \"customer_ref\": \"{{customer_ref}}\",\n    \"biller_code\": \"{{biller_code}}\",\n    \"pin\": \"\",\n    \"pin_confirmation\": \"\"\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								},
								{
									"name": "POST - Create PIN - Invalid Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a12c816a-67aa-40cd-aa06-dcde947e1af4",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"pm.test('Has status field', function(){ ",
													"    pm.expect(jsonData).to.have.property('status');",
													"        pm.expect(jsonData.status).to.eql('Failed');",
													" });",
													"",
													"pm.test('Has message field', function(){ ",
													"    pm.expect(jsonData).to.have.property('message');",
													"    pm.expect(jsonData.message).to.exist.and.not.be.empty;   ",
													"    });",
													"",
													"",
													"pm.test(\"check for correct error message\", function () {",
													"    pm.expect(jsonData.message).to.not.be.empty;",
													"    pm.expect(jsonData.message).to.exist;",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "71e37fa7-b1a7-4fff-947b-d909284cd9e1",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer 6ec10a2f18cf9f894c49462b7c24a3d2"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"action\": \"auth.create-pin\",\n  \"data\": {\n    \"customer_ref\": \"{{customer_ref}}\",\n    \"biller_code\": \"{{biller_code}}\",\n    \"pin\": \"{{pin}}\",\n    \"pin_confirmation\": \"{{pin}}\"\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								},
								{
									"name": "POST - Create PIN - No Auth Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a12c816a-67aa-40cd-aa06-dcde947e1af4",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"pm.test('Has status field', function(){ ",
													"    pm.expect(jsonData).to.have.property('status');",
													"        pm.expect(jsonData.status).to.eql('Failed');",
													" });",
													"",
													"pm.test('Has message field', function(){ ",
													"    pm.expect(jsonData).to.have.property('message');",
													"    pm.expect(jsonData.message).to.exist.and.not.be.empty;   ",
													"    });",
													"",
													"",
													"pm.test(\"check for correct error message\", function () {",
													"    pm.expect(jsonData.message).to.not.be.empty;",
													"    pm.expect(jsonData.message).to.exist;",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "c7aee4ef-84a1-4d62-9ff6-ae6b5c48168a",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"action\": \"auth.create-pin\",\n  \"data\": {\n    \"customer_ref\": \"{{customer_ref}}\",\n    \"biller_code\": \"{{biller_code}}\",\n    \"pin\": \"{{pin}}\",\n    \"pin_confirmation\": \"{{pin}}\"\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								}
							],
							"id": "69ee12c0-be23-4432-8b33-217fc56da9b8"
						},
						{
							"name": "Verify PIN",
							"item": [
								{
									"name": "POST - Verify PIN",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "db26fb47-60ab-4bcc-8c5f-613099b670a4",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"pm.test('Has status field', function(){ ",
													"    pm.expect(jsonData).to.have.property('status'); ",
													"});",
													"",
													"pm.test('Has message field', function(){ ",
													"    pm.expect(jsonData).to.have.property('message');",
													"    pm.expect(jsonData.message).to.include('OTP validated successfully');",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "bbb73687-d327-4e38-b1a0-57dfcd309ee1",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"action\": \"auth.verify-pin\",\n  \"data\": {\n    \"customer_ref\": \"{{customer_ref}}\",\n    \"pin\": \"{{pin}}\",\n    \"user_agent\": \"{{use_agent}}\",\n    \"ip_address\": \"{{ip_address}}\"\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								},
								{
									"name": "POST - Verify PIN - Wrong pin",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b84507b2-2d01-4e83-9a9d-7bc3b41ed424",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"pm.test('Has status field', function(){ ",
													"    pm.expect(jsonData).to.have.property('status');",
													"    pm.expect(jsonData.status).to.equal('Failed');",
													"});",
													"",
													"pm.test('Has message field', function(){ ",
													"    pm.expect(jsonData).to.have.property('message');",
													"    pm.expect(jsonData.message).to.include('Invalid PIN');",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "e5dedae1-6e08-4c61-ae91-2d87a1820142",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"action\": \"auth.verify-pin\",\n  \"data\": {\n    \"customer_ref\": \"{{customer_ref}}\",\n    \"pin\": \"{{wrong_pin}}\",\n    \"user_agent\": \"{{use_agent}}\",\n    \"ip_address\": \"{{ip_address}}\"\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								},
								{
									"name": "Verify PIN - Invalid Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b84507b2-2d01-4e83-9a9d-7bc3b41ed424",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"pm.test('Has status field', function(){ ",
													"    pm.expect(jsonData).to.have.property('status');",
													"        pm.expect(jsonData.status).to.eql('Failed');",
													" });",
													"",
													"pm.test('Has message field', function(){ ",
													"    pm.expect(jsonData).to.have.property('message');",
													"    pm.expect(jsonData.message).to.exist.and.not.be.empty;   ",
													"    });",
													"",
													"",
													"pm.test(\"check for correct error message\", function () {",
													"    pm.expect(jsonData.message).to.not.be.empty;",
													"    pm.expect(jsonData.message).to.exist;",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "06b2191d-f522-4b7b-9bcf-f05595e72a26",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer 6ec10a2f18cf9f894c49462b7c24a3d2"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"action\": \"auth.verify-pin\",\n  \"data\": {\n    \"customer_ref\": \"{{customer_ref}}\",\n    \"pin\": \"{{wrong_pin}}\",\n    \"user_agent\": \"{{use_agent}}\",\n    \"ip_address\": \"{{ip_address}}\"\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								},
								{
									"name": "Verify PIN - No Auth Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b84507b2-2d01-4e83-9a9d-7bc3b41ed424",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"pm.test('Has status field', function(){ ",
													"    pm.expect(jsonData).to.have.property('status');",
													"        pm.expect(jsonData.status).to.eql('Failed');",
													" });",
													"",
													"pm.test('Has message field', function(){ ",
													"    pm.expect(jsonData).to.have.property('message');",
													"    pm.expect(jsonData.message).to.exist.and.not.be.empty;   ",
													"    });",
													"",
													"",
													"pm.test(\"check for correct error message\", function () {",
													"    pm.expect(jsonData.message).to.not.be.empty;",
													"    pm.expect(jsonData.message).to.exist;",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "317e55eb-e715-40da-aeb6-86f749bcca72",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"action\": \"auth.verify-pin\",\n  \"data\": {\n    \"customer_ref\": \"{{customer_ref}}\",\n    \"pin\": \"{{wrong_pin}}\",\n    \"user_agent\": \"{{use_agent}}\",\n    \"ip_address\": \"{{ip_address}}\"\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								}
							],
							"id": "7a25539d-f341-450c-ad0b-8cea275908e2"
						},
						{
							"name": "Manage Biometrics",
							"item": [
								{
									"name": "Manage Biometrics - Success",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d19d57f1-555d-4a16-9e1a-268062adf821",
												"exec": [
													"const jsonData = pm.response.json();",
													"pm.test('Has status field', function(){ ",
													"    pm.expect(jsonData).to.have.property('status');",
													"    pm.expect(jsonData.status).to.eql('Successful');",
													"});",
													"",
													"pm.test('Has message field', function(){ ",
													"    pm.expect(jsonData).to.have.property('message');",
													"    pm.expect(jsonData.message).to.include('Biometric authentication enabled successfully');",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "f5521b0f-1a94-4e08-9b5a-3143909f8624",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"action\": \"auth.manage-biometrics\",\n  \"data\": {\n    \"customer_ref\": \"{{customer_ref}}\",\n    \"signature\": \"Biometric Signature\",\n    \"pin\": \"{{pin}}\"\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								},
								{
									"name": "Manage Biometrics - Empty Signature",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3b58e3b1-40da-4685-96d0-dd4b2e0df052",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"pm.test('Has status field', function(){ ",
													"    pm.expect(jsonData).to.have.property('status');",
													"    pm.expect(jsonData.status).to.eql('Failed');",
													"});",
													"",
													"pm.test('Has message field', function(){ ",
													"    pm.expect(jsonData).to.have.property('message');",
													"    pm.expect(jsonData.message).to.include('Signature is required');",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "b4a31413-d320-4ad1-821f-de125c7b9306",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"action\": \"auth.manage-biometrics\",\n  \"data\": {\n    \"customer_ref\": \"{{customer_ref}}\",\n    \"signature\": \"\",\n    \"pin\": \"{{pin}}\"\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								},
								{
									"name": "Manage Biometrics - Wrong PIN",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d19d57f1-555d-4a16-9e1a-268062adf821",
												"exec": [
													"const jsonData = pm.response.json();",
													"pm.test('Has status field', function(){ ",
													"    pm.expect(jsonData).to.have.property('status');",
													"    pm.expect(jsonData.status).to.eql('Failed');",
													"});",
													"",
													"pm.test('Has message field', function(){ ",
													"    pm.expect(jsonData).to.have.property('message');",
													"    pm.expect(jsonData.message).to.include('Invalid PIN');",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "6f363a3d-2d5a-4818-9d31-51bea524919d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"action\": \"auth.manage-biometrics\",\n  \"data\": {\n    \"customer_ref\": \"{{customer_ref}}\",\n    \"signature\": \"Biometric Signature\",\n    \"pin\": \"{{wrong_pin}}\"\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								},
								{
									"name": "Manage Biometrics - Empty PIN",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d19d57f1-555d-4a16-9e1a-268062adf821",
												"exec": [
													"const jsonData = pm.response.json();",
													"pm.test('Has status field', function(){ ",
													"    pm.expect(jsonData).to.have.property('status');",
													"    pm.expect(jsonData.status).to.eql('Failed');",
													"});",
													"",
													"pm.test('Has message field', function(){ ",
													"    pm.expect(jsonData).to.have.property('message');",
													"    pm.expect(jsonData.message).to.include('PIN is required');",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "4dd29964-fa97-42df-9d9c-facf6e0bbd23",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"action\": \"auth.manage-biometrics\",\n  \"data\": {\n    \"customer_ref\": \"{{customer_ref}}\",\n    \"signature\": \"Biometric Signature\",\n    \"pin\": \"\"\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								},
								{
									"name": "Manage Biometrics -  Invalid Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d19d57f1-555d-4a16-9e1a-268062adf821",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"pm.test('Has status field', function(){ ",
													"    pm.expect(jsonData).to.have.property('status');",
													"        pm.expect(jsonData.status).to.eql('Failed');",
													" });",
													"",
													"pm.test('Has message field', function(){ ",
													"    pm.expect(jsonData).to.have.property('message');",
													"    pm.expect(jsonData.message).to.exist.and.not.be.empty;   ",
													"    });",
													"",
													"",
													"pm.test(\"check for correct error message\", function () {",
													"    pm.expect(jsonData.message).to.not.be.empty;",
													"    pm.expect(jsonData.message).to.exist;",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "307cb1ac-eb2b-4652-a14e-35544652dc16",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer 6ec10a2f18cf9f894c49462b7c24a3d2"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"action\": \"auth.manage-biometrics\",\n  \"data\": {\n    \"customer_ref\": \"{{customer_ref}}\",\n    \"signature\": \"Biometric Signature\",\n    \"pin\": \"{{pin}}\"\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								},
								{
									"name": "Manage Biometrics -  No Auth Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d19d57f1-555d-4a16-9e1a-268062adf821",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"pm.test('Has status field', function(){ ",
													"    pm.expect(jsonData).to.have.property('status');",
													"        pm.expect(jsonData.status).to.eql('Failed');",
													" });",
													"",
													"pm.test('Has message field', function(){ ",
													"    pm.expect(jsonData).to.have.property('message');",
													"    pm.expect(jsonData.message).to.exist.and.not.be.empty;   ",
													"    });",
													"",
													"",
													"pm.test(\"check for correct error message\", function () {",
													"    pm.expect(jsonData.message).to.not.be.empty;",
													"    pm.expect(jsonData.message).to.exist;",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "2d232edd-aede-4340-ad9b-683854dbd393",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"action\": \"auth.manage-biometrics\",\n  \"data\": {\n    \"customer_ref\": \"{{customer_ref}}\",\n    \"signature\": \"Biometric Signature\",\n    \"pin\": \"{{pin}}\"\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								}
							],
							"id": "665ab87d-04c9-4073-acf5-00d7f5be26ef"
						},
						{
							"name": "Create Password",
							"item": [
								{
									"name": "Create Password - Success",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b52a90f1-83f3-438c-b523-eeaa6cf75251",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"pm.test('Has status field', function(){ ",
													"    pm.expect(jsonData).to.have.property('status'); ",
													"});",
													"",
													"pm.test('Has message field', function(){ ",
													"    pm.expect(jsonData).to.have.property('message');",
													"    pm.expect(jsonData.message).to.include('Validation successful');",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "a24160ee-24be-47b4-b34f-6d5729b6fa8c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"action\": \"auth.create-password\",\n  \"data\": {\n    \"customer_ref\": \"{{customer_ref}}\",\n    \"biller_code\": \"{{biller_code}}\",\n    \"password\": \"{{password}}\",\n    \"password_confirmation\": \"{{password}}\"\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								},
								{
									"name": "Create Password Confirmation Mismatch",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "65466b27-fdf7-4616-8e0f-15b2da4e6813",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"pm.test('Has status field', function(){ ",
													"    pm.expect(jsonData).to.have.property('status'); ",
													"});",
													"",
													"pm.test('Has message field', function(){ ",
													"    pm.expect(jsonData).to.have.property('message');",
													"    pm.expect(jsonData.message).to.include('Validation failed');",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "32a8b636-5c5c-4c52-a041-18060fbbd695",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"action\": \"auth.create-password\",\n  \"data\": {\n    \"customer_ref\": \"{{customer_ref}}\",\n    \"biller_code\": \"{{biller_code}}\",\n    \"password\": \"{{password}}\",\n    \"password_confirmation\": \"{{wrong_password}}\"\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								},
								{
									"name": "Create Password - Empty Password",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "65466b27-fdf7-4616-8e0f-15b2da4e6813",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"pm.test('Has status field', function(){ ",
													"    pm.expect(jsonData).to.have.property('status'); ",
													"});",
													"",
													"pm.test('Has message field', function(){ ",
													"    pm.expect(jsonData).to.have.property('message');",
													"    pm.expect(jsonData.message).to.include('Password is required');",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "c06d9bfe-3ece-4597-ad45-4b39fd6e3386",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"action\": \"auth.create-password\",\n  \"data\": {\n    \"customer_ref\": \"{{customer_ref}}\",\n    \"biller_code\": \"{{biller_code}}\",\n    \"password\": \"\",\n    \"password_confirmation\": \"{{wrong_password}}\"\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								},
								{
									"name": "Create Password - Empty Password Confirmation",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "65466b27-fdf7-4616-8e0f-15b2da4e6813",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"pm.test('Has status field', function(){ ",
													"    pm.expect(jsonData).to.have.property('status'); ",
													"});",
													"",
													"pm.test('Has message field', function(){ ",
													"    pm.expect(jsonData).to.have.property('message');",
													"    pm.expect(jsonData.message).to.include('Password is required');",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "0e71fb41-4bcc-4113-8969-8a7c8ec3f85d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"action\": \"auth.create-password\",\n  \"data\": {\n    \"customer_ref\": \"{{customer_ref}}\",\n    \"biller_code\": \"{{biller_code}}\",\n    \"password\": \"{{password}}\",\n    \"password_confirmation\": \"\"\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								},
								{
									"name": "Create Password - Empty Password and Password Confirmation",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "65466b27-fdf7-4616-8e0f-15b2da4e6813",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"pm.test('Has status field', function(){ ",
													"    pm.expect(jsonData).to.have.property('status'); ",
													"});",
													"",
													"pm.test('Has message field', function(){ ",
													"    pm.expect(jsonData).to.have.property('message');",
													"    pm.expect(jsonData.message).to.include('Password is required');",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "9659c756-9ef4-439c-b1a3-e0a1ddd3a950",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"action\": \"auth.create-password\",\n  \"data\": {\n    \"customer_ref\": \"{{customer_ref}}\",\n    \"biller_code\": \"{{biller_code}}\",\n    \"password\": \"{{password}}\",\n    \"password_confirmation\": \"\"\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								},
								{
									"name": "Create Password - Invalid Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "65466b27-fdf7-4616-8e0f-15b2da4e6813",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"pm.test('Has status field', function(){ ",
													"    pm.expect(jsonData).to.have.property('status'); ",
													"    pm.expect(jsonData.status).to.eql('Failed');   ",
													"});",
													"",
													"pm.test('Has message field', function(){ ",
													"    pm.expect(jsonData).to.have.property('message');",
													"    pm.expect(jsonData.message).to.exist.and.not.be.empty;   ",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "911f27f1-3812-4ddd-988a-ce787e63e38d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer 6ec10a2f18cf9f894c49462b7c24a3d2"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"action\": \"auth.create-password\",\n  \"data\": {\n    \"customer_ref\": \"{{customer_ref}}\",\n    \"biller_code\": \"{{biller_code}}\",\n    \"password\": \"{{password}}\",\n    \"password_confirmation\": \"{{password}}\"\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								},
								{
									"name": "Create Password - No Auth Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "65466b27-fdf7-4616-8e0f-15b2da4e6813",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"pm.test('Has status field', function(){ ",
													"    pm.expect(jsonData).to.have.property('status'); ",
													"        pm.expect(jsonData.status).to.eql('Failed');   ",
													"",
													"});",
													"",
													"pm.test('Has message field', function(){ ",
													"    pm.expect(jsonData).to.have.property('message');",
													"    pm.expect(jsonData.message).to.exist.and.not.be.empty;   ",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "bec01b98-bb71-4cc9-9d7a-3c4ea7991449",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"action\": \"auth.create-password\",\n  \"data\": {\n    \"customer_ref\": \"{{customer_ref}}\",\n    \"biller_code\": \"{{biller_code}}\",\n    \"password\": \"{{password}}\",\n    \"password_confirmation\": \"{{password}}\"\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								}
							],
							"id": "a03e7763-017e-4344-8417-3ea0bfd51210"
						},
						{
							"name": "Verify Password",
							"item": [
								{
									"name": "Verify Password - Success",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2b2d7cbc-2633-4b28-98f6-80095b9930be",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"pm.test('Has status field', function(){ ",
													"    pm.expect(jsonData).to.have.property('status'); ",
													"});",
													"",
													"pm.test('Has message field', function(){ ",
													"    pm.expect(jsonData).to.have.property('message');",
													"    pm.expect(jsonData.message).to.include('Validation successful');",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "82eff47f-bff8-433e-8a83-7c78620b9bed",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"action\": \"auth.verify-password\",\n  \"data\": {\n    \"customer_ref\": \"{{customer_ref}}\",\n    \"password\": \"{{password}}\",\n    \"biller_code\": \"{{biller_code}}\",\n    \"user_agent\": \"{{use_agent}}\",\n    \"ip_address\": \"{{ip_address}}\"\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								},
								{
									"name": "Verify Password - Wrong Password",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "96bd4bcb-5afb-43ed-8fae-0375287d3fdd",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"pm.test('Has status field', function(){ ",
													"    pm.expect(jsonData).to.have.property('status'); ",
													"});",
													"",
													"pm.test('Has message field', function(){ ",
													"    pm.expect(jsonData).to.have.property('message');",
													"    pm.expect(jsonData.message).to.include('Validation failed');",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "35bfb740-2cdb-4cfa-854f-98f2a8476ad8",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"action\": \"auth.verify-password\",\n  \"data\": {\n    \"customer_ref\": \"{{customer_ref}}\",\n    \"password\": \"{{wrong_password}}\",\n    \"biller_code\": \"{{biller_code}}\",\n    \"user_agent\": \"{{use_agent}}\",\n    \"ip_address\": \"{{ip_address}}\"\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								},
								{
									"name": "Verify Password - Empty Password",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "96bd4bcb-5afb-43ed-8fae-0375287d3fdd",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"pm.test('Has status field', function(){ ",
													"    pm.expect(jsonData).to.have.property('status'); ",
													"});",
													"",
													"pm.test('Has message field', function(){ ",
													"    pm.expect(jsonData).to.have.property('message');",
													"    pm.expect(jsonData.message).to.include('Password is required');",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "4c0f4528-1829-433d-932e-5898df2ee5b3",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"action\": \"auth.verify-password\",\n  \"data\": {\n    \"customer_ref\": \"{{customer_ref}}\",\n    \"password\": \"\",\n    \"biller_code\": \"{{biller_code}}\",\n    \"user_agent\": \"{{use_agent}}\",\n    \"ip_address\": \"{{ip_address}}\"\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								},
								{
									"name": "Verify Password - Invalid Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "96bd4bcb-5afb-43ed-8fae-0375287d3fdd",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"pm.test('Has status field', function(){ ",
													"    pm.expect(jsonData).to.have.property('status');",
													"        pm.expect(jsonData.status).to.eql('Failed');   ",
													" ",
													"});",
													"",
													"pm.test('Has message field', function(){ ",
													"    pm.expect(jsonData).to.have.property('message');",
													"    pm.expect(jsonData.message).to.exist.and.not.be.empty;",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "6ef8e62e-c30a-4371-a885-8278804743ed",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{wrong token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"action\": \"auth.verify-password\",\n  \"data\": {\n    \"customer_ref\": \"{{customer_ref}}\",\n    \"password\": \"{{password}}\",\n    \"biller_code\": \"{{biller_code}}\",\n    \"user_agent\": \"{{use_agent}}\",\n    \"ip_address\": \"{{ip_address}}\"\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								},
								{
									"name": "Verify Password - No Auth Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "96bd4bcb-5afb-43ed-8fae-0375287d3fdd",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"pm.test('Has status field', function(){ ",
													"    pm.expect(jsonData).to.have.property('status');",
													"        pm.expect(jsonData.status).to.eql('Failed');   ",
													" ",
													"});",
													"",
													"pm.test('Has message field', function(){ ",
													"    pm.expect(jsonData).to.have.property('message');",
													"    pm.expect(jsonData.message).to.exist.and.not.be.empty;",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "f695a920-c269-4df9-b475-3c4e937831df",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{wrong token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"action\": \"auth.verify-password\",\n  \"data\": {\n    \"customer_ref\": \"{{customer_ref}}\",\n    \"password\": \"{{password}}\",\n    \"biller_code\": \"{{biller_code}}\",\n    \"user_agent\": \"{{use_agent}}\",\n    \"ip_address\": \"{{ip_address}}\"\n  }\n}"
										},
										"url": "{{base_url}}"
									},
									"response": []
								}
							],
							"id": "9a9d8a7d-0b9b-4cb2-b844-a120f06ddaba"
						}
					],
					"id": "4b89722f-9d2e-4366-aaac-e7dca096c960"
				},
				{
					"name": "Logout",
					"item": [
						{
							"name": "POST - Logout",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test('Status code 200', function () { pm.response.to.have.status(200); });",
											"var json = {}; try { json = pm.response.json(); } catch(e) {}",
											"pm.test('Has status field', function(){ pm.expect(json).to.have.property('status'); });",
											"pm.test('Has message field', function(){ pm.expect(json).to.have.property('message'); });",
											"pm.test('Logout handled', function(){ pm.expect(['Successful','Failed']).to.include(json.status); });"
										],
										"id": "a41b9b54-093a-45f5-a06b-28ac14a39805"
									}
								}
							],
							"id": "94a19dac-87c3-438b-81c6-051e12c9ca0d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{Token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"action\": \"auth.logout\",\n  \"data\": {\n    \"customer_ref\": \"{{customer_ref}}\"\n  }\n}"
								},
								"url": "{{base_url}}"
							},
							"response": []
						},
						{
							"name": "Logout - Invalid Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a41b9b54-093a-45f5-a06b-28ac14a39805",
										"exec": [
											"const jsonData = pm.response.json();",
											"",
											"pm.test('Has status field', function(){ ",
											"    pm.expect(jsonData).to.have.property('status');",
											"        pm.expect(jsonData.status).to.eql('Failed');   ",
											" ",
											"});",
											"",
											"pm.test('Has message field', function(){ ",
											"    pm.expect(jsonData).to.have.property('message');",
											"    pm.expect(jsonData.message).to.exist.and.not.be.empty;",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "ffb756bd-b5f3-466e-be7c-b87064278064",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer 6ec10a2f18cf9f894c49462b7c24a3d2"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"action\": \"auth.logout\",\n  \"data\": {\n    \"customer_ref\": \"{{customer_ref}}\"\n  }\n}"
								},
								"url": "{{base_url}}"
							},
							"response": []
						},
						{
							"name": "Logout - No Auth Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a41b9b54-093a-45f5-a06b-28ac14a39805",
										"exec": [
											"const jsonData = pm.response.json();",
											"",
											"pm.test('Has status field', function(){ ",
											"    pm.expect(jsonData).to.have.property('status');",
											"        pm.expect(jsonData.status).to.eql('Failed');   ",
											" ",
											"});",
											"",
											"pm.test('Has message field', function(){ ",
											"    pm.expect(jsonData).to.have.property('message');",
											"    pm.expect(jsonData.message).to.exist.and.not.be.empty;",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "27db3dc2-675c-48bd-9d45-a23172fb4476",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{Token}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"action\": \"auth.logout\",\n  \"data\": {\n    \"customer_ref\": \"{{customer_ref}}\"\n  }\n}"
								},
								"url": "{{base_url}}"
							},
							"response": []
						}
					],
					"id": "a25b086f-c458-4acb-95c7-b1c8c5e81e33"
				}
			],
			"id": "da46a77d-db7b-44f4-9c18-919c7a7e40dc"
		},
		{
			"name": "Settings",
			"item": [
				{
					"name": "Pin/Password Management [R] Copy",
					"item": [
						{
							"name": "Reset PIN",
							"item": [
								{
									"name": "Set New PIN",
									"item": [
										{
											"name": "Set New PIN - Success",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0c59aeb6-a9fd-450a-9373-4ea7900fc899",
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.test('Has status field', function(){ \r",
															"    pm.expect(jsonData).to.have.property('status'); \r",
															"});\r",
															"\r",
															"pm.test('Has message field', function(){ \r",
															"    pm.expect(jsonData).to.have.property('message');\r",
															"    pm.expect(jsonData.message).to.include(\"successful\");\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "718bc4dd-5ff6-4718-8e57-d3bf84881093",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"action\": \"auth.create-pin\",\n    \"data\": {\n        \"customer_ref\": \"{{customer_ref}}\", // 234 Format\n        \"biller_code\": \"biller_code\",\n        \"pin\": \"{{pin}}\",\n        \"pin_confirmation\": \"{{pin}}\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}"
											},
											"response": [
												{
													"id": "f270fda5-02ee-43b6-ae4e-f3e986fb78b3",
													"name": "Set New Pin Pin [R]",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"action\": \"auth.login-pin\",\n    \"data\": {\n        \"customer_ref\": \"1234567890123\", // 234 Format\n        \"pin\": \"12345\",\n        \"pin_confirmation\": \"12345\"\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": "{{url}}/auth/create-pin"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": "",
															"type": "text"
														}
													],
													"cookie": [
														{
															"expires": "Invalid Date",
															"domain": "",
															"path": ""
														}
													],
													"responseTime": null,
													"body": "{\n    \"status\": \"Successful\",\n    \"message\": \"Transaction processed successfully\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"PaywithAccount\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"status\": \"ACTIVE\",\n            \"created_on\": \"2020-04-05 23:08:01\",\n            \"meta\": {}\n        },\n        \"client_info\": {\n            \"name\": null,\n            \"id\": null,\n            \"bank_cbn_code\": null,\n            \"bank_name\": null,\n            \"console_url\": null,\n            \"js_background_image\": null,\n            \"css_url\": null,\n            \"logo_url\": null,\n            \"footer_text\": null,\n            \"show_options_icon\": false,\n            \"paginate\": false,\n            \"paginate_count\": 0,\n            \"options\": null,\n            \"merchant\": null,\n            \"colors\": null,\n            \"meta\": null\n        }\n    }\n}"
												}
											]
										},
										{
											"name": "Set New PIN - PIN Confirmation Mismatch",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0c59aeb6-a9fd-450a-9373-4ea7900fc899",
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.test('Has status field', function(){ \r",
															"    pm.expect(jsonData).to.have.property('status'); \r",
															"});\r",
															"\r",
															"pm.test('Has message field', function(){ \r",
															"    pm.expect(jsonData).to.have.property('message');\r",
															"    pm.expect(jsonData.message).to.include(\"Validation failed\");\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "21bfbc3c-2995-4f76-91db-4fd20e4d4134",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"action\": \"auth.create-pin\",\n    \"data\": {\n        \"customer_ref\": \"{{customer_ref}}\", // 234 Format\n        \"biller_code\": \"biller_code\",\n        \"pin\": \"{{pin}}\",\n        \"pin_confirmation\": \"{{wrong_pin}}\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}"
											},
											"response": [
												{
													"id": "47c350ac-5754-47e9-a099-01f85e5bc65b",
													"name": "Set New Pin Pin [R]",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"action\": \"auth.login-pin\",\n    \"data\": {\n        \"customer_ref\": \"1234567890123\", // 234 Format\n        \"pin\": \"12345\",\n        \"pin_confirmation\": \"12345\"\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": "{{url}}/auth/create-pin"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": "",
															"type": "text"
														}
													],
													"cookie": [
														{
															"expires": "Invalid Date",
															"domain": "",
															"path": ""
														}
													],
													"responseTime": null,
													"body": "{\n    \"status\": \"Successful\",\n    \"message\": \"Transaction processed successfully\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"PaywithAccount\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"status\": \"ACTIVE\",\n            \"created_on\": \"2020-04-05 23:08:01\",\n            \"meta\": {}\n        },\n        \"client_info\": {\n            \"name\": null,\n            \"id\": null,\n            \"bank_cbn_code\": null,\n            \"bank_name\": null,\n            \"console_url\": null,\n            \"js_background_image\": null,\n            \"css_url\": null,\n            \"logo_url\": null,\n            \"footer_text\": null,\n            \"show_options_icon\": false,\n            \"paginate\": false,\n            \"paginate_count\": 0,\n            \"options\": null,\n            \"merchant\": null,\n            \"colors\": null,\n            \"meta\": null\n        }\n    }\n}"
												}
											]
										},
										{
											"name": "Set New PIN - Empty PIN",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0c59aeb6-a9fd-450a-9373-4ea7900fc899",
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.test('Has status field', function(){ \r",
															"    pm.expect(jsonData).to.have.property('status'); \r",
															"});\r",
															"\r",
															"pm.test('Has message field', function(){ \r",
															"    pm.expect(jsonData).to.have.property('message');\r",
															"    pm.expect(jsonData.message).to.include(\"PIN is required\");\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "f2763027-95e4-4db7-8756-2bbd6789ec92",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"action\": \"auth.create-pin\",\n    \"data\": {\n        \"customer_ref\": \"{{customer_ref}}\", // 234 Format\n        \"biller_code\": \"biller_code\",\n        \"pin\": \"\",\n        \"pin_confirmation\": \"{{pin}}\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}"
											},
											"response": [
												{
													"id": "ff4f8691-762c-4efd-907f-ff4206e77195",
													"name": "Set New Pin Pin [R]",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"action\": \"auth.login-pin\",\n    \"data\": {\n        \"customer_ref\": \"1234567890123\", // 234 Format\n        \"pin\": \"12345\",\n        \"pin_confirmation\": \"12345\"\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": "{{url}}/auth/create-pin"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": "",
															"type": "text"
														}
													],
													"cookie": [
														{
															"expires": "Invalid Date",
															"domain": "",
															"path": ""
														}
													],
													"responseTime": null,
													"body": "{\n    \"status\": \"Successful\",\n    \"message\": \"Transaction processed successfully\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"PaywithAccount\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"status\": \"ACTIVE\",\n            \"created_on\": \"2020-04-05 23:08:01\",\n            \"meta\": {}\n        },\n        \"client_info\": {\n            \"name\": null,\n            \"id\": null,\n            \"bank_cbn_code\": null,\n            \"bank_name\": null,\n            \"console_url\": null,\n            \"js_background_image\": null,\n            \"css_url\": null,\n            \"logo_url\": null,\n            \"footer_text\": null,\n            \"show_options_icon\": false,\n            \"paginate\": false,\n            \"paginate_count\": 0,\n            \"options\": null,\n            \"merchant\": null,\n            \"colors\": null,\n            \"meta\": null\n        }\n    }\n}"
												}
											]
										},
										{
											"name": "Set New PIN - Empty PIN Confirmation",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0c59aeb6-a9fd-450a-9373-4ea7900fc899",
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.test('Has status field', function(){ \r",
															"    pm.expect(jsonData).to.have.property('status'); \r",
															"});\r",
															"\r",
															"pm.test('Has message field', function(){ \r",
															"    pm.expect(jsonData).to.have.property('message');\r",
															"    pm.expect(jsonData.message).to.include(\"PIN Confirmation is required\");\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "41671a1d-d6b3-42e5-b58c-4a315dd10594",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"action\": \"auth.create-pin\",\n    \"data\": {\n        \"customer_ref\": \"{{customer_ref}}\", // 234 Format\n        \"biller_code\": \"biller_code\",\n        \"pin\": \"{{pin}}\",\n        \"pin_confirmation\": \"\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}"
											},
											"response": [
												{
													"id": "b5a3ca31-3f6f-436d-a98c-1dc7410dccf3",
													"name": "Set New Pin Pin [R]",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"action\": \"auth.login-pin\",\n    \"data\": {\n        \"customer_ref\": \"1234567890123\", // 234 Format\n        \"pin\": \"12345\",\n        \"pin_confirmation\": \"12345\"\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": "{{url}}/auth/create-pin"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": "",
															"type": "text"
														}
													],
													"cookie": [
														{
															"expires": "Invalid Date",
															"domain": "",
															"path": ""
														}
													],
													"responseTime": null,
													"body": "{\n    \"status\": \"Successful\",\n    \"message\": \"Transaction processed successfully\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"PaywithAccount\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"status\": \"ACTIVE\",\n            \"created_on\": \"2020-04-05 23:08:01\",\n            \"meta\": {}\n        },\n        \"client_info\": {\n            \"name\": null,\n            \"id\": null,\n            \"bank_cbn_code\": null,\n            \"bank_name\": null,\n            \"console_url\": null,\n            \"js_background_image\": null,\n            \"css_url\": null,\n            \"logo_url\": null,\n            \"footer_text\": null,\n            \"show_options_icon\": false,\n            \"paginate\": false,\n            \"paginate_count\": 0,\n            \"options\": null,\n            \"merchant\": null,\n            \"colors\": null,\n            \"meta\": null\n        }\n    }\n}"
												}
											]
										},
										{
											"name": "Set New PIN - Empty PIN and PIN Confirmation",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0c59aeb6-a9fd-450a-9373-4ea7900fc899",
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.test('Has status field', function(){ \r",
															"    pm.expect(jsonData).to.have.property('status'); \r",
															"});\r",
															"\r",
															"pm.test('Has message field', function(){ \r",
															"    pm.expect(jsonData).to.have.property('message');\r",
															"    pm.expect(jsonData.message).to.include(\"PIN is required\");\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "f810ccdb-1674-4767-93b4-65765e61781a",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"action\": \"auth.create-pin\",\n    \"data\": {\n        \"customer_ref\": \"{{customer_ref}}\", // 234 Format\n        \"biller_code\": \"biller_code\",\n        \"pin\": \"\",\n        \"pin_confirmation\": \"\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}"
											},
											"response": [
												{
													"id": "ec8733ac-ebb3-4d0e-893b-181133da4bb3",
													"name": "Set New Pin Pin [R]",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"action\": \"auth.login-pin\",\n    \"data\": {\n        \"customer_ref\": \"1234567890123\", // 234 Format\n        \"pin\": \"12345\",\n        \"pin_confirmation\": \"12345\"\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": "{{url}}/auth/create-pin"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": "",
															"type": "text"
														}
													],
													"cookie": [
														{
															"expires": "Invalid Date",
															"domain": "",
															"path": ""
														}
													],
													"responseTime": null,
													"body": "{\n    \"status\": \"Successful\",\n    \"message\": \"Transaction processed successfully\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"PaywithAccount\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"status\": \"ACTIVE\",\n            \"created_on\": \"2020-04-05 23:08:01\",\n            \"meta\": {}\n        },\n        \"client_info\": {\n            \"name\": null,\n            \"id\": null,\n            \"bank_cbn_code\": null,\n            \"bank_name\": null,\n            \"console_url\": null,\n            \"js_background_image\": null,\n            \"css_url\": null,\n            \"logo_url\": null,\n            \"footer_text\": null,\n            \"show_options_icon\": false,\n            \"paginate\": false,\n            \"paginate_count\": 0,\n            \"options\": null,\n            \"merchant\": null,\n            \"colors\": null,\n            \"meta\": null\n        }\n    }\n}"
												}
											]
										},
										{
											"name": "Set New PIN - Invalid Token",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0c59aeb6-a9fd-450a-9373-4ea7900fc899",
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.test('Has status field', function(){\r",
															"    pm.expect(jsonData).to.have.property('status');\r",
															"    pm.expect(jsonData.status).to.eql('Failed');\r",
															"});\r",
															"pm.test('Has message field', function(){\r",
															"    pm.expect(jsonData).to.have.property('message');\r",
															"    pm.expect(jsonData.message).to.exist.and.not.be.empty;   \r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "753f1ae4-ca30-4876-bbbc-4650b7cc2db5",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{wrong_token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"action\": \"auth.create-pin\",\n    \"data\": {\n        \"customer_ref\": \"{{customer_ref}}\", // 234 Format\n        \"biller_code\": \"biller_code\",\n        \"pin\": \"\",\n        \"pin_confirmation\": \"\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}"
											},
											"response": [
												{
													"id": "32d1a394-c9f1-4121-8d7d-64e7c98fd3ff",
													"name": "Set New Pin Pin [R]",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"action\": \"auth.login-pin\",\n    \"data\": {\n        \"customer_ref\": \"1234567890123\", // 234 Format\n        \"pin\": \"12345\",\n        \"pin_confirmation\": \"12345\"\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": "{{url}}/auth/create-pin"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": "",
															"type": "text"
														}
													],
													"cookie": [
														{
															"expires": "Invalid Date",
															"domain": "",
															"path": ""
														}
													],
													"responseTime": null,
													"body": "{\n    \"status\": \"Successful\",\n    \"message\": \"Transaction processed successfully\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"PaywithAccount\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"status\": \"ACTIVE\",\n            \"created_on\": \"2020-04-05 23:08:01\",\n            \"meta\": {}\n        },\n        \"client_info\": {\n            \"name\": null,\n            \"id\": null,\n            \"bank_cbn_code\": null,\n            \"bank_name\": null,\n            \"console_url\": null,\n            \"js_background_image\": null,\n            \"css_url\": null,\n            \"logo_url\": null,\n            \"footer_text\": null,\n            \"show_options_icon\": false,\n            \"paginate\": false,\n            \"paginate_count\": 0,\n            \"options\": null,\n            \"merchant\": null,\n            \"colors\": null,\n            \"meta\": null\n        }\n    }\n}"
												}
											]
										},
										{
											"name": "Set New PIN - No Auth Token",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0c59aeb6-a9fd-450a-9373-4ea7900fc899",
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.test('Has status field', function(){\r",
															"    pm.expect(jsonData).to.have.property('status');\r",
															"    pm.expect(jsonData.status).to.eql('Failed');\r",
															"});\r",
															"pm.test('Has message field', function(){\r",
															"    pm.expect(jsonData).to.have.property('message');\r",
															"    pm.expect(jsonData.message).to.exist.and.not.be.empty;   \r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "58643356-c62d-4f3d-b69e-fa9400cc92db",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{Token}}",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"action\": \"auth.create-pin\",\n    \"data\": {\n        \"customer_ref\": \"{{customer_ref}}\", // 234 Format\n        \"biller_code\": \"biller_code\",\n        \"pin\": \"\",\n        \"pin_confirmation\": \"\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}"
											},
											"response": [
												{
													"id": "d8f67ab6-b64d-4d87-a08a-302d7705ccde",
													"name": "Set New Pin Pin [R]",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"action\": \"auth.login-pin\",\n    \"data\": {\n        \"customer_ref\": \"1234567890123\", // 234 Format\n        \"pin\": \"12345\",\n        \"pin_confirmation\": \"12345\"\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": "{{url}}/auth/create-pin"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": "",
															"type": "text"
														}
													],
													"cookie": [
														{
															"expires": "Invalid Date",
															"domain": "",
															"path": ""
														}
													],
													"responseTime": null,
													"body": "{\n    \"status\": \"Successful\",\n    \"message\": \"Transaction processed successfully\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"PaywithAccount\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"status\": \"ACTIVE\",\n            \"created_on\": \"2020-04-05 23:08:01\",\n            \"meta\": {}\n        },\n        \"client_info\": {\n            \"name\": null,\n            \"id\": null,\n            \"bank_cbn_code\": null,\n            \"bank_name\": null,\n            \"console_url\": null,\n            \"js_background_image\": null,\n            \"css_url\": null,\n            \"logo_url\": null,\n            \"footer_text\": null,\n            \"show_options_icon\": false,\n            \"paginate\": false,\n            \"paginate_count\": 0,\n            \"options\": null,\n            \"merchant\": null,\n            \"colors\": null,\n            \"meta\": null\n        }\n    }\n}"
												}
											]
										}
									],
									"id": "78a5883b-c7f7-4109-aade-de4750782f47"
								},
								{
									"name": "Send OTP",
									"item": [
										{
											"name": "Send OTP [R] - Success",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6f71931d-3e74-4e98-8257-6494d87d8ea8",
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Response Data is correctly returned\", function () {\r",
															"    pm.expect(jsonData.status).to.eql(\"Successful\");\r",
															"    pm.expect(jsonData.data.provider_response.delivery_status).to.exist;\r",
															"    pm.expect(jsonData.data.provider_response.expires_on).to.exist;\r",
															"    pm.expect(jsonData.data.provider_response.prompt_message).to.exist;\r",
															"    pm.expect(jsonData.data.provider_response.reference).to.exist;\r",
															"})\r",
															"\r",
															"pm.test(\"Set reference as a collection variable\", function () {\r",
															" pm.collectionVariables.set(\"otp_reference\", jsonData.data.provider_response.reference);\r",
															"})"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "676117d9-b35f-4571-ac44-9af1d4cde237",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"action\": \"auth.send-login-otp\",\n    \"data\": {\n        \"customer_ref\": \"{{customer_ref}}\", // 234 Format\n        \"biller_code\": \"{{biller_code}}\" // send this when you have it\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}"
											},
											"response": [
												{
													"id": "fb788b22-9855-4176-a51d-5ef2fc79d411",
													"name": "Send Login OTP",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"action\": \"auth.send-login-otp\",\n    \"data\": {\n        \"customer_ref\": \"1234567890123\", // 234 Format\n        \"biller_code\": \"biller_code\",\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": "{{url}}/auth/login-otp"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": "",
															"type": "text"
														}
													],
													"cookie": [
														{
															"expires": "Invalid Date",
															"domain": "",
															"path": ""
														}
													],
													"responseTime": null,
													"body": "{\n    \"status\": \"Successful\",\n    \"message\": \"Request processed successfully.\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"PaywithAccount\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"delivery_status\": \"logged\",\n            \"cost\": 100,\n            \"expires_on\": \"2025-03-25-12-50-16\",\n            \"ussd_code\": null,\n            \"prompt_message\": \"A message has been sent your WhatsApp ****14. Please retrieve the OTP from the message\",\n            \"reference\": \"af78ec77-2ec8-4357-b4e1-1f0e6f2fabc1\"\n        },\n        \"client_info\": null\n    }\n}"
												}
											]
										},
										{
											"name": "Send OTP [R] - Empty Customer Reference",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6f71931d-3e74-4e98-8257-6494d87d8ea8",
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.test('Has status field', function(){\r",
															"    pm.expect(jsonData).to.have.property('status'); \r",
															"    pm.expect(jsonData.status).to.exist.and.not.be.empty; \r",
															"});\r",
															"\r",
															"pm.test('Has message field', function(){\r",
															"    pm.expect(jsonData).to.have.property('message'); \r",
															"    pm.expect(jsonData.message).to.include('Customer ref required');\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "bafaf7bb-30cd-485d-a650-f739b3900874",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"action\": \"auth.send-login-otp\",\n    \"data\": {\n        \"customer_ref\": \"\", // 234 Format\n        \"biller_code\": \"{{biller_code}}\" // send this when you have it\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}"
											},
											"response": [
												{
													"id": "7fc4929d-66bc-4de0-8aa3-3f4721a4a207",
													"name": "Send Login OTP",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"action\": \"auth.send-login-otp\",\n    \"data\": {\n        \"customer_ref\": \"1234567890123\", // 234 Format\n        \"biller_code\": \"biller_code\",\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": "{{url}}/auth/login-otp"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": "",
															"type": "text"
														}
													],
													"cookie": [
														{
															"expires": "Invalid Date",
															"domain": "",
															"path": ""
														}
													],
													"responseTime": null,
													"body": "{\n    \"status\": \"Successful\",\n    \"message\": \"Request processed successfully.\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"PaywithAccount\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"delivery_status\": \"logged\",\n            \"cost\": 100,\n            \"expires_on\": \"2025-03-25-12-50-16\",\n            \"ussd_code\": null,\n            \"prompt_message\": \"A message has been sent your WhatsApp ****14. Please retrieve the OTP from the message\",\n            \"reference\": \"af78ec77-2ec8-4357-b4e1-1f0e6f2fabc1\"\n        },\n        \"client_info\": null\n    }\n}"
												}
											]
										},
										{
											"name": "Send OTP [R] - Empty Biller Code",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6f71931d-3e74-4e98-8257-6494d87d8ea8",
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.test('Has status field', function(){\r",
															"    pm.expect(jsonData).to.have.property('status'); \r",
															"    pm.expect(jsonData.status).to.exist.and.not.be.empty; \r",
															"});\r",
															"\r",
															"pm.test('Has message field', function(){\r",
															"    pm.expect(jsonData).to.have.property('message'); \r",
															"    pm.expect(jsonData.message).to.include('Biller code is required');\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "e417e292-9e5d-43d1-b181-0691c5799cd6",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"action\": \"auth.send-login-otp\",\n    \"data\": {\n        \"customer_ref\": \"{{customer_ref}}\", // 234 Format\n        \"biller_code\": \"\" // send this when you have it\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}"
											},
											"response": [
												{
													"id": "72e5e687-4766-4fa6-b706-bdaf5798d6c0",
													"name": "Send Login OTP",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"action\": \"auth.send-login-otp\",\n    \"data\": {\n        \"customer_ref\": \"1234567890123\", // 234 Format\n        \"biller_code\": \"biller_code\",\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": "{{url}}/auth/login-otp"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": "",
															"type": "text"
														}
													],
													"cookie": [
														{
															"expires": "Invalid Date",
															"domain": "",
															"path": ""
														}
													],
													"responseTime": null,
													"body": "{\n    \"status\": \"Successful\",\n    \"message\": \"Request processed successfully.\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"PaywithAccount\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"delivery_status\": \"logged\",\n            \"cost\": 100,\n            \"expires_on\": \"2025-03-25-12-50-16\",\n            \"ussd_code\": null,\n            \"prompt_message\": \"A message has been sent your WhatsApp ****14. Please retrieve the OTP from the message\",\n            \"reference\": \"af78ec77-2ec8-4357-b4e1-1f0e6f2fabc1\"\n        },\n        \"client_info\": null\n    }\n}"
												}
											]
										},
										{
											"name": "Send OTP [R] - Invalid Token",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6f71931d-3e74-4e98-8257-6494d87d8ea8",
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.test('Has status field', function(){\r",
															"    pm.expect(jsonData).to.have.property('status');\r",
															"    pm.expect(jsonData.status).to.eql('Failed');\r",
															"});\r",
															"pm.test('Has message field', function(){\r",
															"    pm.expect(jsonData).to.have.property('message');\r",
															"    pm.expect(jsonData.message).to.exist.and.not.be.empty;   \r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "e1558847-bdbf-4e1e-9e81-d9982e03dcf3",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{wrong_token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"action\": \"auth.send-login-otp\",\n    \"data\": {\n        \"customer_ref\": \"{{customer_ref}}\", // 234 Format\n        \"biller_code\": \"\" // send this when you have it\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}"
											},
											"response": [
												{
													"id": "f54e7d5a-74aa-4ce2-b58f-bd6acd7adcbc",
													"name": "Send Login OTP",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"action\": \"auth.send-login-otp\",\n    \"data\": {\n        \"customer_ref\": \"1234567890123\", // 234 Format\n        \"biller_code\": \"biller_code\",\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": "{{url}}/auth/login-otp"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": "",
															"type": "text"
														}
													],
													"cookie": [
														{
															"expires": "Invalid Date",
															"domain": "",
															"path": ""
														}
													],
													"responseTime": null,
													"body": "{\n    \"status\": \"Successful\",\n    \"message\": \"Request processed successfully.\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"PaywithAccount\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"delivery_status\": \"logged\",\n            \"cost\": 100,\n            \"expires_on\": \"2025-03-25-12-50-16\",\n            \"ussd_code\": null,\n            \"prompt_message\": \"A message has been sent your WhatsApp ****14. Please retrieve the OTP from the message\",\n            \"reference\": \"af78ec77-2ec8-4357-b4e1-1f0e6f2fabc1\"\n        },\n        \"client_info\": null\n    }\n}"
												}
											]
										},
										{
											"name": "Send OTP [R] - No Token",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6f71931d-3e74-4e98-8257-6494d87d8ea8",
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.test('Has status field', function(){\r",
															"    pm.expect(jsonData).to.have.property('status');\r",
															"    pm.expect(jsonData.status).to.eql('Failed');\r",
															"});\r",
															"pm.test('Has message field', function(){\r",
															"    pm.expect(jsonData).to.have.property('message');\r",
															"    pm.expect(jsonData.message).to.exist.and.not.be.empty;   \r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "bc9c63d0-d0e4-4413-b4e9-2584ef65c04e",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{Token}}",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"action\": \"auth.send-login-otp\",\n    \"data\": {\n        \"customer_ref\": \"{{customer_ref}}\", // 234 Format\n        \"biller_code\": \"\" // send this when you have it\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}"
											},
											"response": [
												{
													"id": "5d512442-7b43-4f89-a8e9-dd92c71ed9cf",
													"name": "Send Login OTP",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"action\": \"auth.send-login-otp\",\n    \"data\": {\n        \"customer_ref\": \"1234567890123\", // 234 Format\n        \"biller_code\": \"biller_code\",\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": "{{url}}/auth/login-otp"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": "",
															"type": "text"
														}
													],
													"cookie": [
														{
															"expires": "Invalid Date",
															"domain": "",
															"path": ""
														}
													],
													"responseTime": null,
													"body": "{\n    \"status\": \"Successful\",\n    \"message\": \"Request processed successfully.\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"PaywithAccount\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"delivery_status\": \"logged\",\n            \"cost\": 100,\n            \"expires_on\": \"2025-03-25-12-50-16\",\n            \"ussd_code\": null,\n            \"prompt_message\": \"A message has been sent your WhatsApp ****14. Please retrieve the OTP from the message\",\n            \"reference\": \"af78ec77-2ec8-4357-b4e1-1f0e6f2fabc1\"\n        },\n        \"client_info\": null\n    }\n}"
												}
											]
										}
									],
									"id": "1b7a6699-17c8-4790-bed7-5751cb1bb45f"
								},
								{
									"name": "Verify OTP",
									"item": [
										{
											"name": "Verify OTP [R] - Success",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "23a62f2f-d31e-44c9-a117-e4e163976dbb",
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.test('Has status field', function(){\r",
															" pm.expect(jsonData).to.have.property('status'); \r",
															"});\r",
															"\r",
															"pm.test('Has message field', function(){\r",
															" pm.expect(jsonData).to.have.property('message');\r",
															"    pm.expect(jsonData.message).to.exist.and.not.be.empty;\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "cdee08d7-6df0-43fa-ab60-dde26140afae",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"action\": \"auth.verify-otp\",\n    \"data\": {\n        \"customer_ref\": \"{{customer_ref}}\", // 234 Format\n        \"otp\": \"{{otp}}\",\n        \"otp_reference\": \"{{otp_reference}}\",\n        \"biller_code\": \"{{biller_code}}\",\n        // optional\n        \"user_agent\": \"{{use_agent}}\",\n        \"ip_address\": \"{{ip_address}}\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}"
											},
											"response": [
												{
													"id": "e213adb8-27ba-46d6-927c-2d8ef11fe0b3",
													"name": "Verify OTP",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"action\": \"auth.validate-login-otp\",\n    \"data\": {\n        \"customer_ref\": \"1234567890123\", // 234 Format\n        \"otp\": \"12345\",\n        \"otp_reference\": \"otp_reference\",\n        \"biller_code\": \"biller_code\",\n        \"use_agent\": \"unique-mobile-app-phone-id\",\n        \"ip_address\" : \"ip address\"\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": "{{url}}/auth/validate-otp"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": "",
															"type": "text"
														}
													],
													"cookie": [
														{
															"expires": "Invalid Date",
															"domain": "",
															"path": ""
														}
													],
													"responseTime": null,
													"body": "{\n    \"status\": \"Successful\",\n    \"message\": \"OTP validated successfully.\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"PaywithAccount\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"cost\": 500,\n            \"reference\": \"ab806bf5-229e-4ccb-a875-0f68338e93a3\"\n        },\n        \"client_info\": null\n    }\n}"
												}
											]
										}
									],
									"id": "2a57e05f-8db4-4782-9aad-db10af02c2d5"
								}
							],
							"id": "9037d22a-57b1-4148-8c30-e50642d9265e"
						},
						{
							"name": "Reset Password (For Billers Only)",
							"item": [
								{
									"name": "Set New Password",
									"item": [
										{
											"name": "Set new  Password [R] - Success",
											"id": "2992721c-27f0-4407-86de-64d6a49fe636",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"action\": \"auth.create-password\",\n    \"data\": {\n        \"customer_ref\": \"{{customer_ref}}\", // 234 Format\n        \"biller_code\": \"{{biller_code}}\",\n        \"password\": \"{{password}}\",\n        \"password_confirmation\": \"{{password}}\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}"
											},
											"response": [
												{
													"id": "f884c2a1-f486-4d5f-bec9-1eaad468f8ef",
													"name": "Set new  Password [R]",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"action\": \"auth.create-password\",\n    \"data\": {\n        \"customer_ref\": \"1234567890123\", // 234 Format\n        \"biller_code\": \"biller_code\",\n        \"password\": \"password here\",\n        \"password_confirmation\": \"password here\"\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": "{{url}}/auth/create-password"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": "",
															"type": "text"
														}
													],
													"cookie": [
														{
															"expires": "Invalid Date",
															"domain": "",
															"path": ""
														}
													],
													"responseTime": null,
													"body": "{\n    \"status\": \"Successful\",\n    \"message\": \"Transaction processed successfully\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"PaywithAccount\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"status\": \"ACTIVE\",\n            \"created_on\": \"2020-04-05 23:08:01\",\n            \"meta\": {}\n        },\n        \"client_info\": {\n            \"name\": null,\n            \"id\": null,\n            \"bank_cbn_code\": null,\n            \"bank_name\": null,\n            \"console_url\": null,\n            \"js_background_image\": null,\n            \"css_url\": null,\n            \"logo_url\": null,\n            \"footer_text\": null,\n            \"show_options_icon\": false,\n            \"paginate\": false,\n            \"paginate_count\": 0,\n            \"options\": null,\n            \"merchant\": null,\n            \"colors\": null,\n            \"meta\": null\n        }\n    }\n}"
												}
											]
										},
										{
											"name": "Set new  Password [R] - Password Confirmation Mismatch",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "fbfea276-255c-4480-8c0b-399291435d28",
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.test('Has status field', function(){ \r",
															"    pm.expect(jsonData).to.have.property('status'); \r",
															"});\r",
															"\r",
															"pm.test('Has message field', function(){ \r",
															"    pm.expect(jsonData).to.have.property('message');\r",
															"    pm.expect(jsonData.message).to.include('Validation failed');\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "9cc91858-594c-4f22-944e-d4c4a141335b",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"action\": \"auth.create-password\",\n    \"data\": {\n        \"customer_ref\": \"{{customer_ref}}\", // 234 Format\n        \"biller_code\": \"{{biller_code}}\",\n        \"password\": \"{{password}}\",\n        \"password_confirmation\": \"{{wrong_password}}\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}"
											},
											"response": [
												{
													"id": "c9e12cf5-4814-4619-ba03-dd252dbcbe46",
													"name": "Set new  Password [R]",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"action\": \"auth.create-password\",\n    \"data\": {\n        \"customer_ref\": \"1234567890123\", // 234 Format\n        \"biller_code\": \"biller_code\",\n        \"password\": \"password here\",\n        \"password_confirmation\": \"password here\"\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": "{{url}}/auth/create-password"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": "",
															"type": "text"
														}
													],
													"cookie": [
														{
															"expires": "Invalid Date",
															"domain": "",
															"path": ""
														}
													],
													"responseTime": null,
													"body": "{\n    \"status\": \"Successful\",\n    \"message\": \"Transaction processed successfully\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"PaywithAccount\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"status\": \"ACTIVE\",\n            \"created_on\": \"2020-04-05 23:08:01\",\n            \"meta\": {}\n        },\n        \"client_info\": {\n            \"name\": null,\n            \"id\": null,\n            \"bank_cbn_code\": null,\n            \"bank_name\": null,\n            \"console_url\": null,\n            \"js_background_image\": null,\n            \"css_url\": null,\n            \"logo_url\": null,\n            \"footer_text\": null,\n            \"show_options_icon\": false,\n            \"paginate\": false,\n            \"paginate_count\": 0,\n            \"options\": null,\n            \"merchant\": null,\n            \"colors\": null,\n            \"meta\": null\n        }\n    }\n}"
												}
											]
										},
										{
											"name": "Set new  Password [R] - Empty Password",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "fbfea276-255c-4480-8c0b-399291435d28",
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.test('Has status field', function(){ \r",
															"    pm.expect(jsonData).to.have.property('status'); \r",
															"});\r",
															"\r",
															"pm.test('Has message field', function(){ \r",
															"    pm.expect(jsonData).to.have.property('message');\r",
															"    pm.expect(jsonData.message).to.include('Password is required');\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "3b0b95da-db04-4f35-855c-8877de4167d0",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"action\": \"auth.create-password\",\n    \"data\": {\n        \"customer_ref\": \"{{customer_ref}}\", // 234 Format\n        \"biller_code\": \"{{biller_code}}\",\n        \"password\": \"\",\n        \"password_confirmation\": \"{{password}}\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}"
											},
											"response": [
												{
													"id": "613d2780-d06b-407f-8b49-c025970197a0",
													"name": "Set new  Password [R]",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"action\": \"auth.create-password\",\n    \"data\": {\n        \"customer_ref\": \"1234567890123\", // 234 Format\n        \"biller_code\": \"biller_code\",\n        \"password\": \"password here\",\n        \"password_confirmation\": \"password here\"\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": "{{url}}/auth/create-password"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": "",
															"type": "text"
														}
													],
													"cookie": [
														{
															"expires": "Invalid Date",
															"domain": "",
															"path": ""
														}
													],
													"responseTime": null,
													"body": "{\n    \"status\": \"Successful\",\n    \"message\": \"Transaction processed successfully\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"PaywithAccount\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"status\": \"ACTIVE\",\n            \"created_on\": \"2020-04-05 23:08:01\",\n            \"meta\": {}\n        },\n        \"client_info\": {\n            \"name\": null,\n            \"id\": null,\n            \"bank_cbn_code\": null,\n            \"bank_name\": null,\n            \"console_url\": null,\n            \"js_background_image\": null,\n            \"css_url\": null,\n            \"logo_url\": null,\n            \"footer_text\": null,\n            \"show_options_icon\": false,\n            \"paginate\": false,\n            \"paginate_count\": 0,\n            \"options\": null,\n            \"merchant\": null,\n            \"colors\": null,\n            \"meta\": null\n        }\n    }\n}"
												}
											]
										},
										{
											"name": "Set new  Password [R] - Empty Password Confirmation",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "fbfea276-255c-4480-8c0b-399291435d28",
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.test('Has status field', function(){ \r",
															"    pm.expect(jsonData).to.have.property('status'); \r",
															"});\r",
															"\r",
															"pm.test('Has message field', function(){ \r",
															"    pm.expect(jsonData).to.have.property('message');\r",
															"    pm.expect(jsonData.message).to.include('Password is required');\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "8b888f10-e8b9-46af-862e-396298d85490",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"action\": \"auth.create-password\",\n    \"data\": {\n        \"customer_ref\": \"{{customer_ref}}\", // 234 Format\n        \"biller_code\": \"{{biller_code}}\",\n        \"password\": \"{{password}}\",\n        \"password_confirmation\": \"\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}"
											},
											"response": [
												{
													"id": "0ab2dba1-3a5e-462f-ae02-024012cc39c7",
													"name": "Set new  Password [R]",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"action\": \"auth.create-password\",\n    \"data\": {\n        \"customer_ref\": \"1234567890123\", // 234 Format\n        \"biller_code\": \"biller_code\",\n        \"password\": \"password here\",\n        \"password_confirmation\": \"password here\"\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": "{{url}}/auth/create-password"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": "",
															"type": "text"
														}
													],
													"cookie": [
														{
															"expires": "Invalid Date",
															"domain": "",
															"path": ""
														}
													],
													"responseTime": null,
													"body": "{\n    \"status\": \"Successful\",\n    \"message\": \"Transaction processed successfully\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"PaywithAccount\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"status\": \"ACTIVE\",\n            \"created_on\": \"2020-04-05 23:08:01\",\n            \"meta\": {}\n        },\n        \"client_info\": {\n            \"name\": null,\n            \"id\": null,\n            \"bank_cbn_code\": null,\n            \"bank_name\": null,\n            \"console_url\": null,\n            \"js_background_image\": null,\n            \"css_url\": null,\n            \"logo_url\": null,\n            \"footer_text\": null,\n            \"show_options_icon\": false,\n            \"paginate\": false,\n            \"paginate_count\": 0,\n            \"options\": null,\n            \"merchant\": null,\n            \"colors\": null,\n            \"meta\": null\n        }\n    }\n}"
												}
											]
										},
										{
											"name": "Set new  Password [R] - Empty Password and Password Confirmation",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "fbfea276-255c-4480-8c0b-399291435d28",
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.test('Has status field', function(){ \r",
															"    pm.expect(jsonData).to.have.property('status'); \r",
															"});\r",
															"\r",
															"pm.test('Has message field', function(){ \r",
															"    pm.expect(jsonData).to.have.property('message');\r",
															"    pm.expect(jsonData.message).to.include('Password is required');\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "4538b029-3dfb-4894-be5d-3c55e0b40423",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"action\": \"auth.create-password\",\n    \"data\": {\n        \"customer_ref\": \"{{customer_ref}}\", // 234 Format\n        \"biller_code\": \"{{biller_code}}\",\n        \"password\": \"\",\n        \"password_confirmation\": \"\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}"
											},
											"response": [
												{
													"id": "1d0f9935-9597-4083-aaea-89b443258219",
													"name": "Set new  Password [R]",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"action\": \"auth.create-password\",\n    \"data\": {\n        \"customer_ref\": \"1234567890123\", // 234 Format\n        \"biller_code\": \"biller_code\",\n        \"password\": \"password here\",\n        \"password_confirmation\": \"password here\"\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": "{{url}}/auth/create-password"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": "",
															"type": "text"
														}
													],
													"cookie": [
														{
															"expires": "Invalid Date",
															"domain": "",
															"path": ""
														}
													],
													"responseTime": null,
													"body": "{\n    \"status\": \"Successful\",\n    \"message\": \"Transaction processed successfully\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"PaywithAccount\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"status\": \"ACTIVE\",\n            \"created_on\": \"2020-04-05 23:08:01\",\n            \"meta\": {}\n        },\n        \"client_info\": {\n            \"name\": null,\n            \"id\": null,\n            \"bank_cbn_code\": null,\n            \"bank_name\": null,\n            \"console_url\": null,\n            \"js_background_image\": null,\n            \"css_url\": null,\n            \"logo_url\": null,\n            \"footer_text\": null,\n            \"show_options_icon\": false,\n            \"paginate\": false,\n            \"paginate_count\": 0,\n            \"options\": null,\n            \"merchant\": null,\n            \"colors\": null,\n            \"meta\": null\n        }\n    }\n}"
												}
											]
										},
										{
											"name": "Set new  Password [R] - Invalid Token",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "fbfea276-255c-4480-8c0b-399291435d28",
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.test('Has status field', function(){ \r",
															"    pm.expect(jsonData).to.have.property('status');\r",
															"    pm.expect(jsonData.status).to.eql('Failed');\r",
															"});\r",
															"\r",
															"pm.test('Has message field', function(){ \r",
															"    pm.expect(jsonData).to.have.property('message');\r",
															"    pm.expect(jsonData.message).to.not.be.empty;\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "c9f72ec3-c186-40bf-aa10-304037a6eb0a",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{wrong_token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"action\": \"auth.create-password\",\n    \"data\": {\n        \"customer_ref\": \"{{customer_ref}}\", // 234 Format\n        \"biller_code\": \"{{biller_code}}\",\n        \"password\": \"\",\n        \"password_confirmation\": \"\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}"
											},
											"response": [
												{
													"id": "a4219065-946d-456f-9113-d175261d387b",
													"name": "Set new  Password [R]",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"action\": \"auth.create-password\",\n    \"data\": {\n        \"customer_ref\": \"1234567890123\", // 234 Format\n        \"biller_code\": \"biller_code\",\n        \"password\": \"password here\",\n        \"password_confirmation\": \"password here\"\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": "{{url}}/auth/create-password"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": "",
															"type": "text"
														}
													],
													"cookie": [
														{
															"expires": "Invalid Date",
															"domain": "",
															"path": ""
														}
													],
													"responseTime": null,
													"body": "{\n    \"status\": \"Successful\",\n    \"message\": \"Transaction processed successfully\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"PaywithAccount\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"status\": \"ACTIVE\",\n            \"created_on\": \"2020-04-05 23:08:01\",\n            \"meta\": {}\n        },\n        \"client_info\": {\n            \"name\": null,\n            \"id\": null,\n            \"bank_cbn_code\": null,\n            \"bank_name\": null,\n            \"console_url\": null,\n            \"js_background_image\": null,\n            \"css_url\": null,\n            \"logo_url\": null,\n            \"footer_text\": null,\n            \"show_options_icon\": false,\n            \"paginate\": false,\n            \"paginate_count\": 0,\n            \"options\": null,\n            \"merchant\": null,\n            \"colors\": null,\n            \"meta\": null\n        }\n    }\n}"
												}
											]
										},
										{
											"name": "Set new  Password [R] - No Auth Token",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "fbfea276-255c-4480-8c0b-399291435d28",
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.test('Has status field', function(){ \r",
															"    pm.expect(jsonData).to.have.property('status');\r",
															"    pm.expect(jsonData.status).to.eql('Failed');\r",
															"});\r",
															"\r",
															"pm.test('Has message field', function(){ \r",
															"    pm.expect(jsonData).to.have.property('message');\r",
															"    pm.expect(jsonData.message).to.not.be.empty;\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "914816e2-0a0d-4749-859e-25cf555f4c41",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{Token}}",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"action\": \"auth.create-password\",\n    \"data\": {\n        \"customer_ref\": \"{{customer_ref}}\", // 234 Format\n        \"biller_code\": \"{{biller_code}}\",\n        \"password\": \"\",\n        \"password_confirmation\": \"\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}"
											},
											"response": [
												{
													"id": "f57e017a-01e7-4684-b1f8-a869811272db",
													"name": "Set new  Password [R]",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"action\": \"auth.create-password\",\n    \"data\": {\n        \"customer_ref\": \"1234567890123\", // 234 Format\n        \"biller_code\": \"biller_code\",\n        \"password\": \"password here\",\n        \"password_confirmation\": \"password here\"\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": "{{url}}/auth/create-password"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": "",
															"type": "text"
														}
													],
													"cookie": [
														{
															"expires": "Invalid Date",
															"domain": "",
															"path": ""
														}
													],
													"responseTime": null,
													"body": "{\n    \"status\": \"Successful\",\n    \"message\": \"Transaction processed successfully\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"PaywithAccount\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"status\": \"ACTIVE\",\n            \"created_on\": \"2020-04-05 23:08:01\",\n            \"meta\": {}\n        },\n        \"client_info\": {\n            \"name\": null,\n            \"id\": null,\n            \"bank_cbn_code\": null,\n            \"bank_name\": null,\n            \"console_url\": null,\n            \"js_background_image\": null,\n            \"css_url\": null,\n            \"logo_url\": null,\n            \"footer_text\": null,\n            \"show_options_icon\": false,\n            \"paginate\": false,\n            \"paginate_count\": 0,\n            \"options\": null,\n            \"merchant\": null,\n            \"colors\": null,\n            \"meta\": null\n        }\n    }\n}"
												}
											]
										}
									],
									"id": "79f62f73-4a75-47f3-82d2-cff735af2f81"
								},
								{
									"name": "Send OTP",
									"item": [
										{
											"name": "Send OTP - Success",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5bb6063d-ad54-4776-a350-cdd125caff40",
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.test('Has status field', function(){ \r",
															"    pm.expect(jsonData).to.have.property('status'); \r",
															"});\r",
															"\r",
															"pm.test('Has message field', function(){ \r",
															"    pm.expect(jsonData).to.have.property('message');\r",
															"    pm.expect(jsonData.message).to.include('Request processed successfully');\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "d8a9325e-c6e2-4513-b1b4-9fdbeecc8cc5",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"action\": \"auth.send-login-otp\",\n    \"data\": {\n        \"customer_ref\": \"{{customer_ref}}\", // 234 Format\n        \"biller_code\": \"{{biller_code}}\" // send this when you have it\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}"
											},
											"response": [
												{
													"id": "4e09649a-77a4-412b-bc88-a7f1abf4ff55",
													"name": "Send Login OTP",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"action\": \"auth.send-login-otp\",\n    \"data\": {\n        \"customer_ref\": \"1234567890123\", // 234 Format\n        \"biller_code\": \"biller_code\",\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": "{{url}}/auth/login-otp"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": "",
															"type": "text"
														}
													],
													"cookie": [
														{
															"expires": "Invalid Date",
															"domain": "",
															"path": ""
														}
													],
													"responseTime": null,
													"body": "{\n    \"status\": \"Successful\",\n    \"message\": \"Request processed successfully.\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"PaywithAccount\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"delivery_status\": \"logged\",\n            \"cost\": 100,\n            \"expires_on\": \"2025-03-25-12-50-16\",\n            \"ussd_code\": null,\n            \"prompt_message\": \"A message has been sent your WhatsApp ****14. Please retrieve the OTP from the message\",\n            \"reference\": \"af78ec77-2ec8-4357-b4e1-1f0e6f2fabc1\"\n        },\n        \"client_info\": null\n    }\n}"
												}
											]
										},
										{
											"name": "Send OTP - Empty Customer Ref.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5bb6063d-ad54-4776-a350-cdd125caff40",
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.test('Has status field', function(){ \r",
															"    pm.expect(jsonData).to.have.property('status'); \r",
															"});\r",
															"\r",
															"pm.test('Has message field', function(){ \r",
															"    pm.expect(jsonData).to.have.property('message');\r",
															"    pm.expect(jsonData.message).to.include('Customer ref required');\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "3faf677f-3854-49a8-9902-49c3a9fb122d",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"action\": \"auth.send-login-otp\",\n    \"data\": {\n        \"customer_ref\": \"\", // 234 Format\n        \"biller_code\": \"{{biller_code}}\" // send this when you have it\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}"
											},
											"response": [
												{
													"id": "e4d9d633-1c5a-4aab-a356-cf24350ab91c",
													"name": "Send Login OTP",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"action\": \"auth.send-login-otp\",\n    \"data\": {\n        \"customer_ref\": \"1234567890123\", // 234 Format\n        \"biller_code\": \"biller_code\",\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": "{{url}}/auth/login-otp"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": "",
															"type": "text"
														}
													],
													"cookie": [
														{
															"expires": "Invalid Date",
															"domain": "",
															"path": ""
														}
													],
													"responseTime": null,
													"body": "{\n    \"status\": \"Successful\",\n    \"message\": \"Request processed successfully.\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"PaywithAccount\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"delivery_status\": \"logged\",\n            \"cost\": 100,\n            \"expires_on\": \"2025-03-25-12-50-16\",\n            \"ussd_code\": null,\n            \"prompt_message\": \"A message has been sent your WhatsApp ****14. Please retrieve the OTP from the message\",\n            \"reference\": \"af78ec77-2ec8-4357-b4e1-1f0e6f2fabc1\"\n        },\n        \"client_info\": null\n    }\n}"
												}
											]
										},
										{
											"name": "Send OTP - Empty Biller Code",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5bb6063d-ad54-4776-a350-cdd125caff40",
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.test('Has status field', function(){ \r",
															"    pm.expect(jsonData).to.have.property('status'); \r",
															"});\r",
															"\r",
															"pm.test('Has message field', function(){ \r",
															"    pm.expect(jsonData).to.have.property('message');\r",
															"    pm.expect(jsonData.message).to.include('Biller code is required');\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "a4081550-0adf-4561-8539-c529a731491c",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"action\": \"auth.send-login-otp\",\n    \"data\": {\n        \"customer_ref\": \"{{customer_ref}}\", // 234 Format\n        \"biller_code\": \"\" // send this when you have it\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}"
											},
											"response": [
												{
													"id": "8156524b-5469-44bb-9394-38d351ec12fb",
													"name": "Send Login OTP",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"action\": \"auth.send-login-otp\",\n    \"data\": {\n        \"customer_ref\": \"1234567890123\", // 234 Format\n        \"biller_code\": \"biller_code\",\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": "{{url}}/auth/login-otp"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": "",
															"type": "text"
														}
													],
													"cookie": [
														{
															"expires": "Invalid Date",
															"domain": "",
															"path": ""
														}
													],
													"responseTime": null,
													"body": "{\n    \"status\": \"Successful\",\n    \"message\": \"Request processed successfully.\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"PaywithAccount\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"delivery_status\": \"logged\",\n            \"cost\": 100,\n            \"expires_on\": \"2025-03-25-12-50-16\",\n            \"ussd_code\": null,\n            \"prompt_message\": \"A message has been sent your WhatsApp ****14. Please retrieve the OTP from the message\",\n            \"reference\": \"af78ec77-2ec8-4357-b4e1-1f0e6f2fabc1\"\n        },\n        \"client_info\": null\n    }\n}"
												}
											]
										},
										{
											"name": "Send OTP - Invalid Token",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5bb6063d-ad54-4776-a350-cdd125caff40",
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.test('Has status field', function(){ \r",
															"    pm.expect(jsonData).to.have.property('status');\r",
															"    pm.expect(jsonData.status).to.eql('Failed');\r",
															"});\r",
															"\r",
															"pm.test('Has message field', function(){ \r",
															"    pm.expect(jsonData).to.have.property('message');\r",
															"    pm.expect(jsonData.message).to.exist.and.not.be.empty;\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "63249676-b0c4-42b2-abed-6bf71d5d6262",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{wrong_token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"action\": \"auth.send-login-otp\",\n    \"data\": {\n        \"customer_ref\": \"{{customer_ref}}\", // 234 Format\n        \"biller_code\": \"{{biller_code}}\" // send this when you have it\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}"
											},
											"response": [
												{
													"id": "72681ea4-4d7c-49e5-a48b-7acc49801546",
													"name": "Send Login OTP",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"action\": \"auth.send-login-otp\",\n    \"data\": {\n        \"customer_ref\": \"1234567890123\", // 234 Format\n        \"biller_code\": \"biller_code\",\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": "{{url}}/auth/login-otp"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": "",
															"type": "text"
														}
													],
													"cookie": [
														{
															"expires": "Invalid Date",
															"domain": "",
															"path": ""
														}
													],
													"responseTime": null,
													"body": "{\n    \"status\": \"Successful\",\n    \"message\": \"Request processed successfully.\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"PaywithAccount\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"delivery_status\": \"logged\",\n            \"cost\": 100,\n            \"expires_on\": \"2025-03-25-12-50-16\",\n            \"ussd_code\": null,\n            \"prompt_message\": \"A message has been sent your WhatsApp ****14. Please retrieve the OTP from the message\",\n            \"reference\": \"af78ec77-2ec8-4357-b4e1-1f0e6f2fabc1\"\n        },\n        \"client_info\": null\n    }\n}"
												}
											]
										},
										{
											"name": "Send OTP - No Auth Token",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5bb6063d-ad54-4776-a350-cdd125caff40",
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.test('Has status field', function(){ \r",
															"    pm.expect(jsonData).to.have.property('status');\r",
															"    pm.expect(jsonData.status).to.eql('Failed');\r",
															"});\r",
															"\r",
															"pm.test('Has message field', function(){ \r",
															"    pm.expect(jsonData).to.have.property('message');\r",
															"    pm.expect(jsonData.message).to.exist.and.not.be.empty;\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "5a4d9711-dce9-4036-80e9-08a19cd21475",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{Token}}",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"action\": \"auth.send-login-otp\",\n    \"data\": {\n        \"customer_ref\": \"{{customer_ref}}\", // 234 Format\n        \"biller_code\": \"{{biller_code}}\" // send this when you have it\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}"
											},
											"response": [
												{
													"id": "e80c9da3-fc63-4adc-9afc-6714155ba516",
													"name": "Send Login OTP",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"action\": \"auth.send-login-otp\",\n    \"data\": {\n        \"customer_ref\": \"1234567890123\", // 234 Format\n        \"biller_code\": \"biller_code\",\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": "{{url}}/auth/login-otp"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": "",
															"type": "text"
														}
													],
													"cookie": [
														{
															"expires": "Invalid Date",
															"domain": "",
															"path": ""
														}
													],
													"responseTime": null,
													"body": "{\n    \"status\": \"Successful\",\n    \"message\": \"Request processed successfully.\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"PaywithAccount\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"delivery_status\": \"logged\",\n            \"cost\": 100,\n            \"expires_on\": \"2025-03-25-12-50-16\",\n            \"ussd_code\": null,\n            \"prompt_message\": \"A message has been sent your WhatsApp ****14. Please retrieve the OTP from the message\",\n            \"reference\": \"af78ec77-2ec8-4357-b4e1-1f0e6f2fabc1\"\n        },\n        \"client_info\": null\n    }\n}"
												}
											]
										}
									],
									"id": "5c8bb1a7-f7d5-421a-8943-903a23d520ce"
								},
								{
									"name": "Verify OTP",
									"item": [
										{
											"name": "Verify OTP [R] - Success",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3bf3c873-10f4-4fca-b106-f94970e3c154",
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.test('Has status field', function(){\r",
															" pm.expect(jsonData).to.have.property('status'); \r",
															"});\r",
															"\r",
															"pm.test('Has message field', function(){\r",
															" pm.expect(jsonData).to.have.property('message');\r",
															"    pm.expect(jsonData.message).to.include('Validation successful');\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "dd801b79-9c92-45d2-9f55-8b9e2c07ff2a",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"action\": \"auth.verify-otp\",\n    \"data\": {\n        \"customer_ref\": \"{{customer_ref}}\", // 234 Format\n        \"otp\": \"{{otp}}\",\n        \"otp_reference\": \"{{otp_reference}}\",\n        \"biller_code\": \"{{biller_code}}\",\n        // optional\n        \"user_agent\": \"{{use_agent}}\",\n        \"ip_address\": \"{{ip_address}}\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}"
											},
											"response": [
												{
													"id": "7f7d9fe5-636f-4175-b6ca-620f77af36e7",
													"name": "Verify OTP",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"action\": \"auth.validate-login-otp\",\n    \"data\": {\n        \"customer_ref\": \"1234567890123\", // 234 Format\n        \"otp\": \"12345\",\n        \"otp_reference\": \"otp_reference\",\n        \"biller_code\": \"biller_code\",\n        \"use_agent\": \"unique-mobile-app-phone-id\",\n        \"ip_address\" : \"ip address\"\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": "{{url}}/auth/validate-otp"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": "",
															"type": "text"
														}
													],
													"cookie": [
														{
															"expires": "Invalid Date",
															"domain": "",
															"path": ""
														}
													],
													"responseTime": null,
													"body": "{\n    \"status\": \"Successful\",\n    \"message\": \"OTP validated successfully.\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"PaywithAccount\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"cost\": 500,\n            \"reference\": \"ab806bf5-229e-4ccb-a875-0f68338e93a3\"\n        },\n        \"client_info\": null\n    }\n}"
												}
											]
										},
										{
											"name": "Verify OTP [R] - Invalid OTP",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3bf3c873-10f4-4fca-b106-f94970e3c154",
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.test('Has status field', function(){\r",
															" pm.expect(jsonData).to.have.property('status'); \r",
															"});\r",
															"\r",
															"pm.test('Has message field', function(){\r",
															" pm.expect(jsonData).to.have.property('message');\r",
															"    pm.expect(jsonData.message).to.include('Transaction failed');\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "ac71dfc9-cd4f-48b9-9078-bf7b64619e76",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"action\": \"auth.verify-otp\",\n    \"data\": {\n        \"customer_ref\": \"{{customer_ref}}\", // 234 Format\n        \"otp\": \"00000\",\n        \"otp_reference\": \"{{otp_reference}}\",\n        \"biller_code\": \"{{biller_code}}\",\n        // optional\n        \"user_agent\": \"{{use_agent}}\",\n        \"ip_address\": \"{{ip_address}}\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}"
											},
											"response": [
												{
													"id": "fac3011c-99f3-45c2-be4e-1b735f556c40",
													"name": "Verify OTP",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"action\": \"auth.validate-login-otp\",\n    \"data\": {\n        \"customer_ref\": \"1234567890123\", // 234 Format\n        \"otp\": \"12345\",\n        \"otp_reference\": \"otp_reference\",\n        \"biller_code\": \"biller_code\",\n        \"use_agent\": \"unique-mobile-app-phone-id\",\n        \"ip_address\" : \"ip address\"\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": "{{url}}/auth/validate-otp"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": "",
															"type": "text"
														}
													],
													"cookie": [
														{
															"expires": "Invalid Date",
															"domain": "",
															"path": ""
														}
													],
													"responseTime": null,
													"body": "{\n    \"status\": \"Successful\",\n    \"message\": \"OTP validated successfully.\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"PaywithAccount\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"cost\": 500,\n            \"reference\": \"ab806bf5-229e-4ccb-a875-0f68338e93a3\"\n        },\n        \"client_info\": null\n    }\n}"
												}
											]
										},
										{
											"name": "Verify OTP [R] - Empty Customer Ref.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3bf3c873-10f4-4fca-b106-f94970e3c154",
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.test('Has status field', function(){\r",
															" pm.expect(jsonData).to.have.property('status'); \r",
															"});\r",
															"\r",
															"pm.test('Has message field', function(){\r",
															" pm.expect(jsonData).to.have.property('message');\r",
															"    pm.expect(jsonData.message).to.include('Customer ref required');\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "73e7d588-b198-4bfb-91fa-781ac78fd5be",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"action\": \"auth.verify-otp\",\n    \"data\": {\n        \"customer_ref\": \"\", // 234 Format\n        \"otp\": \"{{otp}}\",\n        \"otp_reference\": \"{{otp_reference}}\",\n        \"biller_code\": \"{{biller_code}}\",\n        // optional\n        \"user_agent\": \"{{use_agent}}\",\n        \"ip_address\": \"{{ip_address}}\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}"
											},
											"response": [
												{
													"id": "410bdedb-ac6f-4cc7-96b8-f88aaab2d895",
													"name": "Verify OTP",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"action\": \"auth.validate-login-otp\",\n    \"data\": {\n        \"customer_ref\": \"1234567890123\", // 234 Format\n        \"otp\": \"12345\",\n        \"otp_reference\": \"otp_reference\",\n        \"biller_code\": \"biller_code\",\n        \"use_agent\": \"unique-mobile-app-phone-id\",\n        \"ip_address\" : \"ip address\"\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": "{{url}}/auth/validate-otp"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": "",
															"type": "text"
														}
													],
													"cookie": [
														{
															"expires": "Invalid Date",
															"domain": "",
															"path": ""
														}
													],
													"responseTime": null,
													"body": "{\n    \"status\": \"Successful\",\n    \"message\": \"OTP validated successfully.\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"PaywithAccount\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"cost\": 500,\n            \"reference\": \"ab806bf5-229e-4ccb-a875-0f68338e93a3\"\n        },\n        \"client_info\": null\n    }\n}"
												}
											]
										},
										{
											"name": "Verify OTP [R] - Empty Biller Code",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3bf3c873-10f4-4fca-b106-f94970e3c154",
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.test('Has status field', function(){\r",
															" pm.expect(jsonData).to.have.property('status'); \r",
															"});\r",
															"\r",
															"pm.test('Has message field', function(){\r",
															" pm.expect(jsonData).to.have.property('message');\r",
															"    pm.expect(jsonData.message).to.include('Biller code is required');\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "430ca729-e118-4bd9-b03a-582e9f02be5b",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"action\": \"auth.verify-otp\",\n    \"data\": {\n        \"customer_ref\": \"{{customer_ref}}\", // 234 Format\n        \"otp\": \"{{otp}}\",\n        \"otp_reference\": \"{{otp_reference}}\",\n        \"biller_code\": \"\",\n        // optional\n        \"user_agent\": \"{{use_agent}}\",\n        \"ip_address\": \"{{ip_address}}\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}"
											},
											"response": [
												{
													"id": "3af021d4-47ca-44ff-bd72-13c4ef1616d1",
													"name": "Verify OTP",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"action\": \"auth.validate-login-otp\",\n    \"data\": {\n        \"customer_ref\": \"1234567890123\", // 234 Format\n        \"otp\": \"12345\",\n        \"otp_reference\": \"otp_reference\",\n        \"biller_code\": \"biller_code\",\n        \"use_agent\": \"unique-mobile-app-phone-id\",\n        \"ip_address\" : \"ip address\"\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": "{{url}}/auth/validate-otp"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": "",
															"type": "text"
														}
													],
													"cookie": [
														{
															"expires": "Invalid Date",
															"domain": "",
															"path": ""
														}
													],
													"responseTime": null,
													"body": "{\n    \"status\": \"Successful\",\n    \"message\": \"OTP validated successfully.\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"PaywithAccount\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"cost\": 500,\n            \"reference\": \"ab806bf5-229e-4ccb-a875-0f68338e93a3\"\n        },\n        \"client_info\": null\n    }\n}"
												}
											]
										},
										{
											"name": "Verify OTP [R] - Invalid Token",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3bf3c873-10f4-4fca-b106-f94970e3c154",
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.test('Has status field', function(){ \r",
															"    pm.expect(jsonData).to.have.property('status');\r",
															"    pm.expect(jsonData.status).to.eql('Failed');\r",
															"});\r",
															"\r",
															"pm.test('Has message field', function(){ \r",
															"    pm.expect(jsonData).to.have.property('message');\r",
															"    pm.expect(jsonData.message).to.not.be.empty;\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "c79d6f34-cbbd-44e0-857e-511379d1c6d3",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{wrong_token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"action\": \"auth.verify-otp\",\n    \"data\": {\n        \"customer_ref\": \"{{customer_ref}}\", // 234 Format\n        \"otp\": \"{{otp}}\",\n        \"otp_reference\": \"{{otp_reference}}\",\n        \"biller_code\": \"{{biller_code}}\",\n        // optional\n        \"user_agent\": \"{{use_agent}}\",\n        \"ip_address\": \"{{ip_address}}\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}"
											},
											"response": [
												{
													"id": "11fe7911-1335-4789-b80e-18105a827416",
													"name": "Verify OTP",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"action\": \"auth.validate-login-otp\",\n    \"data\": {\n        \"customer_ref\": \"1234567890123\", // 234 Format\n        \"otp\": \"12345\",\n        \"otp_reference\": \"otp_reference\",\n        \"biller_code\": \"biller_code\",\n        \"use_agent\": \"unique-mobile-app-phone-id\",\n        \"ip_address\" : \"ip address\"\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": "{{url}}/auth/validate-otp"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": "",
															"type": "text"
														}
													],
													"cookie": [
														{
															"expires": "Invalid Date",
															"domain": "",
															"path": ""
														}
													],
													"responseTime": null,
													"body": "{\n    \"status\": \"Successful\",\n    \"message\": \"OTP validated successfully.\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"PaywithAccount\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"cost\": 500,\n            \"reference\": \"ab806bf5-229e-4ccb-a875-0f68338e93a3\"\n        },\n        \"client_info\": null\n    }\n}"
												}
											]
										},
										{
											"name": "Verify OTP [R] - No Auth Token",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3bf3c873-10f4-4fca-b106-f94970e3c154",
														"exec": [
															"const jsonData = pm.response.json();\r",
															"\r",
															"pm.test('Has status field', function(){ \r",
															"    pm.expect(jsonData).to.have.property('status');\r",
															"    pm.expect(jsonData.status).to.eql('Failed');\r",
															"});\r",
															"\r",
															"pm.test('Has message field', function(){ \r",
															"    pm.expect(jsonData).to.have.property('message');\r",
															"    pm.expect(jsonData.message).to.not.be.empty;\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "db35976a-2aae-43be-bf4e-38605134ae49",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{wrong_token}}",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"action\": \"auth.verify-otp\",\n    \"data\": {\n        \"customer_ref\": \"{{customer_ref}}\", // 234 Format\n        \"otp\": \"{{otp}}\",\n        \"otp_reference\": \"{{otp_reference}}\",\n        \"biller_code\": \"{{biller_code}}\",\n        // optional\n        \"user_agent\": \"{{use_agent}}\",\n        \"ip_address\": \"{{ip_address}}\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}"
											},
											"response": [
												{
													"id": "98ff725b-840f-4611-a981-3c28842401f4",
													"name": "Verify OTP",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"action\": \"auth.validate-login-otp\",\n    \"data\": {\n        \"customer_ref\": \"1234567890123\", // 234 Format\n        \"otp\": \"12345\",\n        \"otp_reference\": \"otp_reference\",\n        \"biller_code\": \"biller_code\",\n        \"use_agent\": \"unique-mobile-app-phone-id\",\n        \"ip_address\" : \"ip address\"\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": "{{url}}/auth/validate-otp"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": "",
															"type": "text"
														}
													],
													"cookie": [
														{
															"expires": "Invalid Date",
															"domain": "",
															"path": ""
														}
													],
													"responseTime": null,
													"body": "{\n    \"status\": \"Successful\",\n    \"message\": \"OTP validated successfully.\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"PaywithAccount\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"cost\": 500,\n            \"reference\": \"ab806bf5-229e-4ccb-a875-0f68338e93a3\"\n        },\n        \"client_info\": null\n    }\n}"
												}
											]
										}
									],
									"id": "7ffd07b5-af0c-41c6-bf6c-75283d04a2d8"
								}
							],
							"id": "4c4036ae-62fa-46fd-9c71-1e30f0d78221"
						},
						{
							"name": "Change PIN",
							"item": [
								{
									"name": "Change PIN [R] - Success",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "18a9ecde-e79f-4b75-a811-c8fc9d492dfd",
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.test('Has status field', function(){ \r",
													"    pm.expect(jsonData).to.have.property('status'); \r",
													"});\r",
													"\r",
													"pm.test('Has message field', function(){ \r",
													"    pm.expect(jsonData).to.have.property('message');\r",
													"    pm.expect(jsonData.message).to.include(\"Transaction processed successfully\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "566cb46e-e89a-45e5-a8ea-b1aa853cfac1",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\" : \"settings.change-pin\",\n    \"data\": {\n        \"customer_ref\":\"{{customer_ref}}\", // 234 Format\n        \"current_pin\": \"{{pin}}\",\n        \"new_pin\": \"1324\",\n        \"new_pin_confirmation\": \"1324\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}",
										"description": "List of data to Cach offlne\n\n1. Accounts\n    \n    1. All accounts and their last balance\n        \n2. Loan Limits\n    \n3. Membership status\n    \n4. Onboard Approval Status"
									},
									"response": [
										{
											"id": "074145e6-93b3-4df0-8550-3ce949276809",
											"name": "Change Pin",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"action\" : \"settings.change-pin\",\n    \"data\": {\n        \"customer_ref\":\"1234567890123\", // 234 Format\n        \"current_pin\": \"1234\",\n        \"new_pin\": \"1324\",\n        \"new_pin_confirmation\": \"1324\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{url}}/settings/change-pin"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": "",
													"type": "text"
												}
											],
											"cookie": [
												{
													"expires": "Invalid Date",
													"domain": "",
													"path": ""
												}
											],
											"responseTime": null,
											"body": "{\n    \"status\": \"Successful\",\n    \"message\": \"Transaction processed successfully\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"PaywithAccount\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"status\": \"ACTIVE\",\n            \"created_on\": \"2020-04-05 23:08:01\",\n            \"meta\": {}\n        },\n        \"client_info\": {\n            \"name\": null,\n            \"id\": null,\n            \"bank_cbn_code\": null,\n            \"bank_name\": null,\n            \"console_url\": null,\n            \"js_background_image\": null,\n            \"css_url\": null,\n            \"logo_url\": null,\n            \"footer_text\": null,\n            \"show_options_icon\": false,\n            \"paginate\": false,\n            \"paginate_count\": 0,\n            \"options\": null,\n            \"merchant\": null,\n            \"colors\": null,\n            \"meta\": null\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "Change PIN [R] - Empty Customer Ref.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "18a9ecde-e79f-4b75-a811-c8fc9d492dfd",
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.test('Has status field', function(){ \r",
													"    pm.expect(jsonData).to.have.property('status'); \r",
													"});\r",
													"\r",
													"pm.test('Has message field', function(){ \r",
													"    pm.expect(jsonData).to.have.property('message');\r",
													"    pm.expect(jsonData.message).to.include(\"Customer ref required\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "2969ae69-bfa1-4758-aeb6-d396c46c8eea",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\" : \"settings.change-pin\",\n    \"data\": {\n        \"customer_ref\":\"\", // 234 Format\n        \"current_pin\": \"{{pin}}\",\n        \"new_pin\": \"1324\",\n        \"new_pin_confirmation\": \"1324\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}",
										"description": "List of data to Cach offlne\n\n1. Accounts\n    \n    1. All accounts and their last balance\n        \n2. Loan Limits\n    \n3. Membership status\n    \n4. Onboard Approval Status"
									},
									"response": [
										{
											"id": "432afe8a-6c13-4bee-830f-2bc7a6ab054e",
											"name": "Change Pin",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"action\" : \"settings.change-pin\",\n    \"data\": {\n        \"customer_ref\":\"1234567890123\", // 234 Format\n        \"current_pin\": \"1234\",\n        \"new_pin\": \"1324\",\n        \"new_pin_confirmation\": \"1324\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{url}}/settings/change-pin"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": "",
													"type": "text"
												}
											],
											"cookie": [
												{
													"expires": "Invalid Date",
													"domain": "",
													"path": ""
												}
											],
											"responseTime": null,
											"body": "{\n    \"status\": \"Successful\",\n    \"message\": \"Transaction processed successfully\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"PaywithAccount\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"status\": \"ACTIVE\",\n            \"created_on\": \"2020-04-05 23:08:01\",\n            \"meta\": {}\n        },\n        \"client_info\": {\n            \"name\": null,\n            \"id\": null,\n            \"bank_cbn_code\": null,\n            \"bank_name\": null,\n            \"console_url\": null,\n            \"js_background_image\": null,\n            \"css_url\": null,\n            \"logo_url\": null,\n            \"footer_text\": null,\n            \"show_options_icon\": false,\n            \"paginate\": false,\n            \"paginate_count\": 0,\n            \"options\": null,\n            \"merchant\": null,\n            \"colors\": null,\n            \"meta\": null\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "Change PIN [R] - Wrong Current PIN",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "18a9ecde-e79f-4b75-a811-c8fc9d492dfd",
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.test('Has status field', function(){ \r",
													"    pm.expect(jsonData).to.have.property('status'); \r",
													"});\r",
													"\r",
													"pm.test('Has message field', function(){ \r",
													"    pm.expect(jsonData).to.have.property('message');\r",
													"    pm.expect(jsonData.message).to.include(\"Invalid PIN\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "3ccc935a-4a30-4ac2-85ec-7e75f612e265",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\" : \"settings.change-pin\",\n    \"data\": {\n        \"customer_ref\":\"{{customer_ref}}\", // 234 Format\n        \"current_pin\": \"{{wrong_pin}}\",\n        \"new_pin\": \"1324\",\n        \"new_pin_confirmation\": \"1324\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}",
										"description": "List of data to Cach offlne\n\n1. Accounts\n    \n    1. All accounts and their last balance\n        \n2. Loan Limits\n    \n3. Membership status\n    \n4. Onboard Approval Status"
									},
									"response": [
										{
											"id": "c89dc425-ae13-4f5e-8120-c756c19a48c9",
											"name": "Change Pin",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"action\" : \"settings.change-pin\",\n    \"data\": {\n        \"customer_ref\":\"1234567890123\", // 234 Format\n        \"current_pin\": \"1234\",\n        \"new_pin\": \"1324\",\n        \"new_pin_confirmation\": \"1324\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{url}}/settings/change-pin"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": "",
													"type": "text"
												}
											],
											"cookie": [
												{
													"expires": "Invalid Date",
													"domain": "",
													"path": ""
												}
											],
											"responseTime": null,
											"body": "{\n    \"status\": \"Successful\",\n    \"message\": \"Transaction processed successfully\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"PaywithAccount\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"status\": \"ACTIVE\",\n            \"created_on\": \"2020-04-05 23:08:01\",\n            \"meta\": {}\n        },\n        \"client_info\": {\n            \"name\": null,\n            \"id\": null,\n            \"bank_cbn_code\": null,\n            \"bank_name\": null,\n            \"console_url\": null,\n            \"js_background_image\": null,\n            \"css_url\": null,\n            \"logo_url\": null,\n            \"footer_text\": null,\n            \"show_options_icon\": false,\n            \"paginate\": false,\n            \"paginate_count\": 0,\n            \"options\": null,\n            \"merchant\": null,\n            \"colors\": null,\n            \"meta\": null\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "Change PIN [R] - Empty PIN",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "18a9ecde-e79f-4b75-a811-c8fc9d492dfd",
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.test('Has status field', function(){ \r",
													"    pm.expect(jsonData).to.have.property('status'); \r",
													"});\r",
													"\r",
													"pm.test('Has message field', function(){ \r",
													"    pm.expect(jsonData).to.have.property('message');\r",
													"    pm.expect(jsonData.message).to.include(\"PIN is required\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "e2677188-8e70-4f0c-9682-8f0cb7b0718d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\" : \"settings.change-pin\",\n    \"data\": {\n        \"customer_ref\":\"{{customer_ref}}\", // 234 Format\n        \"current_pin\": \"\",\n        \"new_pin\": \"1324\",\n        \"new_pin_confirmation\": \"1324\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}",
										"description": "List of data to Cach offlne\n\n1. Accounts\n    \n    1. All accounts and their last balance\n        \n2. Loan Limits\n    \n3. Membership status\n    \n4. Onboard Approval Status"
									},
									"response": [
										{
											"id": "eb5f2d36-446f-4cb5-80f8-fa067aa5c06d",
											"name": "Change Pin",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"action\" : \"settings.change-pin\",\n    \"data\": {\n        \"customer_ref\":\"1234567890123\", // 234 Format\n        \"current_pin\": \"1234\",\n        \"new_pin\": \"1324\",\n        \"new_pin_confirmation\": \"1324\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{url}}/settings/change-pin"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": "",
													"type": "text"
												}
											],
											"cookie": [
												{
													"expires": "Invalid Date",
													"domain": "",
													"path": ""
												}
											],
											"responseTime": null,
											"body": "{\n    \"status\": \"Successful\",\n    \"message\": \"Transaction processed successfully\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"PaywithAccount\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"status\": \"ACTIVE\",\n            \"created_on\": \"2020-04-05 23:08:01\",\n            \"meta\": {}\n        },\n        \"client_info\": {\n            \"name\": null,\n            \"id\": null,\n            \"bank_cbn_code\": null,\n            \"bank_name\": null,\n            \"console_url\": null,\n            \"js_background_image\": null,\n            \"css_url\": null,\n            \"logo_url\": null,\n            \"footer_text\": null,\n            \"show_options_icon\": false,\n            \"paginate\": false,\n            \"paginate_count\": 0,\n            \"options\": null,\n            \"merchant\": null,\n            \"colors\": null,\n            \"meta\": null\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "Change PIN [R] - Empty New PIN",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "18a9ecde-e79f-4b75-a811-c8fc9d492dfd",
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.test('Has status field', function(){ \r",
													"    pm.expect(jsonData).to.have.property('status'); \r",
													"});\r",
													"\r",
													"pm.test('Has message field', function(){ \r",
													"    pm.expect(jsonData).to.have.property('message');\r",
													"    pm.expect(jsonData.message).to.include(\"New PIN is required\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "03fd4fae-e8ff-4f87-83c6-92e37440c3a6",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\" : \"settings.change-pin\",\n    \"data\": {\n        \"customer_ref\":\"{{customer_ref}}\", // 234 Format\n        \"current_pin\": \"{{pin}}\",\n        \"new_pin\": \"\",\n        \"new_pin_confirmation\": \"1324\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}",
										"description": "List of data to Cach offlne\n\n1. Accounts\n    \n    1. All accounts and their last balance\n        \n2. Loan Limits\n    \n3. Membership status\n    \n4. Onboard Approval Status"
									},
									"response": [
										{
											"id": "f675a4a2-3a3f-4201-b010-b8a6b113c3ea",
											"name": "Change Pin",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"action\" : \"settings.change-pin\",\n    \"data\": {\n        \"customer_ref\":\"1234567890123\", // 234 Format\n        \"current_pin\": \"1234\",\n        \"new_pin\": \"1324\",\n        \"new_pin_confirmation\": \"1324\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{url}}/settings/change-pin"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": "",
													"type": "text"
												}
											],
											"cookie": [
												{
													"expires": "Invalid Date",
													"domain": "",
													"path": ""
												}
											],
											"responseTime": null,
											"body": "{\n    \"status\": \"Successful\",\n    \"message\": \"Transaction processed successfully\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"PaywithAccount\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"status\": \"ACTIVE\",\n            \"created_on\": \"2020-04-05 23:08:01\",\n            \"meta\": {}\n        },\n        \"client_info\": {\n            \"name\": null,\n            \"id\": null,\n            \"bank_cbn_code\": null,\n            \"bank_name\": null,\n            \"console_url\": null,\n            \"js_background_image\": null,\n            \"css_url\": null,\n            \"logo_url\": null,\n            \"footer_text\": null,\n            \"show_options_icon\": false,\n            \"paginate\": false,\n            \"paginate_count\": 0,\n            \"options\": null,\n            \"merchant\": null,\n            \"colors\": null,\n            \"meta\": null\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "Change PIN [R] - Empty New PIN Confirmation",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "18a9ecde-e79f-4b75-a811-c8fc9d492dfd",
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.test('Has status field', function(){ \r",
													"    pm.expect(jsonData).to.have.property('status'); \r",
													"});\r",
													"\r",
													"pm.test('Has message field', function(){ \r",
													"    pm.expect(jsonData).to.have.property('message');\r",
													"    pm.expect(jsonData.message).to.include(\"New PIN Confirmation is required\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "7eac16a9-d179-4553-ac31-dd16565e48b1",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\" : \"settings.change-pin\",\n    \"data\": {\n        \"customer_ref\":\"{{customer_ref}}\", // 234 Format\n        \"current_pin\": \"{{pin}}\",\n        \"new_pin\": \"1324\",\n        \"new_pin_confirmation\": \"\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}",
										"description": "List of data to Cach offlne\n\n1. Accounts\n    \n    1. All accounts and their last balance\n        \n2. Loan Limits\n    \n3. Membership status\n    \n4. Onboard Approval Status"
									},
									"response": [
										{
											"id": "fb0e222d-968a-474e-9cec-fde4c4031bc1",
											"name": "Change Pin",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"action\" : \"settings.change-pin\",\n    \"data\": {\n        \"customer_ref\":\"1234567890123\", // 234 Format\n        \"current_pin\": \"1234\",\n        \"new_pin\": \"1324\",\n        \"new_pin_confirmation\": \"1324\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{url}}/settings/change-pin"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": "",
													"type": "text"
												}
											],
											"cookie": [
												{
													"expires": "Invalid Date",
													"domain": "",
													"path": ""
												}
											],
											"responseTime": null,
											"body": "{\n    \"status\": \"Successful\",\n    \"message\": \"Transaction processed successfully\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"PaywithAccount\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"status\": \"ACTIVE\",\n            \"created_on\": \"2020-04-05 23:08:01\",\n            \"meta\": {}\n        },\n        \"client_info\": {\n            \"name\": null,\n            \"id\": null,\n            \"bank_cbn_code\": null,\n            \"bank_name\": null,\n            \"console_url\": null,\n            \"js_background_image\": null,\n            \"css_url\": null,\n            \"logo_url\": null,\n            \"footer_text\": null,\n            \"show_options_icon\": false,\n            \"paginate\": false,\n            \"paginate_count\": 0,\n            \"options\": null,\n            \"merchant\": null,\n            \"colors\": null,\n            \"meta\": null\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "Change PIN [R] - Invalid Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "18a9ecde-e79f-4b75-a811-c8fc9d492dfd",
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.test('Has status field', function(){ \r",
													"    pm.expect(jsonData).to.have.property('status'); \r",
													"});\r",
													"\r",
													"pm.test('Has message field', function(){ \r",
													"    pm.expect(jsonData).to.have.property('message');\r",
													"    pm.expect(jsonData.message).to.include(\"Invalid Header details\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "6b68e7a5-9685-44e6-a1e6-80a33d4b61c7",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{wrong_token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\" : \"settings.change-pin\",\n    \"data\": {\n        \"customer_ref\":\"{{customer_ref}}\", // 234 Format\n        \"current_pin\": \"{{pin}}\",\n        \"new_pin\": \"1324\",\n        \"new_pin_confirmation\": \"1324\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}",
										"description": "List of data to Cach offlne\n\n1. Accounts\n    \n    1. All accounts and their last balance\n        \n2. Loan Limits\n    \n3. Membership status\n    \n4. Onboard Approval Status"
									},
									"response": [
										{
											"id": "16826409-f331-44e8-87da-bb16f7d9f1bb",
											"name": "Change Pin",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"action\" : \"settings.change-pin\",\n    \"data\": {\n        \"customer_ref\":\"1234567890123\", // 234 Format\n        \"current_pin\": \"1234\",\n        \"new_pin\": \"1324\",\n        \"new_pin_confirmation\": \"1324\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{url}}/settings/change-pin"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": "",
													"type": "text"
												}
											],
											"cookie": [
												{
													"expires": "Invalid Date",
													"domain": "",
													"path": ""
												}
											],
											"responseTime": null,
											"body": "{\n    \"status\": \"Successful\",\n    \"message\": \"Transaction processed successfully\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"PaywithAccount\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"status\": \"ACTIVE\",\n            \"created_on\": \"2020-04-05 23:08:01\",\n            \"meta\": {}\n        },\n        \"client_info\": {\n            \"name\": null,\n            \"id\": null,\n            \"bank_cbn_code\": null,\n            \"bank_name\": null,\n            \"console_url\": null,\n            \"js_background_image\": null,\n            \"css_url\": null,\n            \"logo_url\": null,\n            \"footer_text\": null,\n            \"show_options_icon\": false,\n            \"paginate\": false,\n            \"paginate_count\": 0,\n            \"options\": null,\n            \"merchant\": null,\n            \"colors\": null,\n            \"meta\": null\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "Change PIN [R] - No Auth Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "18a9ecde-e79f-4b75-a811-c8fc9d492dfd",
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.test('Has status field', function(){ \r",
													"    pm.expect(jsonData).to.have.property('status'); \r",
													"});\r",
													"\r",
													"pm.test('Has message field', function(){ \r",
													"    pm.expect(jsonData).to.have.property('message');\r",
													"    pm.expect(jsonData.message).to.include(\"Invalid Header details\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "a79af97e-dddd-4f56-a3b2-a1cd46992ab5",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{wrong_token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\" : \"settings.change-pin\",\n    \"data\": {\n        \"customer_ref\":\"{{customer_ref}}\", // 234 Format\n        \"current_pin\": \"{{pin}}\",\n        \"new_pin\": \"1324\",\n        \"new_pin_confirmation\": \"1324\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}",
										"description": "List of data to Cach offlne\n\n1. Accounts\n    \n    1. All accounts and their last balance\n        \n2. Loan Limits\n    \n3. Membership status\n    \n4. Onboard Approval Status"
									},
									"response": [
										{
											"id": "b2266891-4337-46d7-8da5-ea3a4b2a0c6e",
											"name": "Change Pin",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"action\" : \"settings.change-pin\",\n    \"data\": {\n        \"customer_ref\":\"1234567890123\", // 234 Format\n        \"current_pin\": \"1234\",\n        \"new_pin\": \"1324\",\n        \"new_pin_confirmation\": \"1324\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{url}}/settings/change-pin"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": "",
													"type": "text"
												}
											],
											"cookie": [
												{
													"expires": "Invalid Date",
													"domain": "",
													"path": ""
												}
											],
											"responseTime": null,
											"body": "{\n    \"status\": \"Successful\",\n    \"message\": \"Transaction processed successfully\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"PaywithAccount\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"status\": \"ACTIVE\",\n            \"created_on\": \"2020-04-05 23:08:01\",\n            \"meta\": {}\n        },\n        \"client_info\": {\n            \"name\": null,\n            \"id\": null,\n            \"bank_cbn_code\": null,\n            \"bank_name\": null,\n            \"console_url\": null,\n            \"js_background_image\": null,\n            \"css_url\": null,\n            \"logo_url\": null,\n            \"footer_text\": null,\n            \"show_options_icon\": false,\n            \"paginate\": false,\n            \"paginate_count\": 0,\n            \"options\": null,\n            \"merchant\": null,\n            \"colors\": null,\n            \"meta\": null\n        }\n    }\n}"
										}
									]
								}
							],
							"id": "c80d8ea2-382a-48a5-b71f-b19439561ebe"
						},
						{
							"name": "Change Password",
							"item": [
								{
									"name": "Change Password [R]",
									"id": "fe19d282-3dea-4c89-b471-3b212931ef06",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\" : \"settings.change-password\",\n    \"data\": {\n        \"customer_ref\":\"1234567890123\", // 234 Format\n        \"current_pin\": \"1234\",\n        \"new_pin\": \"1324\",\n        \"new_pin_confirmation\": \"1324\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{url}}/auth/create-password",
										"description": "List of data to Cach offlne\n\n1. Accounts\n    \n    1. All accounts and their last balance\n        \n2. Loan Limits\n    \n3. Membership status\n    \n4. Onboard Approval Status"
									},
									"response": [
										{
											"id": "c7f9d4af-6490-4195-a710-5f063cd5a206",
											"name": "Change Password",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"action\" : \"settings.change-password\",\n    \"data\": {\n        \"customer_ref\":\"1234567890123\", // 234 Format\n        \"current_pin\": \"1234\",\n        \"new_pin\": \"1324\",\n        \"new_pin_confirmation\": \"1324\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{url}}/auth/create-password"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": "",
													"type": "text"
												}
											],
											"cookie": [
												{
													"expires": "Invalid Date",
													"domain": "",
													"path": ""
												}
											],
											"responseTime": null,
											"body": "{\n    \"status\": \"Successful\",\n    \"message\": \"Transaction processed successfully\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"PaywithAccount\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"status\": \"ACTIVE\",\n            \"created_on\": \"2020-04-05 23:08:01\",\n            \"meta\": {}\n        },\n        \"client_info\": {\n            \"name\": null,\n            \"id\": null,\n            \"bank_cbn_code\": null,\n            \"bank_name\": null,\n            \"console_url\": null,\n            \"js_background_image\": null,\n            \"css_url\": null,\n            \"logo_url\": null,\n            \"footer_text\": null,\n            \"show_options_icon\": false,\n            \"paginate\": false,\n            \"paginate_count\": 0,\n            \"options\": null,\n            \"merchant\": null,\n            \"colors\": null,\n            \"meta\": null\n        }\n    }\n}"
										}
									]
								}
							],
							"id": "dde68ea5-cf81-4ac1-b6f0-777efaf89829"
						}
					],
					"id": "878eb738-d7a6-4c37-959f-8ba011e34037"
				}
			],
			"id": "d8f6c4b3-8ed3-4486-a5e5-4876944c1a31"
		},
		{
			"name": "Subscription",
			"item": [
				{
					"name": "Create Subscription",
					"item": [
						{
							"name": "Create Subscription [R]",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2d4b0593-e06f-4c1f-86ef-16e70832dc7c",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Check if the status is Processing\", function () {\r",
											"    pm.expect(jsonData.status).to.eql(\"Processing\");\r",
											"});\r",
											"\r",
											"pm.test(\"Check that message is returned\", function () {\r",
											"    pm.expect(jsonData.message).to.not.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Check if data object in response returns correctly\", function () {\r",
											"    pm.expect(jsonData.data).to.have.property(\"provider_response\");\r",
											"    pm.expect(jsonData.data.provider_response).to.have.property(\"reference\");\r",
											"    pm.expect(jsonData.data.provider_response).to.have.property(\"meta\");\r",
											"    pm.expect(jsonData.data.provider_response.meta).to.have.property(\"transaction_ref\");\r",
											"    pm.expect(jsonData.data.provider_response.meta).to.have.property(\"payment_id\");\r",
											"});\r",
											"\r",
											"pm.test(\"Set payment id as a collection variable\", function () {\r",
											"    pm.collectionVariables.set(\"current_subscription_id\", jsonData.data.provider_response.meta.payment_id);\r",
											"})\r",
											"    \r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "ff45703c-a1c9-4d08-be6d-7bd5a37ac09c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{Token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"subscription.create\",\n    \"data\": {\n        \"customer_ref\": \"2347080507367\",\n        \"membership_plan\": \"Test\",\n        \"membership_plan_amount\": \"200\",\n        \"membership_plan_frequency\": \"weekly\",\n        \"account_number\": \"2212979372\",\n        \"bank_code\": \"057\",\n        \"biller_code\": \"010\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}",
								"description": "List of data to Cach offlne\n\n1. Accounts\n    \n    1. All accounts and their last balance\n        \n2. Loan Limits\n    \n3. Membership status\n    \n4. Onboard Approval Status"
							},
							"response": [
								{
									"id": "83b3f293-8731-4458-a5d4-448d2048cf19",
									"name": "Create Subscription",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"subscription.create\",\n    \"data\": {\n        \"customer_ref\": \"1234567890\",\n        \"first_name\": \"Joh\",\n        \"last_name\": \"Doe\",\n        \"email\": \"email@gmail.com\",\n        \"nin\": \"\",\n        \"membership_plan\": \"Test\",\n        \"membership_plan_amount\": \"2000\",\n        \"membership_plan_duration\": \"weekly\",\n        \"account_number\": \"0987654321\",\n        \"bank_code\": \"123\",\n        \"accepted_tnc\": true,\n        \"biller_code\": \"\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{url}}/misc/create-subscription"
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [
										{
											"expires": "Invalid Date",
											"domain": "",
											"path": ""
										}
									],
									"responseTime": null,
									"body": "{\n    \"status\": \"Processing\",\n    \"message\": \"Kindly follow the instructions sent to you via SMS and Email to complete payment\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"PaywithAccount\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"reference\": \"RC1544159/1557/0005716487\",\n            \"account_number\": \"2247916766\",\n            \"currency_code\": \"NGN\",\n            \"customer_email\": \"akin@onepipe.com\",\n            \"bank_code\": \"033\",\n            \"status\": \"REQUESTED\",\n            \"created_on\": \"2025-02-25 21:53:52\",\n            \"meta\": {\n                \"payment_id\": 3458,\n                \"virtual_account_name\": \"PWT - Demo Business\",\n                \"virtual_account_number\": \"4565708848\",\n                \"virtual_account_bank_name\": \"Fidelity\",\n                \"virtual_account_bank_code\": \"070\",\n                \"virtual_account_status\": \"active\",\n                \"virtual_account_expiry_date\": \"2025-02-26 22:53:00\",\n                \"ussd_code\": null\n            }\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Create Subscription [R] - empty customer reference",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2d4b0593-e06f-4c1f-86ef-16e70832dc7c",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Check if the status is Processing\", function () {\r",
											"    pm.expect(jsonData.status).to.eql(\"Failed\");\r",
											"});\r",
											"\r",
											"pm.test(\"Check that message is returned\", function () {\r",
											"    pm.expect(jsonData.message).to.not.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Check if data object in response returns correctly\", function () {\r",
											"    pm.expect(jsonData.data).to.have.property(\"error\");\r",
											"    pm.expect(jsonData.data.error).to.have.property(\"code\");\r",
											"    pm.expect(jsonData.data.error.code).to.not.be.null;\r",
											"});\r",
											"\r",
											"\r",
											"    \r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "c9970501-f9da-4365-8c36-e731049b2486",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{Token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"subscription.create\",\n    \"data\": {\n        \"customer_ref\": \"\",\n        \"membership_plan\": \"Test\",\n        \"membership_plan_amount\": \"200\",\n        \"membership_plan_frequency\": \"weekly\",\n        \"account_number\": \"2212979372\",\n        \"bank_code\": \"057\",\n        \"biller_code\": \"010\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}",
								"description": "List of data to Cach offlne\n\n1. Accounts\n    \n    1. All accounts and their last balance\n        \n2. Loan Limits\n    \n3. Membership status\n    \n4. Onboard Approval Status"
							},
							"response": [
								{
									"id": "e210780c-445c-4eff-b641-1237649b796c",
									"name": "Create Subscription",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"subscription.create\",\n    \"data\": {\n        \"customer_ref\": \"1234567890\",\n        \"first_name\": \"Joh\",\n        \"last_name\": \"Doe\",\n        \"email\": \"email@gmail.com\",\n        \"nin\": \"\",\n        \"membership_plan\": \"Test\",\n        \"membership_plan_amount\": \"2000\",\n        \"membership_plan_duration\": \"weekly\",\n        \"account_number\": \"0987654321\",\n        \"bank_code\": \"123\",\n        \"accepted_tnc\": true,\n        \"biller_code\": \"\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{url}}/misc/create-subscription"
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [
										{
											"expires": "Invalid Date",
											"domain": "",
											"path": ""
										}
									],
									"responseTime": null,
									"body": "{\n    \"status\": \"Processing\",\n    \"message\": \"Kindly follow the instructions sent to you via SMS and Email to complete payment\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"PaywithAccount\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"reference\": \"RC1544159/1557/0005716487\",\n            \"account_number\": \"2247916766\",\n            \"currency_code\": \"NGN\",\n            \"customer_email\": \"akin@onepipe.com\",\n            \"bank_code\": \"033\",\n            \"status\": \"REQUESTED\",\n            \"created_on\": \"2025-02-25 21:53:52\",\n            \"meta\": {\n                \"payment_id\": 3458,\n                \"virtual_account_name\": \"PWT - Demo Business\",\n                \"virtual_account_number\": \"4565708848\",\n                \"virtual_account_bank_name\": \"Fidelity\",\n                \"virtual_account_bank_code\": \"070\",\n                \"virtual_account_status\": \"active\",\n                \"virtual_account_expiry_date\": \"2025-02-26 22:53:00\",\n                \"ussd_code\": null\n            }\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Create Subscription [R] - empty required field",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2d4b0593-e06f-4c1f-86ef-16e70832dc7c",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Check if the status is Processing\", function () {\r",
											"    pm.expect(jsonData.status).to.eql(\"Failed\");\r",
											"});\r",
											"\r",
											"pm.test(\"Check that message is returned\", function () {\r",
											"    pm.expect(jsonData.message).to.not.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Check if data object in response returns correctly\", function () {\r",
											"    pm.expect(jsonData.data).to.have.property(\"error\");\r",
											"    pm.expect(jsonData.data.error).to.have.property(\"code\");\r",
											"    pm.expect(jsonData.data.error.code).to.not.be.null;\r",
											"});\r",
											"\r",
											"\r",
											"    \r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "1c0d714d-b0b3-45a2-9f04-bf12552435b8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{Token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"subscription.create\",\n    \"data\": {\n        \"customer_ref\": \"2347080507367\",\n        \"membership_plan\": \"Test\",\n        \"membership_plan_amount\": \"\",\n        \"membership_plan_frequency\": \"weekly\",\n        \"account_number\": \"2212979372\",\n        \"bank_code\": \"057\",\n        \"biller_code\": \"010\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}",
								"description": "List of data to Cach offlne\n\n1. Accounts\n    \n    1. All accounts and their last balance\n        \n2. Loan Limits\n    \n3. Membership status\n    \n4. Onboard Approval Status"
							},
							"response": [
								{
									"id": "5d83a9bf-e8e7-49af-aecd-e09bab7ae69f",
									"name": "Create Subscription",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"subscription.create\",\n    \"data\": {\n        \"customer_ref\": \"1234567890\",\n        \"first_name\": \"Joh\",\n        \"last_name\": \"Doe\",\n        \"email\": \"email@gmail.com\",\n        \"nin\": \"\",\n        \"membership_plan\": \"Test\",\n        \"membership_plan_amount\": \"2000\",\n        \"membership_plan_duration\": \"weekly\",\n        \"account_number\": \"0987654321\",\n        \"bank_code\": \"123\",\n        \"accepted_tnc\": true,\n        \"biller_code\": \"\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{url}}/misc/create-subscription"
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [
										{
											"expires": "Invalid Date",
											"domain": "",
											"path": ""
										}
									],
									"responseTime": null,
									"body": "{\n    \"status\": \"Processing\",\n    \"message\": \"Kindly follow the instructions sent to you via SMS and Email to complete payment\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"PaywithAccount\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"reference\": \"RC1544159/1557/0005716487\",\n            \"account_number\": \"2247916766\",\n            \"currency_code\": \"NGN\",\n            \"customer_email\": \"akin@onepipe.com\",\n            \"bank_code\": \"033\",\n            \"status\": \"REQUESTED\",\n            \"created_on\": \"2025-02-25 21:53:52\",\n            \"meta\": {\n                \"payment_id\": 3458,\n                \"virtual_account_name\": \"PWT - Demo Business\",\n                \"virtual_account_number\": \"4565708848\",\n                \"virtual_account_bank_name\": \"Fidelity\",\n                \"virtual_account_bank_code\": \"070\",\n                \"virtual_account_status\": \"active\",\n                \"virtual_account_expiry_date\": \"2025-02-26 22:53:00\",\n                \"ussd_code\": null\n            }\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Create Subscription [R] - Invalid account number",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2d4b0593-e06f-4c1f-86ef-16e70832dc7c",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Check if the status is Processing\", function () {\r",
											"    pm.expect(jsonData.status).to.eql(\"Failed\");\r",
											"});\r",
											"\r",
											"pm.test(\"Check that message is returned\", function () {\r",
											"    pm.expect(jsonData.message).to.not.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Check if data object in response returns correctly\", function () {\r",
											"    pm.expect(jsonData.data).to.have.property(\"error\");\r",
											"    pm.expect(jsonData.data.error).to.have.property(\"code\");\r",
											"    pm.expect(jsonData.data.error.code).to.not.be.null;\r",
											"});\r",
											"\r",
											"\r",
											"    \r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "0daf67c8-e1b0-41f3-97a7-34a50b6c518c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{Token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"subscription.create\",\n    \"data\": {\n        \"customer_ref\": \"2347080507367\",\n        \"membership_plan\": \"Test\",\n        \"membership_plan_amount\": \"200\",\n        \"membership_plan_frequency\": \"weekly\",\n        \"account_number\": \"0212979326\",\n        \"bank_code\": \"057\",\n        \"biller_code\": \"010\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}",
								"description": "List of data to Cach offlne\n\n1. Accounts\n    \n    1. All accounts and their last balance\n        \n2. Loan Limits\n    \n3. Membership status\n    \n4. Onboard Approval Status"
							},
							"response": [
								{
									"id": "78c707f9-0362-44d5-9467-6792987934ac",
									"name": "Create Subscription",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"subscription.create\",\n    \"data\": {\n        \"customer_ref\": \"1234567890\",\n        \"first_name\": \"Joh\",\n        \"last_name\": \"Doe\",\n        \"email\": \"email@gmail.com\",\n        \"nin\": \"\",\n        \"membership_plan\": \"Test\",\n        \"membership_plan_amount\": \"2000\",\n        \"membership_plan_duration\": \"weekly\",\n        \"account_number\": \"0987654321\",\n        \"bank_code\": \"123\",\n        \"accepted_tnc\": true,\n        \"biller_code\": \"\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{url}}/misc/create-subscription"
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [
										{
											"expires": "Invalid Date",
											"domain": "",
											"path": ""
										}
									],
									"responseTime": null,
									"body": "{\n    \"status\": \"Processing\",\n    \"message\": \"Kindly follow the instructions sent to you via SMS and Email to complete payment\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"PaywithAccount\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"reference\": \"RC1544159/1557/0005716487\",\n            \"account_number\": \"2247916766\",\n            \"currency_code\": \"NGN\",\n            \"customer_email\": \"akin@onepipe.com\",\n            \"bank_code\": \"033\",\n            \"status\": \"REQUESTED\",\n            \"created_on\": \"2025-02-25 21:53:52\",\n            \"meta\": {\n                \"payment_id\": 3458,\n                \"virtual_account_name\": \"PWT - Demo Business\",\n                \"virtual_account_number\": \"4565708848\",\n                \"virtual_account_bank_name\": \"Fidelity\",\n                \"virtual_account_bank_code\": \"070\",\n                \"virtual_account_status\": \"active\",\n                \"virtual_account_expiry_date\": \"2025-02-26 22:53:00\",\n                \"ussd_code\": null\n            }\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Create Subscription [R] - Invalid token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2d4b0593-e06f-4c1f-86ef-16e70832dc7c",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Check if the status is Processing\", function () {\r",
											"    pm.expect(jsonData.status).to.eql(\"Failed\");\r",
											"});\r",
											"\r",
											"pm.test(\"Check that message is returned\", function () {\r",
											"    pm.expect(jsonData.message).to.not.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Check if data object in response returns correctly\", function () {\r",
											"    pm.expect(jsonData.data).to.have.property(\"error\");\r",
											"    pm.expect(jsonData.data.error).to.have.property(\"code\");\r",
											"    pm.expect(jsonData.data.error.code).to.not.be.null;\r",
											"});\r",
											"\r",
											"\r",
											"    \r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "10bd491c-d30d-4e63-ad7b-1caaec327b75",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer 6ec10a2f18cf9f894c49",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"subscription.create\",\n    \"data\": {\n        \"customer_ref\": \"2347080507367\",\n        \"membership_plan\": \"Test\",\n        \"membership_plan_amount\": \"200\",\n        \"membership_plan_frequency\": \"weekly\",\n        \"account_number\": \"0212979326\",\n        \"bank_code\": \"057\",\n        \"biller_code\": \"010\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}",
								"description": "List of data to Cach offlne\n\n1. Accounts\n    \n    1. All accounts and their last balance\n        \n2. Loan Limits\n    \n3. Membership status\n    \n4. Onboard Approval Status"
							},
							"response": [
								{
									"id": "0cda8a3e-d0a9-4d4c-9ad1-bd91b9cc2b21",
									"name": "Create Subscription",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"subscription.create\",\n    \"data\": {\n        \"customer_ref\": \"1234567890\",\n        \"first_name\": \"Joh\",\n        \"last_name\": \"Doe\",\n        \"email\": \"email@gmail.com\",\n        \"nin\": \"\",\n        \"membership_plan\": \"Test\",\n        \"membership_plan_amount\": \"2000\",\n        \"membership_plan_duration\": \"weekly\",\n        \"account_number\": \"0987654321\",\n        \"bank_code\": \"123\",\n        \"accepted_tnc\": true,\n        \"biller_code\": \"\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{url}}/misc/create-subscription"
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [
										{
											"expires": "Invalid Date",
											"domain": "",
											"path": ""
										}
									],
									"responseTime": null,
									"body": "{\n    \"status\": \"Processing\",\n    \"message\": \"Kindly follow the instructions sent to you via SMS and Email to complete payment\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"PaywithAccount\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"reference\": \"RC1544159/1557/0005716487\",\n            \"account_number\": \"2247916766\",\n            \"currency_code\": \"NGN\",\n            \"customer_email\": \"akin@onepipe.com\",\n            \"bank_code\": \"033\",\n            \"status\": \"REQUESTED\",\n            \"created_on\": \"2025-02-25 21:53:52\",\n            \"meta\": {\n                \"payment_id\": 3458,\n                \"virtual_account_name\": \"PWT - Demo Business\",\n                \"virtual_account_number\": \"4565708848\",\n                \"virtual_account_bank_name\": \"Fidelity\",\n                \"virtual_account_bank_code\": \"070\",\n                \"virtual_account_status\": \"active\",\n                \"virtual_account_expiry_date\": \"2025-02-26 22:53:00\",\n                \"ussd_code\": null\n            }\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Create Subscription [R] - empty token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2d4b0593-e06f-4c1f-86ef-16e70832dc7c",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Check if the status is Processing\", function () {\r",
											"    pm.expect(jsonData.status).to.eql(\"Failed\");\r",
											"});\r",
											"\r",
											"pm.test(\"Check that message is returned\", function () {\r",
											"    pm.expect(jsonData.message).to.not.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Check if data object in response returns correctly\", function () {\r",
											"    pm.expect(jsonData.data).to.have.property(\"error\");\r",
											"    pm.expect(jsonData.data.error).to.have.property(\"code\");\r",
											"    pm.expect(jsonData.data.error.code).to.not.be.null;\r",
											"});\r",
											"\r",
											"\r",
											"    \r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "fe39f00a-7092-430d-905c-ebaaf5dcac77",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{Token}}",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"subscription.create\",\n    \"data\": {\n        \"customer_ref\": \"2347080507367\",\n        \"membership_plan\": \"Test\",\n        \"membership_plan_amount\": \"200\",\n        \"membership_plan_frequency\": \"weekly\",\n        \"account_number\": \"0212979326\",\n        \"bank_code\": \"057\",\n        \"biller_code\": \"010\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}",
								"description": "List of data to Cach offlne\n\n1. Accounts\n    \n    1. All accounts and their last balance\n        \n2. Loan Limits\n    \n3. Membership status\n    \n4. Onboard Approval Status"
							},
							"response": [
								{
									"id": "b6ae814d-8d25-46a6-bbe3-b542e1a7bb61",
									"name": "Create Subscription",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"subscription.create\",\n    \"data\": {\n        \"customer_ref\": \"1234567890\",\n        \"first_name\": \"Joh\",\n        \"last_name\": \"Doe\",\n        \"email\": \"email@gmail.com\",\n        \"nin\": \"\",\n        \"membership_plan\": \"Test\",\n        \"membership_plan_amount\": \"2000\",\n        \"membership_plan_duration\": \"weekly\",\n        \"account_number\": \"0987654321\",\n        \"bank_code\": \"123\",\n        \"accepted_tnc\": true,\n        \"biller_code\": \"\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{url}}/misc/create-subscription"
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [
										{
											"expires": "Invalid Date",
											"domain": "",
											"path": ""
										}
									],
									"responseTime": null,
									"body": "{\n    \"status\": \"Processing\",\n    \"message\": \"Kindly follow the instructions sent to you via SMS and Email to complete payment\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"PaywithAccount\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"reference\": \"RC1544159/1557/0005716487\",\n            \"account_number\": \"2247916766\",\n            \"currency_code\": \"NGN\",\n            \"customer_email\": \"akin@onepipe.com\",\n            \"bank_code\": \"033\",\n            \"status\": \"REQUESTED\",\n            \"created_on\": \"2025-02-25 21:53:52\",\n            \"meta\": {\n                \"payment_id\": 3458,\n                \"virtual_account_name\": \"PWT - Demo Business\",\n                \"virtual_account_number\": \"4565708848\",\n                \"virtual_account_bank_name\": \"Fidelity\",\n                \"virtual_account_bank_code\": \"070\",\n                \"virtual_account_status\": \"active\",\n                \"virtual_account_expiry_date\": \"2025-02-26 22:53:00\",\n                \"ussd_code\": null\n            }\n        }\n    }\n}"
								}
							]
						}
					],
					"id": "64a55a57-12da-458d-8817-a1ee160f68b0"
				},
				{
					"name": "Upgrade Subscription",
					"item": [
						{
							"name": "Upgrade  Subscription [R]",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "409fd43d-662b-4788-a6f4-7e8eafcbf5eb",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Check that response status is returned\", function () {\r",
											"    pm.expect(jsonData.status).to.eql(\"Successful\");\r",
											"})\r",
											"\r",
											"pm.test(\"Check that response message is not empty\", function (){\r",
											"    pm.expect(jsonData.message).to.not.be.empty;\r",
											"})\r",
											"\r",
											"pm.test(\"Check that response data is not empty\", function () {\r",
											"    pm.expect(jsonData.data.provider_response).to.not.be.empty;\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "41936b3a-ba46-47e7-bd88-6f514a536961",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{Token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"subscription.upgrade\",\n    \"data\": {\n        \"customer_ref\": \"2347080507367\",\n        \"biller_code\": \"010\",\n        \"membership_plan\": \"Premium\",\n        \"membership_plan_amount\": \"300\",\n        \"membership_plan_frequency\": \"weekly\", //\"weekly|monthly|daily\",\n        \"account_number\": \"2212979372\",\n        \"bank_code\": \"057\",\n        \"current_subscription_id\": \"{{current_subscription_id}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}",
								"description": "List of data to Cach offlne\n\n1. Accounts\n    \n    1. All accounts and their last balance\n        \n2. Loan Limits\n    \n3. Membership status\n    \n4. Onboard Approval Status"
							},
							"response": [
								{
									"id": "a1c1161f-4bfc-4155-bb2b-856b91682453",
									"name": "Upgrade  Subscription",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"subscription.upgrade\",\n    \"data\": {\n        \"customer_ref\": \"1234567890\",\n        \"biller_code\": \"\",\n        \"membership_plan\": \"\",\n        \"membership_plan_amount\": \"\",\n        \"membership_plan_frequency\": \"\",\n        \"account_number\": \"\",\n        \"bank_code\": \"\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{url}}/subscription/upgrade"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [
										{
											"expires": "Invalid Date",
											"domain": "",
											"path": ""
										}
									],
									"responseTime": null,
									"body": "{\n    \"status\": \"Successful\",\n    \"message\": \"Transaction processed successfully\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"NIBSS\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"provider_auth_token\": \"2247916766;033\",\n            \"paymentoptions\": [],\n            \"transaction_final_amount\": 10000,\n            \"reference\": \"71443160051373\",\n            \"meta\": {\n                \"session_id\": null,\n                \"start_date\": \"2024-10-30\",\n                \"end_date\": \"2025-11-08\",\n                \"expected_transaction_count\": 0,\n                \"successful_transaction_count\": 0,\n                \"failed_transaction_count\": 0,\n                \"subscription_id\": 1444\n            }\n        },\n        \"client_info\": {\n            \"name\": null,\n            \"id\": null,\n            \"bank_cbn_code\": null,\n            \"bank_name\": null,\n            \"console_url\": null,\n            \"js_background_image\": null,\n            \"css_url\": null,\n            \"logo_url\": null,\n            \"footer_text\": null,\n            \"show_options_icon\": false,\n            \"paginate\": false,\n            \"paginate_count\": 0,\n            \"options\": null,\n            \"merchant\": null,\n            \"colors\": null,\n            \"meta\": null\n        }\n    }\n}"
								},
								{
									"id": "995fa3af-abe1-49de-8c64-5885c7416895",
									"name": "Upgrade  Subscription [R]",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"subscription.upgrade\",\n    \"data\": {\n        \"customer_ref\": \"2347080507367\",\n        \"biller_code\": \"010\",\n        \"membership_plan\": \"Premium\",\n        \"membership_plan_amount\": \"300\",\n        \"membership_plan_frequency\": \"weekly\", //\"weekly|monthly|daily\",\n        \"account_number\": \"2212979372\",\n        \"bank_code\": \"057\",\n        \"current_subscription_id\": \"{{current_subscription_id}}\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Date",
											"value": "Wed, 20 Aug 2025 15:14:50 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "291"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"123-ooiL/43xj0lD/rqS1apdCcAgweI\""
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"Failed\",\n    \"message\": \"Cannot deactivate a subscription that is inactive.\",\n    \"data\": {\n        \"provider_response_code\": 400,\n        \"error\": {\n            \"code\": 400,\n            \"message\": \"Cannot deactivate a subscription that is inactive.\"\n        },\n        \"errors\": [\n            {\n                \"code\": 400,\n                \"message\": \"Cannot deactivate a subscription that is inactive.\"\n            }\n        ]\n    }\n}"
								}
							]
						},
						{
							"name": "Upgrade  Subscription [R] - empty customer reference",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "409fd43d-662b-4788-a6f4-7e8eafcbf5eb",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Check that response status is returned\", function () {\r",
											"    pm.expect(jsonData.status).to.eql(\"Failed\");\r",
											"})\r",
											"\r",
											"pm.test(\"Check that response message is not empty\", function (){\r",
											"    pm.expect(jsonData.message).to.not.be.empty;\r",
											"})\r",
											"\r",
											"pm.test(\"Check that response data is not empty\", function () {\r",
											"    pm.expect(jsonData.data.error).to.be.an('object');\r",
											"    pm.expect(jsonData.data.error.code).to.exist.and.not.be.null;\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "4b36afc4-1a00-4173-8b63-7d6683dfce75",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{Token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"subscription.upgrade\",\n    \"data\": {\n        \"customer_ref\": \"\",\n        \"biller_code\": \"010\",\n        \"membership_plan\": \"Premium\",\n        \"membership_plan_amount\": \"300\",\n        \"membership_plan_frequency\": \"weekly\", //\"weekly|monthly|daily\",\n        \"account_number\": \"2212979372\",\n        \"bank_code\": \"057\",\n        \"current_subscription_id\": \"{{current_subscription_id}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}",
								"description": "List of data to Cach offlne\n\n1. Accounts\n    \n    1. All accounts and their last balance\n        \n2. Loan Limits\n    \n3. Membership status\n    \n4. Onboard Approval Status"
							},
							"response": [
								{
									"id": "638e7f22-eb83-44d3-b807-7ff1e32a2710",
									"name": "Upgrade  Subscription",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"subscription.upgrade\",\n    \"data\": {\n        \"customer_ref\": \"1234567890\",\n        \"biller_code\": \"\",\n        \"membership_plan\": \"\",\n        \"membership_plan_amount\": \"\",\n        \"membership_plan_frequency\": \"\",\n        \"account_number\": \"\",\n        \"bank_code\": \"\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{url}}/subscription/upgrade"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [
										{
											"expires": "Invalid Date",
											"domain": "",
											"path": ""
										}
									],
									"responseTime": null,
									"body": "{\n    \"status\": \"Successful\",\n    \"message\": \"Transaction processed successfully\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"NIBSS\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"provider_auth_token\": \"2247916766;033\",\n            \"paymentoptions\": [],\n            \"transaction_final_amount\": 10000,\n            \"reference\": \"71443160051373\",\n            \"meta\": {\n                \"session_id\": null,\n                \"start_date\": \"2024-10-30\",\n                \"end_date\": \"2025-11-08\",\n                \"expected_transaction_count\": 0,\n                \"successful_transaction_count\": 0,\n                \"failed_transaction_count\": 0,\n                \"subscription_id\": 1444\n            }\n        },\n        \"client_info\": {\n            \"name\": null,\n            \"id\": null,\n            \"bank_cbn_code\": null,\n            \"bank_name\": null,\n            \"console_url\": null,\n            \"js_background_image\": null,\n            \"css_url\": null,\n            \"logo_url\": null,\n            \"footer_text\": null,\n            \"show_options_icon\": false,\n            \"paginate\": false,\n            \"paginate_count\": 0,\n            \"options\": null,\n            \"merchant\": null,\n            \"colors\": null,\n            \"meta\": null\n        }\n    }\n}"
								},
								{
									"id": "643a7913-c739-4845-8449-c7fc8376221e",
									"name": "Upgrade  Subscription [R]",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"subscription.upgrade\",\n    \"data\": {\n        \"customer_ref\": \"2347080507367\",\n        \"biller_code\": \"010\",\n        \"membership_plan\": \"Premium\",\n        \"membership_plan_amount\": \"300\",\n        \"membership_plan_frequency\": \"weekly\", //\"weekly|monthly|daily\",\n        \"account_number\": \"2212979372\",\n        \"bank_code\": \"057\",\n        \"current_subscription_id\": \"{{current_subscription_id}}\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Date",
											"value": "Wed, 20 Aug 2025 15:14:50 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "291"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"123-ooiL/43xj0lD/rqS1apdCcAgweI\""
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"Failed\",\n    \"message\": \"Cannot deactivate a subscription that is inactive.\",\n    \"data\": {\n        \"provider_response_code\": 400,\n        \"error\": {\n            \"code\": 400,\n            \"message\": \"Cannot deactivate a subscription that is inactive.\"\n        },\n        \"errors\": [\n            {\n                \"code\": 400,\n                \"message\": \"Cannot deactivate a subscription that is inactive.\"\n            }\n        ]\n    }\n}"
								}
							]
						},
						{
							"name": "Upgrade  Subscription [R] - invalid account number",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "409fd43d-662b-4788-a6f4-7e8eafcbf5eb",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Check that response status is returned\", function () {\r",
											"    pm.expect(jsonData.status).to.eql(\"Failed\");\r",
											"})\r",
											"\r",
											"pm.test(\"Check that response message is not empty\", function (){\r",
											"    pm.expect(jsonData.message).to.not.be.empty;\r",
											"})\r",
											"\r",
											"pm.test(\"Check that response data is not empty\", function () {\r",
											"    pm.expect(jsonData.data.error).to.be.an('object');\r",
											"    pm.expect(jsonData.data.error.code).to.exist.and.not.be.null;\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "0464c849-5fd0-43f6-8872-8da04f0332d2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{Token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"subscription.upgrade\",\n    \"data\": {\n        \"customer_ref\": \"2347080507367\",\n        \"biller_code\": \"010\",\n        \"membership_plan\": \"Premium\",\n        \"membership_plan_amount\": \"300\",\n        \"membership_plan_frequency\": \"weekly\", //\"weekly|monthly|daily\",\n        \"account_number\": \"22129793\",\n        \"bank_code\": \"057\",\n        \"current_subscription_id\": \"{{current_subscription_id}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}",
								"description": "List of data to Cach offlne\n\n1. Accounts\n    \n    1. All accounts and their last balance\n        \n2. Loan Limits\n    \n3. Membership status\n    \n4. Onboard Approval Status"
							},
							"response": [
								{
									"id": "bbe35b1d-f5d2-4c79-8403-0e026ed29719",
									"name": "Upgrade  Subscription",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"subscription.upgrade\",\n    \"data\": {\n        \"customer_ref\": \"1234567890\",\n        \"biller_code\": \"\",\n        \"membership_plan\": \"\",\n        \"membership_plan_amount\": \"\",\n        \"membership_plan_frequency\": \"\",\n        \"account_number\": \"\",\n        \"bank_code\": \"\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{url}}/subscription/upgrade"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [
										{
											"expires": "Invalid Date",
											"domain": "",
											"path": ""
										}
									],
									"responseTime": null,
									"body": "{\n    \"status\": \"Successful\",\n    \"message\": \"Transaction processed successfully\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"NIBSS\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"provider_auth_token\": \"2247916766;033\",\n            \"paymentoptions\": [],\n            \"transaction_final_amount\": 10000,\n            \"reference\": \"71443160051373\",\n            \"meta\": {\n                \"session_id\": null,\n                \"start_date\": \"2024-10-30\",\n                \"end_date\": \"2025-11-08\",\n                \"expected_transaction_count\": 0,\n                \"successful_transaction_count\": 0,\n                \"failed_transaction_count\": 0,\n                \"subscription_id\": 1444\n            }\n        },\n        \"client_info\": {\n            \"name\": null,\n            \"id\": null,\n            \"bank_cbn_code\": null,\n            \"bank_name\": null,\n            \"console_url\": null,\n            \"js_background_image\": null,\n            \"css_url\": null,\n            \"logo_url\": null,\n            \"footer_text\": null,\n            \"show_options_icon\": false,\n            \"paginate\": false,\n            \"paginate_count\": 0,\n            \"options\": null,\n            \"merchant\": null,\n            \"colors\": null,\n            \"meta\": null\n        }\n    }\n}"
								},
								{
									"id": "1369df93-83d7-418c-9ceb-d7fce9317a84",
									"name": "Upgrade  Subscription [R]",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"subscription.upgrade\",\n    \"data\": {\n        \"customer_ref\": \"2347080507367\",\n        \"biller_code\": \"010\",\n        \"membership_plan\": \"Premium\",\n        \"membership_plan_amount\": \"300\",\n        \"membership_plan_frequency\": \"weekly\", //\"weekly|monthly|daily\",\n        \"account_number\": \"2212979372\",\n        \"bank_code\": \"057\",\n        \"current_subscription_id\": \"{{current_subscription_id}}\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Date",
											"value": "Wed, 20 Aug 2025 15:14:50 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "291"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"123-ooiL/43xj0lD/rqS1apdCcAgweI\""
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"Failed\",\n    \"message\": \"Cannot deactivate a subscription that is inactive.\",\n    \"data\": {\n        \"provider_response_code\": 400,\n        \"error\": {\n            \"code\": 400,\n            \"message\": \"Cannot deactivate a subscription that is inactive.\"\n        },\n        \"errors\": [\n            {\n                \"code\": 400,\n                \"message\": \"Cannot deactivate a subscription that is inactive.\"\n            }\n        ]\n    }\n}"
								}
							]
						},
						{
							"name": "Upgrade  Subscription [R] - empty required field",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "409fd43d-662b-4788-a6f4-7e8eafcbf5eb",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Check that response status is returned\", function () {\r",
											"    pm.expect(jsonData.status).to.eql(\"Failed\");\r",
											"})\r",
											"\r",
											"pm.test(\"Check that response message is not empty\", function (){\r",
											"    pm.expect(jsonData.message).to.not.be.empty;\r",
											"})\r",
											"\r",
											"pm.test(\"Check that response data is not empty\", function () {\r",
											"    pm.expect(jsonData.data.error).to.be.an('object');\r",
											"    pm.expect(jsonData.data.error.code).to.exist.and.not.be.null;\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "790c04c7-b3c8-4a71-b1b5-d0100e0fa291",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{Token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"subscription.upgrade\",\n    \"data\": {\n        \"customer_ref\": \"2347080507367\",\n        \"biller_code\": \"010\",\n        \"membership_plan\": \"Premium\",\n        \"membership_plan_amount\": \"\",\n        \"membership_plan_frequency\": \"weekly\", //\"weekly|monthly|daily\",\n        \"account_number\": \"2212979372\",\n        \"bank_code\": \"057\",\n        \"current_subscription_id\": \"{{current_subscription_id}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}",
								"description": "List of data to Cach offlne\n\n1. Accounts\n    \n    1. All accounts and their last balance\n        \n2. Loan Limits\n    \n3. Membership status\n    \n4. Onboard Approval Status"
							},
							"response": [
								{
									"id": "93ead582-22e7-49e9-9596-823d413f8998",
									"name": "Upgrade  Subscription",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"subscription.upgrade\",\n    \"data\": {\n        \"customer_ref\": \"1234567890\",\n        \"biller_code\": \"\",\n        \"membership_plan\": \"\",\n        \"membership_plan_amount\": \"\",\n        \"membership_plan_frequency\": \"\",\n        \"account_number\": \"\",\n        \"bank_code\": \"\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{url}}/subscription/upgrade"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [
										{
											"expires": "Invalid Date",
											"domain": "",
											"path": ""
										}
									],
									"responseTime": null,
									"body": "{\n    \"status\": \"Successful\",\n    \"message\": \"Transaction processed successfully\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"NIBSS\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"provider_auth_token\": \"2247916766;033\",\n            \"paymentoptions\": [],\n            \"transaction_final_amount\": 10000,\n            \"reference\": \"71443160051373\",\n            \"meta\": {\n                \"session_id\": null,\n                \"start_date\": \"2024-10-30\",\n                \"end_date\": \"2025-11-08\",\n                \"expected_transaction_count\": 0,\n                \"successful_transaction_count\": 0,\n                \"failed_transaction_count\": 0,\n                \"subscription_id\": 1444\n            }\n        },\n        \"client_info\": {\n            \"name\": null,\n            \"id\": null,\n            \"bank_cbn_code\": null,\n            \"bank_name\": null,\n            \"console_url\": null,\n            \"js_background_image\": null,\n            \"css_url\": null,\n            \"logo_url\": null,\n            \"footer_text\": null,\n            \"show_options_icon\": false,\n            \"paginate\": false,\n            \"paginate_count\": 0,\n            \"options\": null,\n            \"merchant\": null,\n            \"colors\": null,\n            \"meta\": null\n        }\n    }\n}"
								},
								{
									"id": "1e42ba11-0662-4969-a22f-f6e96e3a8ffc",
									"name": "Upgrade  Subscription [R]",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"subscription.upgrade\",\n    \"data\": {\n        \"customer_ref\": \"2347080507367\",\n        \"biller_code\": \"010\",\n        \"membership_plan\": \"Premium\",\n        \"membership_plan_amount\": \"300\",\n        \"membership_plan_frequency\": \"weekly\", //\"weekly|monthly|daily\",\n        \"account_number\": \"2212979372\",\n        \"bank_code\": \"057\",\n        \"current_subscription_id\": \"{{current_subscription_id}}\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Date",
											"value": "Wed, 20 Aug 2025 15:14:50 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "291"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"123-ooiL/43xj0lD/rqS1apdCcAgweI\""
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"Failed\",\n    \"message\": \"Cannot deactivate a subscription that is inactive.\",\n    \"data\": {\n        \"provider_response_code\": 400,\n        \"error\": {\n            \"code\": 400,\n            \"message\": \"Cannot deactivate a subscription that is inactive.\"\n        },\n        \"errors\": [\n            {\n                \"code\": 400,\n                \"message\": \"Cannot deactivate a subscription that is inactive.\"\n            }\n        ]\n    }\n}"
								}
							]
						},
						{
							"name": "Upgrade  Subscription [R] - invalid token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "409fd43d-662b-4788-a6f4-7e8eafcbf5eb",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Check that response status is returned\", function () {\r",
											"    pm.expect(jsonData.status).to.eql(\"Failed\");\r",
											"})\r",
											"\r",
											"pm.test(\"Check that response message is not empty\", function (){\r",
											"    pm.expect(jsonData.message).to.not.be.empty;\r",
											"})\r",
											"\r",
											"pm.test(\"Check that response data is not empty\", function () {\r",
											"    pm.expect(jsonData.data.error).to.be.an('object');\r",
											"    pm.expect(jsonData.data.error.code).to.exist.and.not.be.null;\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "73a5cb3a-882f-493e-ad50-68df41f83507",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer 6ec10a2f18cf9f894c49",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"subscription.upgrade\",\n    \"data\": {\n        \"customer_ref\": \"2347080507367\",\n        \"biller_code\": \"010\",\n        \"membership_plan\": \"Premium\",\n        \"membership_plan_amount\": \"300\",\n        \"membership_plan_frequency\": \"weekly\", //\"weekly|monthly|daily\",\n        \"account_number\": \"2212979372\",\n        \"bank_code\": \"057\",\n        \"current_subscription_id\": \"{{current_subscription_id}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}",
								"description": "List of data to Cach offlne\n\n1. Accounts\n    \n    1. All accounts and their last balance\n        \n2. Loan Limits\n    \n3. Membership status\n    \n4. Onboard Approval Status"
							},
							"response": [
								{
									"id": "505df478-06ec-43ca-85f1-7281e44598c6",
									"name": "Upgrade  Subscription",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"subscription.upgrade\",\n    \"data\": {\n        \"customer_ref\": \"1234567890\",\n        \"biller_code\": \"\",\n        \"membership_plan\": \"\",\n        \"membership_plan_amount\": \"\",\n        \"membership_plan_frequency\": \"\",\n        \"account_number\": \"\",\n        \"bank_code\": \"\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{url}}/subscription/upgrade"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [
										{
											"expires": "Invalid Date",
											"domain": "",
											"path": ""
										}
									],
									"responseTime": null,
									"body": "{\n    \"status\": \"Successful\",\n    \"message\": \"Transaction processed successfully\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"NIBSS\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"provider_auth_token\": \"2247916766;033\",\n            \"paymentoptions\": [],\n            \"transaction_final_amount\": 10000,\n            \"reference\": \"71443160051373\",\n            \"meta\": {\n                \"session_id\": null,\n                \"start_date\": \"2024-10-30\",\n                \"end_date\": \"2025-11-08\",\n                \"expected_transaction_count\": 0,\n                \"successful_transaction_count\": 0,\n                \"failed_transaction_count\": 0,\n                \"subscription_id\": 1444\n            }\n        },\n        \"client_info\": {\n            \"name\": null,\n            \"id\": null,\n            \"bank_cbn_code\": null,\n            \"bank_name\": null,\n            \"console_url\": null,\n            \"js_background_image\": null,\n            \"css_url\": null,\n            \"logo_url\": null,\n            \"footer_text\": null,\n            \"show_options_icon\": false,\n            \"paginate\": false,\n            \"paginate_count\": 0,\n            \"options\": null,\n            \"merchant\": null,\n            \"colors\": null,\n            \"meta\": null\n        }\n    }\n}"
								},
								{
									"id": "16372966-9e9c-4002-8dde-6a508ccd8d67",
									"name": "Upgrade  Subscription [R]",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"subscription.upgrade\",\n    \"data\": {\n        \"customer_ref\": \"2347080507367\",\n        \"biller_code\": \"010\",\n        \"membership_plan\": \"Premium\",\n        \"membership_plan_amount\": \"300\",\n        \"membership_plan_frequency\": \"weekly\", //\"weekly|monthly|daily\",\n        \"account_number\": \"2212979372\",\n        \"bank_code\": \"057\",\n        \"current_subscription_id\": \"{{current_subscription_id}}\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Date",
											"value": "Wed, 20 Aug 2025 15:14:50 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "291"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"123-ooiL/43xj0lD/rqS1apdCcAgweI\""
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"Failed\",\n    \"message\": \"Cannot deactivate a subscription that is inactive.\",\n    \"data\": {\n        \"provider_response_code\": 400,\n        \"error\": {\n            \"code\": 400,\n            \"message\": \"Cannot deactivate a subscription that is inactive.\"\n        },\n        \"errors\": [\n            {\n                \"code\": 400,\n                \"message\": \"Cannot deactivate a subscription that is inactive.\"\n            }\n        ]\n    }\n}"
								}
							]
						},
						{
							"name": "Upgrade  Subscription [R] - No auth token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "409fd43d-662b-4788-a6f4-7e8eafcbf5eb",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Check that response status is returned\", function () {\r",
											"    pm.expect(jsonData.status).to.eql(\"Failed\");\r",
											"})\r",
											"\r",
											"pm.test(\"Check that response message is not empty\", function (){\r",
											"    pm.expect(jsonData.message).to.not.be.empty;\r",
											"})\r",
											"\r",
											"pm.test(\"Check that response data is not empty\", function () {\r",
											"    pm.expect(jsonData.data.error).to.be.an('object');\r",
											"    pm.expect(jsonData.data.error.code).to.exist.and.not.be.null;\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "7421da44-8e57-418c-a99c-02d1bbde6c53",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{Token}}",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"subscription.upgrade\",\n    \"data\": {\n        \"customer_ref\": \"2347080507367\",\n        \"biller_code\": \"010\",\n        \"membership_plan\": \"Premium\",\n        \"membership_plan_amount\": \"300\",\n        \"membership_plan_frequency\": \"weekly\", //\"weekly|monthly|daily\",\n        \"account_number\": \"2212979372\",\n        \"bank_code\": \"057\",\n        \"current_subscription_id\": \"{{current_subscription_id}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}",
								"description": "List of data to Cach offlne\n\n1. Accounts\n    \n    1. All accounts and their last balance\n        \n2. Loan Limits\n    \n3. Membership status\n    \n4. Onboard Approval Status"
							},
							"response": [
								{
									"id": "5b5a5c7e-de03-4384-ac7c-360683cb1001",
									"name": "Upgrade  Subscription",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"subscription.upgrade\",\n    \"data\": {\n        \"customer_ref\": \"1234567890\",\n        \"biller_code\": \"\",\n        \"membership_plan\": \"\",\n        \"membership_plan_amount\": \"\",\n        \"membership_plan_frequency\": \"\",\n        \"account_number\": \"\",\n        \"bank_code\": \"\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{url}}/subscription/upgrade"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [
										{
											"expires": "Invalid Date",
											"domain": "",
											"path": ""
										}
									],
									"responseTime": null,
									"body": "{\n    \"status\": \"Successful\",\n    \"message\": \"Transaction processed successfully\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"NIBSS\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"provider_auth_token\": \"2247916766;033\",\n            \"paymentoptions\": [],\n            \"transaction_final_amount\": 10000,\n            \"reference\": \"71443160051373\",\n            \"meta\": {\n                \"session_id\": null,\n                \"start_date\": \"2024-10-30\",\n                \"end_date\": \"2025-11-08\",\n                \"expected_transaction_count\": 0,\n                \"successful_transaction_count\": 0,\n                \"failed_transaction_count\": 0,\n                \"subscription_id\": 1444\n            }\n        },\n        \"client_info\": {\n            \"name\": null,\n            \"id\": null,\n            \"bank_cbn_code\": null,\n            \"bank_name\": null,\n            \"console_url\": null,\n            \"js_background_image\": null,\n            \"css_url\": null,\n            \"logo_url\": null,\n            \"footer_text\": null,\n            \"show_options_icon\": false,\n            \"paginate\": false,\n            \"paginate_count\": 0,\n            \"options\": null,\n            \"merchant\": null,\n            \"colors\": null,\n            \"meta\": null\n        }\n    }\n}"
								},
								{
									"id": "cd493c30-88a6-46ff-8dd7-1066e3c53606",
									"name": "Upgrade  Subscription [R]",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{Token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"subscription.upgrade\",\n    \"data\": {\n        \"customer_ref\": \"2347080507367\",\n        \"biller_code\": \"010\",\n        \"membership_plan\": \"Premium\",\n        \"membership_plan_amount\": \"300\",\n        \"membership_plan_frequency\": \"weekly\", //\"weekly|monthly|daily\",\n        \"account_number\": \"2212979372\",\n        \"bank_code\": \"057\",\n        \"current_subscription_id\": \"{{current_subscription_id}}\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Date",
											"value": "Wed, 20 Aug 2025 15:14:50 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "291"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"123-ooiL/43xj0lD/rqS1apdCcAgweI\""
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"Failed\",\n    \"message\": \"Cannot deactivate a subscription that is inactive.\",\n    \"data\": {\n        \"provider_response_code\": 400,\n        \"error\": {\n            \"code\": 400,\n            \"message\": \"Cannot deactivate a subscription that is inactive.\"\n        },\n        \"errors\": [\n            {\n                \"code\": 400,\n                \"message\": \"Cannot deactivate a subscription that is inactive.\"\n            }\n        ]\n    }\n}"
								}
							]
						}
					],
					"id": "d7b8fedc-796e-418f-ae53-a546735f7488"
				},
				{
					"name": "Manage Subscription",
					"item": [
						{
							"name": "Manage Subscription [R]",
							"id": "58d01d9e-b492-49dd-a003-df512c9e80ee",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{Token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"subscription.manage\",\n    \"data\": {\n        \"customer_ref\": \"2347080507367\",\n        \"biller_code\": \"biller\",\n        \"subscription_id\": \"{{current_subscrption_id}}\",\n        \"action\": \"pause\" // or resume\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}",
								"description": "List of data to Cach offlne\n\n1. Accounts\n    \n    1. All accounts and their last balance\n        \n2. Loan Limits\n    \n3. Membership status\n    \n4. Onboard Approval Status"
							},
							"response": [
								{
									"id": "51a53e94-a646-4cc7-ab5b-db4543a50a3a",
									"name": "Manage  Subscription",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"subscription.manage\",\n    \"data\": {\n        \"customer_ref\": \"1234567890\",\n        \"biller_code\": \"\",\n        \"subscription_id\": \"\",\n        \"action\": \"pause\" // or resume\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{url}}/subscription/pause"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [
										{
											"expires": "Invalid Date",
											"domain": "",
											"path": ""
										}
									],
									"responseTime": null,
									"body": "{\n    \"status\": \"Successful\",\n    \"message\": \"Transaction processed successfully\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"PayWithAccount\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"status\": \"paused\",\n            \"created_on\": \"2025-08-08 16:53:09\",\n            \"meta\": {\n                \"start_date\": \"2025-08-09\"\n            }\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Manage Subscription [R] - Inactive subscription",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a79be2fe-54dd-420d-b449-c1e60d36a036",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Check that response staus is correct\",function () {\r",
											"    pm.expect(jsonData.status).to.eql(\"Failed\");\r",
											"})\r",
											"\r",
											"\r",
											"pm.test(\"Check that response message is correct\", function () {\r",
											"    pm.expect(jsonData.message).to.eql(\"Transaction failed\");\r",
											"})\r",
											"\r",
											"pm.test(\"Check that provider response data is correct\", function () {\r",
											"    pm.expect(jsonData.data.errors).to.be.an(\"array\");\r",
											"    pm.expect(jsonData.data.error).to.be.an(\"object\");\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "54664fa9-eced-42c9-90e3-6608e7b3a486",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{Token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"subscription.manage\",\n    \"data\": {\n        \"customer_ref\": \"2347080507367\",\n        \"biller_code\": \"biller\",\n        \"subscription_id\": \"18984\",\n        \"action\": \"pause\" // or resume\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}",
								"description": "List of data to Cach offlne\n\n1. Accounts\n    \n    1. All accounts and their last balance\n        \n2. Loan Limits\n    \n3. Membership status\n    \n4. Onboard Approval Status"
							},
							"response": [
								{
									"id": "78f024e7-b148-4079-9c55-6200cb86100e",
									"name": "Manage  Subscription",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"subscription.manage\",\n    \"data\": {\n        \"customer_ref\": \"1234567890\",\n        \"biller_code\": \"\",\n        \"subscription_id\": \"\",\n        \"action\": \"pause\" // or resume\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{url}}/subscription/pause"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [
										{
											"expires": "Invalid Date",
											"domain": "",
											"path": ""
										}
									],
									"responseTime": null,
									"body": "{\n    \"status\": \"Successful\",\n    \"message\": \"Transaction processed successfully\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"PayWithAccount\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"status\": \"paused\",\n            \"created_on\": \"2025-08-08 16:53:09\",\n            \"meta\": {\n                \"start_date\": \"2025-08-09\"\n            }\n        }\n    }\n}"
								}
							]
						}
					],
					"id": "2cbd3ad2-3382-47f0-88ec-9b3fc678d9de"
				},
				{
					"name": "Cancel Subscription",
					"item": [
						{
							"name": "Cancel Subscription [R]",
							"id": "f813faa3-12af-4ea5-b89d-8673c9832bf6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{Token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"subscription.cancel\",\n    \"data\": {\n        \"customer_ref\": \"{{customer_ref}}\",\n        \"biller_code\": \"010\",\n        \"subscription_id\": \"18984\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}",
								"description": "List of data to Cach offlne\n\n1. Accounts\n    \n    1. All accounts and their last balance\n        \n2. Loan Limits\n    \n3. Membership status\n    \n4. Onboard Approval Status"
							},
							"response": [
								{
									"id": "572cc1dc-593e-4432-8448-adb368207654",
									"name": "Cancel Subscription",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"subscription.cancel\",\n    \"data\": {\n        \"customer_ref\": \"1234567890\",\n        \"biller_code\": \"\",\n        \"subscription_id\": \"\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{url}}/misc/cancel-sub"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [
										{
											"expires": "Invalid Date",
											"domain": "",
											"path": ""
										}
									],
									"responseTime": null,
									"body": "{\n    \"status\": \"Successful\",\n    \"message\": \"Transaction processed successfully\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"NIBSS\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {},\n        \"client_info\": null\n    }\n}"
								}
							]
						}
					],
					"id": "fa233998-d728-44de-b326-1237addbaef9"
				}
			],
			"id": "94cb064d-7e92-4c6a-bcc0-f5a7323656b8"
		},
		{
			"name": "Misc",
			"item": [
				{
					"name": "Get Utility",
					"item": [
						{
							"name": "Get Utility [R] - Success",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c3a60b2f-f1c7-4b0f-b808-45d826b993f2",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status in response returns correctly\", function (){\r",
											"    pm.expect(jsonData.status).to.eql(\"Successful\");\r",
											"});\r",
											"\r",
											"pm.test(\"Message in response is correct\", function () {\r",
											"    pm.expect(jsonData.message).to.eql(\"Utilities retrieved successfully\");\r",
											"});\r",
											"\r",
											"pm.test(\"Provider response data is correct\", function () {\r",
											"    pm.expect(jsonData.data.provider_response.reference).to.exist;\r",
											"    pm.expect(jsonData.data.provider_response.utilities).to.be.an(\"object\")\r",
											"})\r",
											"   "
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "c4d6cc07-df12-4980-8851-168516801bea",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{Token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"misc.get-utility\",\n    \"data\": {\n        \"customer_ref\": \"{{customer_ref}}\",\n        \"utilities\": \"get_tnc,get_privacy_policy,get_countries,get_splash_screens,get_membership_plans,get_banner_messages,get_faqs,get_quick_amounts\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}",
								"description": "List of data to Cach offlne\n\n1. Accounts\n    \n    1. All accounts and their last balance\n        \n2. Loan Limits\n    \n3. Membership status\n    \n4. Onboard Approval Status"
							},
							"response": [
								{
									"id": "af21c180-3b55-4812-8db3-1218e2ea0cd5",
									"name": "Get Utility",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"misc.get-utility\",\n    \"data\": {\n        \"customer_ref\": \"1234567890\",\n        \"utilities\": \"get_tnc,get_privacy_policy,get_countries,get_splash_screens,get_membership_plans,get_banner_messages,get_faqs,get_quick_amounts\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{url}}/misc/get-utility"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [
										{
											"expires": "Invalid Date",
											"domain": "",
											"path": ""
										}
									],
									"responseTime": null,
									"body": "{\n    \"status\": \"Successful\",\n    \"message\": \"Transaction processed successfully\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"Pay4Me\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"utilities\": {\n                \"tnc\": \"https://onepipe.io/start/terms/\",\n                \"privacy_policy\": \"https://onepipe.io/start/privacy/\",\n                \"banner_messages\": [\n                    {\n                        \"message\": \"Sample message\",\n                        \"duration_in_seconds\": 3,\n                        \"action\": null\n                    },\n                    {\n                        \"message\": \"Did you know?<br> <br />You have 7 qualifying transactions for which you can collect rewards. Up to <strong>₦1m</strong> available \",\n                        \"duration_in_seconds\": 5,\n                        \"action\": null\n                    },\n                    {\n                        \"message\": \"We are giving away up to ₦1m every week. To take your share, you only need to pay with your account [scan to pay button]\",\n                        \"duration_in_seconds\": 5,\n                        \"action\": {\n                            \"title\": \"Scan to Pay\",\n                            \"link\": \"SCAN_TO_PAY_FUNCTION\"\n                        }\n                    }\n                ],\n                \"countries\": [\n                    {\n                        \"flag\": \"https://flagcdn.com/ng.svg\",\n                        \"is_live\": true,\n                        \"currency\": \"Naira\",\n                        \"full_name\": \"Federal Republic of Nigeria\",\n                        \"short_name\": \"Nigeria\",\n                        \"calling_code\": \"+234\",\n                        \"alpha_2_code\": \"NG\",\n                        \"alpha_3_code\": \"NGR\",\n                        \"currency_code\": \"NGN\",\n                        \"currency_symbol\": \"₦\"\n                    },\n                    {\n                        \"flag\": \"https://flagcdn.com/us.svg\",\n                        \"is_live\": false,\n                        \"currency\": \"United States Dollar\",\n                        \"full_name\": \"United States of America\",\n                        \"short_name\": \"United States\",\n                        \"alpha_2_code\": \"US\",\n                        \"alpha_3_code\": \"USA\",\n                        \"calling_code\": \"+1\",\n                        \"currency_code\": \"USD\",\n                        \"currency_symbol\": \"$\"\n                    },\n                    {\n                        \"flag\": \"https://flagcdn.com/gb.svg\",\n                        \"is_live\": false,\n                        \"currency\": \"Pound Sterling\",\n                        \"full_name\": \"United Kingdom of Great Britain and Northern Ireland\",\n                        \"short_name\": \"United Kingdom\",\n                        \"alpha_2_code\": \"GB\",\n                        \"alpha_3_code\": \"GBR\",\n                        \"calling_code\": \"+44\",\n                        \"currency_code\": \"GBP\",\n                        \"currency_symbol\": \"£\"\n                    },\n                    {\n                        \"flag\": \"https://flagcdn.com/ke.svg\",\n                        \"is_live\": false,\n                        \"currency\": \"Kenyan Shilling\",\n                        \"full_name\": \"Republic of Kenya\",\n                        \"short_name\": \"Kenya\",\n                        \"alpha_2_code\": \"KE\",\n                        \"alpha_3_code\": \"KEN\",\n                        \"calling_code\": \"+254\",\n                        \"currency_code\": \"KES\",\n                        \"currency_symbol\": \"KSh\"\n                    }\n                ],\n                \"splash_screens\": [\n                    {\n                        \"image\": \"https://cdn.onepipe.io/images/pwt-instore/signup.jpg\",\n                        \"title\": \"Card-free, Stress-free\",\n                        \"description\": \"All features available through your PaywithAccounts Benefits account.\",\n                        \"primary_button\": {\n                            \"link\": \"\",\n                            \"text\": \"Create Account\"\n                        },\n                        \"secondary_button\": {\n                            \"link\": \"\",\n                            \"text\": \"Login\"\n                        }\n                    },\n                    {\n                        \"image\": \"https://cdn.onepipe.io/images/pwt-instore/pay-smarter.jpg\",\n                        \"title\": \"Pay Smarter\",\n                        \"description\": \"Scan to pay instantly from your account\",\n                        \"primary_button\": {\n                            \"link\": \"\",\n                            \"text\": \"Create Account\"\n                        },\n                        \"secondary_button\": {\n                            \"link\": \"\",\n                            \"text\": \"Login\"\n                        }\n                    },\n                    {\n                        \"image\": \"https://cdn.onepipe.io/images/pwt-instore/smart-credit.jpg\",\n                        \"title\": \"Smart credit\",\n                        \"description\": \"Instant credit, right when you need it\",\n                        \"primary_button\": {\n                            \"link\": \"\",\n                            \"text\": \"Create Account\"\n                        },\n                        \"secondary_button\": {\n                            \"link\": \"\",\n                            \"text\": \"Login\"\n                        }\n                    }\n                ],\n                \"membership_plans\": {\n                    \"plans\": [\n                        {\n                            \"name\": \"Standard\",\n                            \"color\": \"#032647\",\n                            \"amount\": \"0\",\n                            \"duration\": \"weekly\",\n                            \"features\": [\n                                \"Scan to pay easily\",\n                                \"<strong>Win cash with every transaction</strong>\",\n                                \"<strong>Collect payments easily. Fast alerts!</strong>\",\n                                \"Schedule your expenses\",\n                                \"Add your employees & staff\"\n                            ]\n                        },\n                        {\n                            \"name\": \"Premium\",\n                            \"color\": \"#DCA850\",\n                            \"amount\": \"N500\",\n                            \"duration\": \"weekly\",\n                            \"features\": [\n                                \"Everything in Standard plan\",\n                                \"Membership of Growtrade Cooperative\",\n                                \"<strong>Instant N5k PAY4ME allocation</strong>\",\n                                \"Grow up to N100k PAY4ME\",\n                                \"<strong>Win up to N1m with every transaction</strong>\"\n                            ]\n                        }\n                    ],\n                    \"videos\": [\n                        {\n                            \"link\": \"https://www.youtube.com/watch?v=9avExVcS19U\",\n                            \"title\": \"Understanding the plans\"\n                        }\n                    ]\n                },\n                \"faqs\": [\n                    {\n                        \"question\": \"What is the Paywithaccount App?\",\n                        \"answer\": \"The Paywithaccount  App is a mobile-first solution that allows individuals and merchants to send, receive, and manage payments directly from their bank accounts. It supports features like Pay4Me credit, QR code payments, rewards, and account management, all accessible from a single, intuitive dashboard.\"\n                    },\n                    {\n                        \"question\": \"How do I sign up for the Paywithaccount app?\",\n                        \"answer\": \"Signing up for the Paywithaccount app is simple.<br /><br /><ol><li>Open the Paywithaccount mobile app.</li><li>Select Country \\\"Nigeria\\\" (currently the only supported country).</li><li>Enter Your Details: Provide your phone number or account number.</li><li>Choose a Plan by selecting your desired plan.</li><li>Enter and validate your Identification Number.</li><li>Accept Terms & Conditions</li></ol>\"\n                    },\n                    {\n                        \"question\": \"Can I use Paywithaccount if I am not in Nigeria?\",\n                        \"answer\": \"Currently, Paywithaccount is only available in Nigeria. Other countries will display a 'coming soon' message upon selection.\"\n                    },\n                    {\n                        \"question\": \"What if my phone number is not associated with any account when I try to log in?\",\n                        \"answer\": \"If your phone number is not found in our records, the app will redirect you to the registration flow to complete the onboarding process.\"\n                    },\n                    {\n                        \"question\": \"How do I log in to Paywithaccount as an existing user?\",\n                        \"answer\": \"After launching the app and selecting your country (Nigeria), click on \\\"Login\\\" and enter your phone number. The system will check if you have biometric login enabled. If so, you can log in with biometrics. Otherwise, an OTP will be sent to your phone number via WhatsApp for verification. Once verified, you will be redirected to your personalised dashboard.\"\n                    },\n                    {\n                        \"question\": \"What if I am already logged in on another device?\",\n                        \"answer\": \"If you attempt to log in on a second device while already logged in on another, the system will reject the new login attempt and display an error message: \\\"You are already logged in on another device. Please log out first to continue.\\\"\"\n                    },\n                    {\n                        \"question\": \"How do I delete my profile?\",\n                        \"answer\": \"Send us an email at privacy@onepipe.io, requesting a deletion.\"\n                    },\n                    {\n                        \"question\": \"How do I raise a dispute on a transaction?\",\n                        \"answer\": \"Click Dispute on the specific transaction.<ul><li>Provide a reason for the dispute</li><li>Only successful transactions can be disputed.</li></ul>\"\n                    },\n                    {\n                        \"question\": \"How can I track my transactions?\",\n                        \"answer\": \"You can track all your transactions by visiting the Paywithaccount app. You will need to provide your phone number and verify ownership by entering an OTP sent to your number. Once logged in, you will see a list of all your transactions with options to view details and status. \"\n                    },\n                    {\n                        \"question\": \"Can I use the app to make payments?\",\n                        \"answer\": \"<strong>Yes!</strong><ul><li>Scan a merchant's QR code</li><li>Pay directly from your linked bank account.</li><li>Use your Pay4Me credit line.</li></ul><br /><br />To make a payment:<br /><br /><ul><li>Scan a merchant's QR code</li><li>Tap <strong>\\\"Pay\\\"<strong> on your dashboard.</li><li>Choose your preferred payment method.</li><li>Follow the on-screen prompts to complete the transaction.</li></ul>\"\n                    },\n                    {\n                        \"question\": \"What is Pay4Me, and how does it work?\",\n                        \"answer\": \"<strong>Pay4Me</strong> is a Buy Now, Pay Later (BNPL) feature that lets you make instant in-store payments using credit, without requiring a POS terminal or physical card.<br /><br />Here's how to use it:<br /><br /><ul><li>Tap <strong>\\\"Pay\\\"<strong> and scan the merchant's QR code.</li><li>Enter the payment amount.</li><li>Select <strong>\\\"Pay4Me\\\"</strong> as your payment method</li><li>Accept the terms and confirm the transaction.</li></ul>\"\n                    },\n                    {\n                        \"question\": \"How can merchants receive payments using the Paywithaccount  App?\",\n                        \"answer\": \"Merchants can accept payments in two simple ways:<br /><br /><ul><li><strong>QR Code:</strong> Display a static or dynamic QR code for customers to scan.</li><li><strong>Virtual Account:</strong> Share your unique virtual account number to receive direct transfers.</li></ul><br /> Both options are accessible from the <strong>\\\"Collect\\\"</strong> button on your dashboard.\"\n                    },\n                    {\n                        \"question\": \"Can I receive payments as a merchant?\",\n                        \"answer\": \"<strong>Yes.</strong> Once you're set up as a merchant, you can:<br /><br /><ul><li>Display your QR code for scanning.</li><li>Share your virtual account number to receive transfers.</li></ul>\"\n                    },\n                    {\n                        \"question\": \"What if my phone number is not associated with any account when I try to log in?\",\n                        \"answer\": \"If your phone number is not found in our records, the app will redirect you to the registration flow to complete the onboarding process.\"\n                    },\n                    {\n                        \"question\": \"Can I manage my membership or subscription settings through the app?\",\n                        \"answer\": \"Absolutely. Go to <strong>Settings > Membership</strong> to:<br /><br /><ul><li>View your current membership plan.</li><li>Upgrade or change your subscription.</li><li>Pause or cancel your plan</li></ul>\"\n                    },\n                    {\n                        \"question\": \"How do I get help or support?\",\n                        \"answer\": \"We're here to help! You can chat with us from the app's settings to start a live support chat, or email the support team at <a href='mailto:paywithaccount@onepipe.io.'>paywithaccount@onepipe.io.</a>\"\n                    }\n                ],\n                \"quick_amounts\": [\n                    \"2,000\",\n                    \"5,000\",\n                    \"7,000\",\n                    \"10,000\",\n                    \"15,000\",\n                    \"20,000\"\n                ]\n            }\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get Utility [R] - Empty Customer Reference",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c3a60b2f-f1c7-4b0f-b808-45d826b993f2",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status in response returns correctly\", function (){\r",
											"    pm.expect(jsonData.status).to.eql(\"Failed\");\r",
											"});\r",
											"\r",
											"pm.test(\"Error message in response is correct\", function () {\r",
											"    pm.expect(jsonData.message).to.exist.and.not.be.empty;\r",
											"});\r",
											"\r",
											"pm.test(\"Provider response error code is correct\", function () {\r",
											"    pm.expect(jsonData.data.error.code).to.exist;\r",
											"})\r",
											"   "
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "273850b4-0081-4a0f-bc8d-f1b566432f67",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{Token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"misc.get-utility\",\n    \"data\": {\n        \"customer_ref\": \"\",\n        \"utilities\": \"get_tnc,get_privacy_policy,get_countries,get_splash_screens,get_membership_plans,get_banner_messages,get_faqs,get_quick_amounts\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}",
								"description": "List of data to Cach offlne\n\n1. Accounts\n    \n    1. All accounts and their last balance\n        \n2. Loan Limits\n    \n3. Membership status\n    \n4. Onboard Approval Status"
							},
							"response": [
								{
									"id": "185f959a-7f46-4386-a120-c3df707ca786",
									"name": "Get Utility",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"misc.get-utility\",\n    \"data\": {\n        \"customer_ref\": \"1234567890\",\n        \"utilities\": \"get_tnc,get_privacy_policy,get_countries,get_splash_screens,get_membership_plans,get_banner_messages,get_faqs,get_quick_amounts\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{url}}/misc/get-utility"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [
										{
											"expires": "Invalid Date",
											"domain": "",
											"path": ""
										}
									],
									"responseTime": null,
									"body": "{\n    \"status\": \"Successful\",\n    \"message\": \"Transaction processed successfully\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"Pay4Me\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"utilities\": {\n                \"tnc\": \"https://onepipe.io/start/terms/\",\n                \"privacy_policy\": \"https://onepipe.io/start/privacy/\",\n                \"banner_messages\": [\n                    {\n                        \"message\": \"Sample message\",\n                        \"duration_in_seconds\": 3,\n                        \"action\": null\n                    },\n                    {\n                        \"message\": \"Did you know?<br> <br />You have 7 qualifying transactions for which you can collect rewards. Up to <strong>₦1m</strong> available \",\n                        \"duration_in_seconds\": 5,\n                        \"action\": null\n                    },\n                    {\n                        \"message\": \"We are giving away up to ₦1m every week. To take your share, you only need to pay with your account [scan to pay button]\",\n                        \"duration_in_seconds\": 5,\n                        \"action\": {\n                            \"title\": \"Scan to Pay\",\n                            \"link\": \"SCAN_TO_PAY_FUNCTION\"\n                        }\n                    }\n                ],\n                \"countries\": [\n                    {\n                        \"flag\": \"https://flagcdn.com/ng.svg\",\n                        \"is_live\": true,\n                        \"currency\": \"Naira\",\n                        \"full_name\": \"Federal Republic of Nigeria\",\n                        \"short_name\": \"Nigeria\",\n                        \"calling_code\": \"+234\",\n                        \"alpha_2_code\": \"NG\",\n                        \"alpha_3_code\": \"NGR\",\n                        \"currency_code\": \"NGN\",\n                        \"currency_symbol\": \"₦\"\n                    },\n                    {\n                        \"flag\": \"https://flagcdn.com/us.svg\",\n                        \"is_live\": false,\n                        \"currency\": \"United States Dollar\",\n                        \"full_name\": \"United States of America\",\n                        \"short_name\": \"United States\",\n                        \"alpha_2_code\": \"US\",\n                        \"alpha_3_code\": \"USA\",\n                        \"calling_code\": \"+1\",\n                        \"currency_code\": \"USD\",\n                        \"currency_symbol\": \"$\"\n                    },\n                    {\n                        \"flag\": \"https://flagcdn.com/gb.svg\",\n                        \"is_live\": false,\n                        \"currency\": \"Pound Sterling\",\n                        \"full_name\": \"United Kingdom of Great Britain and Northern Ireland\",\n                        \"short_name\": \"United Kingdom\",\n                        \"alpha_2_code\": \"GB\",\n                        \"alpha_3_code\": \"GBR\",\n                        \"calling_code\": \"+44\",\n                        \"currency_code\": \"GBP\",\n                        \"currency_symbol\": \"£\"\n                    },\n                    {\n                        \"flag\": \"https://flagcdn.com/ke.svg\",\n                        \"is_live\": false,\n                        \"currency\": \"Kenyan Shilling\",\n                        \"full_name\": \"Republic of Kenya\",\n                        \"short_name\": \"Kenya\",\n                        \"alpha_2_code\": \"KE\",\n                        \"alpha_3_code\": \"KEN\",\n                        \"calling_code\": \"+254\",\n                        \"currency_code\": \"KES\",\n                        \"currency_symbol\": \"KSh\"\n                    }\n                ],\n                \"splash_screens\": [\n                    {\n                        \"image\": \"https://cdn.onepipe.io/images/pwt-instore/signup.jpg\",\n                        \"title\": \"Card-free, Stress-free\",\n                        \"description\": \"All features available through your PaywithAccounts Benefits account.\",\n                        \"primary_button\": {\n                            \"link\": \"\",\n                            \"text\": \"Create Account\"\n                        },\n                        \"secondary_button\": {\n                            \"link\": \"\",\n                            \"text\": \"Login\"\n                        }\n                    },\n                    {\n                        \"image\": \"https://cdn.onepipe.io/images/pwt-instore/pay-smarter.jpg\",\n                        \"title\": \"Pay Smarter\",\n                        \"description\": \"Scan to pay instantly from your account\",\n                        \"primary_button\": {\n                            \"link\": \"\",\n                            \"text\": \"Create Account\"\n                        },\n                        \"secondary_button\": {\n                            \"link\": \"\",\n                            \"text\": \"Login\"\n                        }\n                    },\n                    {\n                        \"image\": \"https://cdn.onepipe.io/images/pwt-instore/smart-credit.jpg\",\n                        \"title\": \"Smart credit\",\n                        \"description\": \"Instant credit, right when you need it\",\n                        \"primary_button\": {\n                            \"link\": \"\",\n                            \"text\": \"Create Account\"\n                        },\n                        \"secondary_button\": {\n                            \"link\": \"\",\n                            \"text\": \"Login\"\n                        }\n                    }\n                ],\n                \"membership_plans\": {\n                    \"plans\": [\n                        {\n                            \"name\": \"Standard\",\n                            \"color\": \"#032647\",\n                            \"amount\": \"0\",\n                            \"duration\": \"weekly\",\n                            \"features\": [\n                                \"Scan to pay easily\",\n                                \"<strong>Win cash with every transaction</strong>\",\n                                \"<strong>Collect payments easily. Fast alerts!</strong>\",\n                                \"Schedule your expenses\",\n                                \"Add your employees & staff\"\n                            ]\n                        },\n                        {\n                            \"name\": \"Premium\",\n                            \"color\": \"#DCA850\",\n                            \"amount\": \"N500\",\n                            \"duration\": \"weekly\",\n                            \"features\": [\n                                \"Everything in Standard plan\",\n                                \"Membership of Growtrade Cooperative\",\n                                \"<strong>Instant N5k PAY4ME allocation</strong>\",\n                                \"Grow up to N100k PAY4ME\",\n                                \"<strong>Win up to N1m with every transaction</strong>\"\n                            ]\n                        }\n                    ],\n                    \"videos\": [\n                        {\n                            \"link\": \"https://www.youtube.com/watch?v=9avExVcS19U\",\n                            \"title\": \"Understanding the plans\"\n                        }\n                    ]\n                },\n                \"faqs\": [\n                    {\n                        \"question\": \"What is the Paywithaccount App?\",\n                        \"answer\": \"The Paywithaccount  App is a mobile-first solution that allows individuals and merchants to send, receive, and manage payments directly from their bank accounts. It supports features like Pay4Me credit, QR code payments, rewards, and account management, all accessible from a single, intuitive dashboard.\"\n                    },\n                    {\n                        \"question\": \"How do I sign up for the Paywithaccount app?\",\n                        \"answer\": \"Signing up for the Paywithaccount app is simple.<br /><br /><ol><li>Open the Paywithaccount mobile app.</li><li>Select Country \\\"Nigeria\\\" (currently the only supported country).</li><li>Enter Your Details: Provide your phone number or account number.</li><li>Choose a Plan by selecting your desired plan.</li><li>Enter and validate your Identification Number.</li><li>Accept Terms & Conditions</li></ol>\"\n                    },\n                    {\n                        \"question\": \"Can I use Paywithaccount if I am not in Nigeria?\",\n                        \"answer\": \"Currently, Paywithaccount is only available in Nigeria. Other countries will display a 'coming soon' message upon selection.\"\n                    },\n                    {\n                        \"question\": \"What if my phone number is not associated with any account when I try to log in?\",\n                        \"answer\": \"If your phone number is not found in our records, the app will redirect you to the registration flow to complete the onboarding process.\"\n                    },\n                    {\n                        \"question\": \"How do I log in to Paywithaccount as an existing user?\",\n                        \"answer\": \"After launching the app and selecting your country (Nigeria), click on \\\"Login\\\" and enter your phone number. The system will check if you have biometric login enabled. If so, you can log in with biometrics. Otherwise, an OTP will be sent to your phone number via WhatsApp for verification. Once verified, you will be redirected to your personalised dashboard.\"\n                    },\n                    {\n                        \"question\": \"What if I am already logged in on another device?\",\n                        \"answer\": \"If you attempt to log in on a second device while already logged in on another, the system will reject the new login attempt and display an error message: \\\"You are already logged in on another device. Please log out first to continue.\\\"\"\n                    },\n                    {\n                        \"question\": \"How do I delete my profile?\",\n                        \"answer\": \"Send us an email at privacy@onepipe.io, requesting a deletion.\"\n                    },\n                    {\n                        \"question\": \"How do I raise a dispute on a transaction?\",\n                        \"answer\": \"Click Dispute on the specific transaction.<ul><li>Provide a reason for the dispute</li><li>Only successful transactions can be disputed.</li></ul>\"\n                    },\n                    {\n                        \"question\": \"How can I track my transactions?\",\n                        \"answer\": \"You can track all your transactions by visiting the Paywithaccount app. You will need to provide your phone number and verify ownership by entering an OTP sent to your number. Once logged in, you will see a list of all your transactions with options to view details and status. \"\n                    },\n                    {\n                        \"question\": \"Can I use the app to make payments?\",\n                        \"answer\": \"<strong>Yes!</strong><ul><li>Scan a merchant's QR code</li><li>Pay directly from your linked bank account.</li><li>Use your Pay4Me credit line.</li></ul><br /><br />To make a payment:<br /><br /><ul><li>Scan a merchant's QR code</li><li>Tap <strong>\\\"Pay\\\"<strong> on your dashboard.</li><li>Choose your preferred payment method.</li><li>Follow the on-screen prompts to complete the transaction.</li></ul>\"\n                    },\n                    {\n                        \"question\": \"What is Pay4Me, and how does it work?\",\n                        \"answer\": \"<strong>Pay4Me</strong> is a Buy Now, Pay Later (BNPL) feature that lets you make instant in-store payments using credit, without requiring a POS terminal or physical card.<br /><br />Here's how to use it:<br /><br /><ul><li>Tap <strong>\\\"Pay\\\"<strong> and scan the merchant's QR code.</li><li>Enter the payment amount.</li><li>Select <strong>\\\"Pay4Me\\\"</strong> as your payment method</li><li>Accept the terms and confirm the transaction.</li></ul>\"\n                    },\n                    {\n                        \"question\": \"How can merchants receive payments using the Paywithaccount  App?\",\n                        \"answer\": \"Merchants can accept payments in two simple ways:<br /><br /><ul><li><strong>QR Code:</strong> Display a static or dynamic QR code for customers to scan.</li><li><strong>Virtual Account:</strong> Share your unique virtual account number to receive direct transfers.</li></ul><br /> Both options are accessible from the <strong>\\\"Collect\\\"</strong> button on your dashboard.\"\n                    },\n                    {\n                        \"question\": \"Can I receive payments as a merchant?\",\n                        \"answer\": \"<strong>Yes.</strong> Once you're set up as a merchant, you can:<br /><br /><ul><li>Display your QR code for scanning.</li><li>Share your virtual account number to receive transfers.</li></ul>\"\n                    },\n                    {\n                        \"question\": \"What if my phone number is not associated with any account when I try to log in?\",\n                        \"answer\": \"If your phone number is not found in our records, the app will redirect you to the registration flow to complete the onboarding process.\"\n                    },\n                    {\n                        \"question\": \"Can I manage my membership or subscription settings through the app?\",\n                        \"answer\": \"Absolutely. Go to <strong>Settings > Membership</strong> to:<br /><br /><ul><li>View your current membership plan.</li><li>Upgrade or change your subscription.</li><li>Pause or cancel your plan</li></ul>\"\n                    },\n                    {\n                        \"question\": \"How do I get help or support?\",\n                        \"answer\": \"We're here to help! You can chat with us from the app's settings to start a live support chat, or email the support team at <a href='mailto:paywithaccount@onepipe.io.'>paywithaccount@onepipe.io.</a>\"\n                    }\n                ],\n                \"quick_amounts\": [\n                    \"2,000\",\n                    \"5,000\",\n                    \"7,000\",\n                    \"10,000\",\n                    \"15,000\",\n                    \"20,000\"\n                ]\n            }\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get Utility [R] - Empty Utility Field",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c3a60b2f-f1c7-4b0f-b808-45d826b993f2",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status in response returns correctly\", function (){\r",
											"    pm.expect(jsonData.status).to.eql(\"Failed\");\r",
											"});\r",
											"\r",
											"pm.test(\"Error message in response is correct\", function () {\r",
											"    pm.expect(jsonData.message).to.exist.and.not.be.empty;\r",
											"});\r",
											"\r",
											"pm.test(\"Provider response error code is correct\", function () {\r",
											"    pm.expect(jsonData.data.error.code).to.exist;\r",
											"})\r",
											"   "
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "72843e52-414d-438b-a8b2-12ab99ff1d90",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{Token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"misc.get-utility\",\n    \"data\": {\n        \"customer_ref\": \"{{customer_ref}}\",\n        \"utilities\": \"\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}",
								"description": "List of data to Cach offlne\n\n1. Accounts\n    \n    1. All accounts and their last balance\n        \n2. Loan Limits\n    \n3. Membership status\n    \n4. Onboard Approval Status"
							},
							"response": [
								{
									"id": "32e39fd1-b0ee-493d-8082-fd82c59b99c8",
									"name": "Get Utility",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"misc.get-utility\",\n    \"data\": {\n        \"customer_ref\": \"1234567890\",\n        \"utilities\": \"get_tnc,get_privacy_policy,get_countries,get_splash_screens,get_membership_plans,get_banner_messages,get_faqs,get_quick_amounts\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{url}}/misc/get-utility"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [
										{
											"expires": "Invalid Date",
											"domain": "",
											"path": ""
										}
									],
									"responseTime": null,
									"body": "{\n    \"status\": \"Successful\",\n    \"message\": \"Transaction processed successfully\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"Pay4Me\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"utilities\": {\n                \"tnc\": \"https://onepipe.io/start/terms/\",\n                \"privacy_policy\": \"https://onepipe.io/start/privacy/\",\n                \"banner_messages\": [\n                    {\n                        \"message\": \"Sample message\",\n                        \"duration_in_seconds\": 3,\n                        \"action\": null\n                    },\n                    {\n                        \"message\": \"Did you know?<br> <br />You have 7 qualifying transactions for which you can collect rewards. Up to <strong>₦1m</strong> available \",\n                        \"duration_in_seconds\": 5,\n                        \"action\": null\n                    },\n                    {\n                        \"message\": \"We are giving away up to ₦1m every week. To take your share, you only need to pay with your account [scan to pay button]\",\n                        \"duration_in_seconds\": 5,\n                        \"action\": {\n                            \"title\": \"Scan to Pay\",\n                            \"link\": \"SCAN_TO_PAY_FUNCTION\"\n                        }\n                    }\n                ],\n                \"countries\": [\n                    {\n                        \"flag\": \"https://flagcdn.com/ng.svg\",\n                        \"is_live\": true,\n                        \"currency\": \"Naira\",\n                        \"full_name\": \"Federal Republic of Nigeria\",\n                        \"short_name\": \"Nigeria\",\n                        \"calling_code\": \"+234\",\n                        \"alpha_2_code\": \"NG\",\n                        \"alpha_3_code\": \"NGR\",\n                        \"currency_code\": \"NGN\",\n                        \"currency_symbol\": \"₦\"\n                    },\n                    {\n                        \"flag\": \"https://flagcdn.com/us.svg\",\n                        \"is_live\": false,\n                        \"currency\": \"United States Dollar\",\n                        \"full_name\": \"United States of America\",\n                        \"short_name\": \"United States\",\n                        \"alpha_2_code\": \"US\",\n                        \"alpha_3_code\": \"USA\",\n                        \"calling_code\": \"+1\",\n                        \"currency_code\": \"USD\",\n                        \"currency_symbol\": \"$\"\n                    },\n                    {\n                        \"flag\": \"https://flagcdn.com/gb.svg\",\n                        \"is_live\": false,\n                        \"currency\": \"Pound Sterling\",\n                        \"full_name\": \"United Kingdom of Great Britain and Northern Ireland\",\n                        \"short_name\": \"United Kingdom\",\n                        \"alpha_2_code\": \"GB\",\n                        \"alpha_3_code\": \"GBR\",\n                        \"calling_code\": \"+44\",\n                        \"currency_code\": \"GBP\",\n                        \"currency_symbol\": \"£\"\n                    },\n                    {\n                        \"flag\": \"https://flagcdn.com/ke.svg\",\n                        \"is_live\": false,\n                        \"currency\": \"Kenyan Shilling\",\n                        \"full_name\": \"Republic of Kenya\",\n                        \"short_name\": \"Kenya\",\n                        \"alpha_2_code\": \"KE\",\n                        \"alpha_3_code\": \"KEN\",\n                        \"calling_code\": \"+254\",\n                        \"currency_code\": \"KES\",\n                        \"currency_symbol\": \"KSh\"\n                    }\n                ],\n                \"splash_screens\": [\n                    {\n                        \"image\": \"https://cdn.onepipe.io/images/pwt-instore/signup.jpg\",\n                        \"title\": \"Card-free, Stress-free\",\n                        \"description\": \"All features available through your PaywithAccounts Benefits account.\",\n                        \"primary_button\": {\n                            \"link\": \"\",\n                            \"text\": \"Create Account\"\n                        },\n                        \"secondary_button\": {\n                            \"link\": \"\",\n                            \"text\": \"Login\"\n                        }\n                    },\n                    {\n                        \"image\": \"https://cdn.onepipe.io/images/pwt-instore/pay-smarter.jpg\",\n                        \"title\": \"Pay Smarter\",\n                        \"description\": \"Scan to pay instantly from your account\",\n                        \"primary_button\": {\n                            \"link\": \"\",\n                            \"text\": \"Create Account\"\n                        },\n                        \"secondary_button\": {\n                            \"link\": \"\",\n                            \"text\": \"Login\"\n                        }\n                    },\n                    {\n                        \"image\": \"https://cdn.onepipe.io/images/pwt-instore/smart-credit.jpg\",\n                        \"title\": \"Smart credit\",\n                        \"description\": \"Instant credit, right when you need it\",\n                        \"primary_button\": {\n                            \"link\": \"\",\n                            \"text\": \"Create Account\"\n                        },\n                        \"secondary_button\": {\n                            \"link\": \"\",\n                            \"text\": \"Login\"\n                        }\n                    }\n                ],\n                \"membership_plans\": {\n                    \"plans\": [\n                        {\n                            \"name\": \"Standard\",\n                            \"color\": \"#032647\",\n                            \"amount\": \"0\",\n                            \"duration\": \"weekly\",\n                            \"features\": [\n                                \"Scan to pay easily\",\n                                \"<strong>Win cash with every transaction</strong>\",\n                                \"<strong>Collect payments easily. Fast alerts!</strong>\",\n                                \"Schedule your expenses\",\n                                \"Add your employees & staff\"\n                            ]\n                        },\n                        {\n                            \"name\": \"Premium\",\n                            \"color\": \"#DCA850\",\n                            \"amount\": \"N500\",\n                            \"duration\": \"weekly\",\n                            \"features\": [\n                                \"Everything in Standard plan\",\n                                \"Membership of Growtrade Cooperative\",\n                                \"<strong>Instant N5k PAY4ME allocation</strong>\",\n                                \"Grow up to N100k PAY4ME\",\n                                \"<strong>Win up to N1m with every transaction</strong>\"\n                            ]\n                        }\n                    ],\n                    \"videos\": [\n                        {\n                            \"link\": \"https://www.youtube.com/watch?v=9avExVcS19U\",\n                            \"title\": \"Understanding the plans\"\n                        }\n                    ]\n                },\n                \"faqs\": [\n                    {\n                        \"question\": \"What is the Paywithaccount App?\",\n                        \"answer\": \"The Paywithaccount  App is a mobile-first solution that allows individuals and merchants to send, receive, and manage payments directly from their bank accounts. It supports features like Pay4Me credit, QR code payments, rewards, and account management, all accessible from a single, intuitive dashboard.\"\n                    },\n                    {\n                        \"question\": \"How do I sign up for the Paywithaccount app?\",\n                        \"answer\": \"Signing up for the Paywithaccount app is simple.<br /><br /><ol><li>Open the Paywithaccount mobile app.</li><li>Select Country \\\"Nigeria\\\" (currently the only supported country).</li><li>Enter Your Details: Provide your phone number or account number.</li><li>Choose a Plan by selecting your desired plan.</li><li>Enter and validate your Identification Number.</li><li>Accept Terms & Conditions</li></ol>\"\n                    },\n                    {\n                        \"question\": \"Can I use Paywithaccount if I am not in Nigeria?\",\n                        \"answer\": \"Currently, Paywithaccount is only available in Nigeria. Other countries will display a 'coming soon' message upon selection.\"\n                    },\n                    {\n                        \"question\": \"What if my phone number is not associated with any account when I try to log in?\",\n                        \"answer\": \"If your phone number is not found in our records, the app will redirect you to the registration flow to complete the onboarding process.\"\n                    },\n                    {\n                        \"question\": \"How do I log in to Paywithaccount as an existing user?\",\n                        \"answer\": \"After launching the app and selecting your country (Nigeria), click on \\\"Login\\\" and enter your phone number. The system will check if you have biometric login enabled. If so, you can log in with biometrics. Otherwise, an OTP will be sent to your phone number via WhatsApp for verification. Once verified, you will be redirected to your personalised dashboard.\"\n                    },\n                    {\n                        \"question\": \"What if I am already logged in on another device?\",\n                        \"answer\": \"If you attempt to log in on a second device while already logged in on another, the system will reject the new login attempt and display an error message: \\\"You are already logged in on another device. Please log out first to continue.\\\"\"\n                    },\n                    {\n                        \"question\": \"How do I delete my profile?\",\n                        \"answer\": \"Send us an email at privacy@onepipe.io, requesting a deletion.\"\n                    },\n                    {\n                        \"question\": \"How do I raise a dispute on a transaction?\",\n                        \"answer\": \"Click Dispute on the specific transaction.<ul><li>Provide a reason for the dispute</li><li>Only successful transactions can be disputed.</li></ul>\"\n                    },\n                    {\n                        \"question\": \"How can I track my transactions?\",\n                        \"answer\": \"You can track all your transactions by visiting the Paywithaccount app. You will need to provide your phone number and verify ownership by entering an OTP sent to your number. Once logged in, you will see a list of all your transactions with options to view details and status. \"\n                    },\n                    {\n                        \"question\": \"Can I use the app to make payments?\",\n                        \"answer\": \"<strong>Yes!</strong><ul><li>Scan a merchant's QR code</li><li>Pay directly from your linked bank account.</li><li>Use your Pay4Me credit line.</li></ul><br /><br />To make a payment:<br /><br /><ul><li>Scan a merchant's QR code</li><li>Tap <strong>\\\"Pay\\\"<strong> on your dashboard.</li><li>Choose your preferred payment method.</li><li>Follow the on-screen prompts to complete the transaction.</li></ul>\"\n                    },\n                    {\n                        \"question\": \"What is Pay4Me, and how does it work?\",\n                        \"answer\": \"<strong>Pay4Me</strong> is a Buy Now, Pay Later (BNPL) feature that lets you make instant in-store payments using credit, without requiring a POS terminal or physical card.<br /><br />Here's how to use it:<br /><br /><ul><li>Tap <strong>\\\"Pay\\\"<strong> and scan the merchant's QR code.</li><li>Enter the payment amount.</li><li>Select <strong>\\\"Pay4Me\\\"</strong> as your payment method</li><li>Accept the terms and confirm the transaction.</li></ul>\"\n                    },\n                    {\n                        \"question\": \"How can merchants receive payments using the Paywithaccount  App?\",\n                        \"answer\": \"Merchants can accept payments in two simple ways:<br /><br /><ul><li><strong>QR Code:</strong> Display a static or dynamic QR code for customers to scan.</li><li><strong>Virtual Account:</strong> Share your unique virtual account number to receive direct transfers.</li></ul><br /> Both options are accessible from the <strong>\\\"Collect\\\"</strong> button on your dashboard.\"\n                    },\n                    {\n                        \"question\": \"Can I receive payments as a merchant?\",\n                        \"answer\": \"<strong>Yes.</strong> Once you're set up as a merchant, you can:<br /><br /><ul><li>Display your QR code for scanning.</li><li>Share your virtual account number to receive transfers.</li></ul>\"\n                    },\n                    {\n                        \"question\": \"What if my phone number is not associated with any account when I try to log in?\",\n                        \"answer\": \"If your phone number is not found in our records, the app will redirect you to the registration flow to complete the onboarding process.\"\n                    },\n                    {\n                        \"question\": \"Can I manage my membership or subscription settings through the app?\",\n                        \"answer\": \"Absolutely. Go to <strong>Settings > Membership</strong> to:<br /><br /><ul><li>View your current membership plan.</li><li>Upgrade or change your subscription.</li><li>Pause or cancel your plan</li></ul>\"\n                    },\n                    {\n                        \"question\": \"How do I get help or support?\",\n                        \"answer\": \"We're here to help! You can chat with us from the app's settings to start a live support chat, or email the support team at <a href='mailto:paywithaccount@onepipe.io.'>paywithaccount@onepipe.io.</a>\"\n                    }\n                ],\n                \"quick_amounts\": [\n                    \"2,000\",\n                    \"5,000\",\n                    \"7,000\",\n                    \"10,000\",\n                    \"15,000\",\n                    \"20,000\"\n                ]\n            }\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get Utility [R] - No Auth Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c3a60b2f-f1c7-4b0f-b808-45d826b993f2",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status in response returns correctly\", function (){\r",
											"    pm.expect(jsonData.status).to.eql(\"Failed\");\r",
											"});\r",
											"\r",
											"pm.test(\"Error message in response is correct\", function () {\r",
											"    pm.expect(jsonData.message).to.exist.and.not.be.empty;\r",
											"});\r",
											"\r",
											"pm.test(\"Provider response error code is correct\", function () {\r",
											"    pm.expect(jsonData.data.error.code).to.exist;\r",
											"})\r",
											"   "
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "616f553d-2d95-444d-8736-61ba2afed4e7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{Token}}",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"misc.get-utility\",\n    \"data\": {\n        \"customer_ref\": \"{{customer_ref}}\",\n        \"utilities\": \"get_tnc,get_privacy_policy,get_countries,get_splash_screens,get_membership_plans,get_banner_messages,get_faqs,get_quick_amounts\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}",
								"description": "List of data to Cach offlne\n\n1. Accounts\n    \n    1. All accounts and their last balance\n        \n2. Loan Limits\n    \n3. Membership status\n    \n4. Onboard Approval Status"
							},
							"response": [
								{
									"id": "88109b10-5add-432f-b003-b9a1fa3010c0",
									"name": "Get Utility",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"misc.get-utility\",\n    \"data\": {\n        \"customer_ref\": \"1234567890\",\n        \"utilities\": \"get_tnc,get_privacy_policy,get_countries,get_splash_screens,get_membership_plans,get_banner_messages,get_faqs,get_quick_amounts\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{url}}/misc/get-utility"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [
										{
											"expires": "Invalid Date",
											"domain": "",
											"path": ""
										}
									],
									"responseTime": null,
									"body": "{\n    \"status\": \"Successful\",\n    \"message\": \"Transaction processed successfully\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"Pay4Me\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"utilities\": {\n                \"tnc\": \"https://onepipe.io/start/terms/\",\n                \"privacy_policy\": \"https://onepipe.io/start/privacy/\",\n                \"banner_messages\": [\n                    {\n                        \"message\": \"Sample message\",\n                        \"duration_in_seconds\": 3,\n                        \"action\": null\n                    },\n                    {\n                        \"message\": \"Did you know?<br> <br />You have 7 qualifying transactions for which you can collect rewards. Up to <strong>₦1m</strong> available \",\n                        \"duration_in_seconds\": 5,\n                        \"action\": null\n                    },\n                    {\n                        \"message\": \"We are giving away up to ₦1m every week. To take your share, you only need to pay with your account [scan to pay button]\",\n                        \"duration_in_seconds\": 5,\n                        \"action\": {\n                            \"title\": \"Scan to Pay\",\n                            \"link\": \"SCAN_TO_PAY_FUNCTION\"\n                        }\n                    }\n                ],\n                \"countries\": [\n                    {\n                        \"flag\": \"https://flagcdn.com/ng.svg\",\n                        \"is_live\": true,\n                        \"currency\": \"Naira\",\n                        \"full_name\": \"Federal Republic of Nigeria\",\n                        \"short_name\": \"Nigeria\",\n                        \"calling_code\": \"+234\",\n                        \"alpha_2_code\": \"NG\",\n                        \"alpha_3_code\": \"NGR\",\n                        \"currency_code\": \"NGN\",\n                        \"currency_symbol\": \"₦\"\n                    },\n                    {\n                        \"flag\": \"https://flagcdn.com/us.svg\",\n                        \"is_live\": false,\n                        \"currency\": \"United States Dollar\",\n                        \"full_name\": \"United States of America\",\n                        \"short_name\": \"United States\",\n                        \"alpha_2_code\": \"US\",\n                        \"alpha_3_code\": \"USA\",\n                        \"calling_code\": \"+1\",\n                        \"currency_code\": \"USD\",\n                        \"currency_symbol\": \"$\"\n                    },\n                    {\n                        \"flag\": \"https://flagcdn.com/gb.svg\",\n                        \"is_live\": false,\n                        \"currency\": \"Pound Sterling\",\n                        \"full_name\": \"United Kingdom of Great Britain and Northern Ireland\",\n                        \"short_name\": \"United Kingdom\",\n                        \"alpha_2_code\": \"GB\",\n                        \"alpha_3_code\": \"GBR\",\n                        \"calling_code\": \"+44\",\n                        \"currency_code\": \"GBP\",\n                        \"currency_symbol\": \"£\"\n                    },\n                    {\n                        \"flag\": \"https://flagcdn.com/ke.svg\",\n                        \"is_live\": false,\n                        \"currency\": \"Kenyan Shilling\",\n                        \"full_name\": \"Republic of Kenya\",\n                        \"short_name\": \"Kenya\",\n                        \"alpha_2_code\": \"KE\",\n                        \"alpha_3_code\": \"KEN\",\n                        \"calling_code\": \"+254\",\n                        \"currency_code\": \"KES\",\n                        \"currency_symbol\": \"KSh\"\n                    }\n                ],\n                \"splash_screens\": [\n                    {\n                        \"image\": \"https://cdn.onepipe.io/images/pwt-instore/signup.jpg\",\n                        \"title\": \"Card-free, Stress-free\",\n                        \"description\": \"All features available through your PaywithAccounts Benefits account.\",\n                        \"primary_button\": {\n                            \"link\": \"\",\n                            \"text\": \"Create Account\"\n                        },\n                        \"secondary_button\": {\n                            \"link\": \"\",\n                            \"text\": \"Login\"\n                        }\n                    },\n                    {\n                        \"image\": \"https://cdn.onepipe.io/images/pwt-instore/pay-smarter.jpg\",\n                        \"title\": \"Pay Smarter\",\n                        \"description\": \"Scan to pay instantly from your account\",\n                        \"primary_button\": {\n                            \"link\": \"\",\n                            \"text\": \"Create Account\"\n                        },\n                        \"secondary_button\": {\n                            \"link\": \"\",\n                            \"text\": \"Login\"\n                        }\n                    },\n                    {\n                        \"image\": \"https://cdn.onepipe.io/images/pwt-instore/smart-credit.jpg\",\n                        \"title\": \"Smart credit\",\n                        \"description\": \"Instant credit, right when you need it\",\n                        \"primary_button\": {\n                            \"link\": \"\",\n                            \"text\": \"Create Account\"\n                        },\n                        \"secondary_button\": {\n                            \"link\": \"\",\n                            \"text\": \"Login\"\n                        }\n                    }\n                ],\n                \"membership_plans\": {\n                    \"plans\": [\n                        {\n                            \"name\": \"Standard\",\n                            \"color\": \"#032647\",\n                            \"amount\": \"0\",\n                            \"duration\": \"weekly\",\n                            \"features\": [\n                                \"Scan to pay easily\",\n                                \"<strong>Win cash with every transaction</strong>\",\n                                \"<strong>Collect payments easily. Fast alerts!</strong>\",\n                                \"Schedule your expenses\",\n                                \"Add your employees & staff\"\n                            ]\n                        },\n                        {\n                            \"name\": \"Premium\",\n                            \"color\": \"#DCA850\",\n                            \"amount\": \"N500\",\n                            \"duration\": \"weekly\",\n                            \"features\": [\n                                \"Everything in Standard plan\",\n                                \"Membership of Growtrade Cooperative\",\n                                \"<strong>Instant N5k PAY4ME allocation</strong>\",\n                                \"Grow up to N100k PAY4ME\",\n                                \"<strong>Win up to N1m with every transaction</strong>\"\n                            ]\n                        }\n                    ],\n                    \"videos\": [\n                        {\n                            \"link\": \"https://www.youtube.com/watch?v=9avExVcS19U\",\n                            \"title\": \"Understanding the plans\"\n                        }\n                    ]\n                },\n                \"faqs\": [\n                    {\n                        \"question\": \"What is the Paywithaccount App?\",\n                        \"answer\": \"The Paywithaccount  App is a mobile-first solution that allows individuals and merchants to send, receive, and manage payments directly from their bank accounts. It supports features like Pay4Me credit, QR code payments, rewards, and account management, all accessible from a single, intuitive dashboard.\"\n                    },\n                    {\n                        \"question\": \"How do I sign up for the Paywithaccount app?\",\n                        \"answer\": \"Signing up for the Paywithaccount app is simple.<br /><br /><ol><li>Open the Paywithaccount mobile app.</li><li>Select Country \\\"Nigeria\\\" (currently the only supported country).</li><li>Enter Your Details: Provide your phone number or account number.</li><li>Choose a Plan by selecting your desired plan.</li><li>Enter and validate your Identification Number.</li><li>Accept Terms & Conditions</li></ol>\"\n                    },\n                    {\n                        \"question\": \"Can I use Paywithaccount if I am not in Nigeria?\",\n                        \"answer\": \"Currently, Paywithaccount is only available in Nigeria. Other countries will display a 'coming soon' message upon selection.\"\n                    },\n                    {\n                        \"question\": \"What if my phone number is not associated with any account when I try to log in?\",\n                        \"answer\": \"If your phone number is not found in our records, the app will redirect you to the registration flow to complete the onboarding process.\"\n                    },\n                    {\n                        \"question\": \"How do I log in to Paywithaccount as an existing user?\",\n                        \"answer\": \"After launching the app and selecting your country (Nigeria), click on \\\"Login\\\" and enter your phone number. The system will check if you have biometric login enabled. If so, you can log in with biometrics. Otherwise, an OTP will be sent to your phone number via WhatsApp for verification. Once verified, you will be redirected to your personalised dashboard.\"\n                    },\n                    {\n                        \"question\": \"What if I am already logged in on another device?\",\n                        \"answer\": \"If you attempt to log in on a second device while already logged in on another, the system will reject the new login attempt and display an error message: \\\"You are already logged in on another device. Please log out first to continue.\\\"\"\n                    },\n                    {\n                        \"question\": \"How do I delete my profile?\",\n                        \"answer\": \"Send us an email at privacy@onepipe.io, requesting a deletion.\"\n                    },\n                    {\n                        \"question\": \"How do I raise a dispute on a transaction?\",\n                        \"answer\": \"Click Dispute on the specific transaction.<ul><li>Provide a reason for the dispute</li><li>Only successful transactions can be disputed.</li></ul>\"\n                    },\n                    {\n                        \"question\": \"How can I track my transactions?\",\n                        \"answer\": \"You can track all your transactions by visiting the Paywithaccount app. You will need to provide your phone number and verify ownership by entering an OTP sent to your number. Once logged in, you will see a list of all your transactions with options to view details and status. \"\n                    },\n                    {\n                        \"question\": \"Can I use the app to make payments?\",\n                        \"answer\": \"<strong>Yes!</strong><ul><li>Scan a merchant's QR code</li><li>Pay directly from your linked bank account.</li><li>Use your Pay4Me credit line.</li></ul><br /><br />To make a payment:<br /><br /><ul><li>Scan a merchant's QR code</li><li>Tap <strong>\\\"Pay\\\"<strong> on your dashboard.</li><li>Choose your preferred payment method.</li><li>Follow the on-screen prompts to complete the transaction.</li></ul>\"\n                    },\n                    {\n                        \"question\": \"What is Pay4Me, and how does it work?\",\n                        \"answer\": \"<strong>Pay4Me</strong> is a Buy Now, Pay Later (BNPL) feature that lets you make instant in-store payments using credit, without requiring a POS terminal or physical card.<br /><br />Here's how to use it:<br /><br /><ul><li>Tap <strong>\\\"Pay\\\"<strong> and scan the merchant's QR code.</li><li>Enter the payment amount.</li><li>Select <strong>\\\"Pay4Me\\\"</strong> as your payment method</li><li>Accept the terms and confirm the transaction.</li></ul>\"\n                    },\n                    {\n                        \"question\": \"How can merchants receive payments using the Paywithaccount  App?\",\n                        \"answer\": \"Merchants can accept payments in two simple ways:<br /><br /><ul><li><strong>QR Code:</strong> Display a static or dynamic QR code for customers to scan.</li><li><strong>Virtual Account:</strong> Share your unique virtual account number to receive direct transfers.</li></ul><br /> Both options are accessible from the <strong>\\\"Collect\\\"</strong> button on your dashboard.\"\n                    },\n                    {\n                        \"question\": \"Can I receive payments as a merchant?\",\n                        \"answer\": \"<strong>Yes.</strong> Once you're set up as a merchant, you can:<br /><br /><ul><li>Display your QR code for scanning.</li><li>Share your virtual account number to receive transfers.</li></ul>\"\n                    },\n                    {\n                        \"question\": \"What if my phone number is not associated with any account when I try to log in?\",\n                        \"answer\": \"If your phone number is not found in our records, the app will redirect you to the registration flow to complete the onboarding process.\"\n                    },\n                    {\n                        \"question\": \"Can I manage my membership or subscription settings through the app?\",\n                        \"answer\": \"Absolutely. Go to <strong>Settings > Membership</strong> to:<br /><br /><ul><li>View your current membership plan.</li><li>Upgrade or change your subscription.</li><li>Pause or cancel your plan</li></ul>\"\n                    },\n                    {\n                        \"question\": \"How do I get help or support?\",\n                        \"answer\": \"We're here to help! You can chat with us from the app's settings to start a live support chat, or email the support team at <a href='mailto:paywithaccount@onepipe.io.'>paywithaccount@onepipe.io.</a>\"\n                    }\n                ],\n                \"quick_amounts\": [\n                    \"2,000\",\n                    \"5,000\",\n                    \"7,000\",\n                    \"10,000\",\n                    \"15,000\",\n                    \"20,000\"\n                ]\n            }\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get Utility [R] - Invalid Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c3a60b2f-f1c7-4b0f-b808-45d826b993f2",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status in response returns correctly\", function (){\r",
											"    pm.expect(jsonData.status).to.eql(\"Failed\");\r",
											"});\r",
											"\r",
											"pm.test(\"Error message in response is correct\", function () {\r",
											"    pm.expect(jsonData.message).to.exist.and.not.be.empty;\r",
											"});\r",
											"\r",
											"pm.test(\"Provider response error code is correct\", function () {\r",
											"    pm.expect(jsonData.data.error.code).to.exist;\r",
											"})\r",
											"   "
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "034f1f43-c971-455b-a238-ebbbc26377e3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer 6ec10a2f18cf9f894c49462b7c24a",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"misc.get-utility\",\n    \"data\": {\n        \"customer_ref\": \"{{customer_ref}}\",\n        \"utilities\": \"get_tnc,get_privacy_policy,get_countries,get_splash_screens,get_membership_plans,get_banner_messages,get_faqs,get_quick_amounts\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}",
								"description": "List of data to Cach offlne\n\n1. Accounts\n    \n    1. All accounts and their last balance\n        \n2. Loan Limits\n    \n3. Membership status\n    \n4. Onboard Approval Status"
							},
							"response": [
								{
									"id": "fab69819-40f4-45d2-a59c-af28ace163d1",
									"name": "Get Utility",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"misc.get-utility\",\n    \"data\": {\n        \"customer_ref\": \"1234567890\",\n        \"utilities\": \"get_tnc,get_privacy_policy,get_countries,get_splash_screens,get_membership_plans,get_banner_messages,get_faqs,get_quick_amounts\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{url}}/misc/get-utility"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [
										{
											"expires": "Invalid Date",
											"domain": "",
											"path": ""
										}
									],
									"responseTime": null,
									"body": "{\n    \"status\": \"Successful\",\n    \"message\": \"Transaction processed successfully\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"Pay4Me\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"utilities\": {\n                \"tnc\": \"https://onepipe.io/start/terms/\",\n                \"privacy_policy\": \"https://onepipe.io/start/privacy/\",\n                \"banner_messages\": [\n                    {\n                        \"message\": \"Sample message\",\n                        \"duration_in_seconds\": 3,\n                        \"action\": null\n                    },\n                    {\n                        \"message\": \"Did you know?<br> <br />You have 7 qualifying transactions for which you can collect rewards. Up to <strong>₦1m</strong> available \",\n                        \"duration_in_seconds\": 5,\n                        \"action\": null\n                    },\n                    {\n                        \"message\": \"We are giving away up to ₦1m every week. To take your share, you only need to pay with your account [scan to pay button]\",\n                        \"duration_in_seconds\": 5,\n                        \"action\": {\n                            \"title\": \"Scan to Pay\",\n                            \"link\": \"SCAN_TO_PAY_FUNCTION\"\n                        }\n                    }\n                ],\n                \"countries\": [\n                    {\n                        \"flag\": \"https://flagcdn.com/ng.svg\",\n                        \"is_live\": true,\n                        \"currency\": \"Naira\",\n                        \"full_name\": \"Federal Republic of Nigeria\",\n                        \"short_name\": \"Nigeria\",\n                        \"calling_code\": \"+234\",\n                        \"alpha_2_code\": \"NG\",\n                        \"alpha_3_code\": \"NGR\",\n                        \"currency_code\": \"NGN\",\n                        \"currency_symbol\": \"₦\"\n                    },\n                    {\n                        \"flag\": \"https://flagcdn.com/us.svg\",\n                        \"is_live\": false,\n                        \"currency\": \"United States Dollar\",\n                        \"full_name\": \"United States of America\",\n                        \"short_name\": \"United States\",\n                        \"alpha_2_code\": \"US\",\n                        \"alpha_3_code\": \"USA\",\n                        \"calling_code\": \"+1\",\n                        \"currency_code\": \"USD\",\n                        \"currency_symbol\": \"$\"\n                    },\n                    {\n                        \"flag\": \"https://flagcdn.com/gb.svg\",\n                        \"is_live\": false,\n                        \"currency\": \"Pound Sterling\",\n                        \"full_name\": \"United Kingdom of Great Britain and Northern Ireland\",\n                        \"short_name\": \"United Kingdom\",\n                        \"alpha_2_code\": \"GB\",\n                        \"alpha_3_code\": \"GBR\",\n                        \"calling_code\": \"+44\",\n                        \"currency_code\": \"GBP\",\n                        \"currency_symbol\": \"£\"\n                    },\n                    {\n                        \"flag\": \"https://flagcdn.com/ke.svg\",\n                        \"is_live\": false,\n                        \"currency\": \"Kenyan Shilling\",\n                        \"full_name\": \"Republic of Kenya\",\n                        \"short_name\": \"Kenya\",\n                        \"alpha_2_code\": \"KE\",\n                        \"alpha_3_code\": \"KEN\",\n                        \"calling_code\": \"+254\",\n                        \"currency_code\": \"KES\",\n                        \"currency_symbol\": \"KSh\"\n                    }\n                ],\n                \"splash_screens\": [\n                    {\n                        \"image\": \"https://cdn.onepipe.io/images/pwt-instore/signup.jpg\",\n                        \"title\": \"Card-free, Stress-free\",\n                        \"description\": \"All features available through your PaywithAccounts Benefits account.\",\n                        \"primary_button\": {\n                            \"link\": \"\",\n                            \"text\": \"Create Account\"\n                        },\n                        \"secondary_button\": {\n                            \"link\": \"\",\n                            \"text\": \"Login\"\n                        }\n                    },\n                    {\n                        \"image\": \"https://cdn.onepipe.io/images/pwt-instore/pay-smarter.jpg\",\n                        \"title\": \"Pay Smarter\",\n                        \"description\": \"Scan to pay instantly from your account\",\n                        \"primary_button\": {\n                            \"link\": \"\",\n                            \"text\": \"Create Account\"\n                        },\n                        \"secondary_button\": {\n                            \"link\": \"\",\n                            \"text\": \"Login\"\n                        }\n                    },\n                    {\n                        \"image\": \"https://cdn.onepipe.io/images/pwt-instore/smart-credit.jpg\",\n                        \"title\": \"Smart credit\",\n                        \"description\": \"Instant credit, right when you need it\",\n                        \"primary_button\": {\n                            \"link\": \"\",\n                            \"text\": \"Create Account\"\n                        },\n                        \"secondary_button\": {\n                            \"link\": \"\",\n                            \"text\": \"Login\"\n                        }\n                    }\n                ],\n                \"membership_plans\": {\n                    \"plans\": [\n                        {\n                            \"name\": \"Standard\",\n                            \"color\": \"#032647\",\n                            \"amount\": \"0\",\n                            \"duration\": \"weekly\",\n                            \"features\": [\n                                \"Scan to pay easily\",\n                                \"<strong>Win cash with every transaction</strong>\",\n                                \"<strong>Collect payments easily. Fast alerts!</strong>\",\n                                \"Schedule your expenses\",\n                                \"Add your employees & staff\"\n                            ]\n                        },\n                        {\n                            \"name\": \"Premium\",\n                            \"color\": \"#DCA850\",\n                            \"amount\": \"N500\",\n                            \"duration\": \"weekly\",\n                            \"features\": [\n                                \"Everything in Standard plan\",\n                                \"Membership of Growtrade Cooperative\",\n                                \"<strong>Instant N5k PAY4ME allocation</strong>\",\n                                \"Grow up to N100k PAY4ME\",\n                                \"<strong>Win up to N1m with every transaction</strong>\"\n                            ]\n                        }\n                    ],\n                    \"videos\": [\n                        {\n                            \"link\": \"https://www.youtube.com/watch?v=9avExVcS19U\",\n                            \"title\": \"Understanding the plans\"\n                        }\n                    ]\n                },\n                \"faqs\": [\n                    {\n                        \"question\": \"What is the Paywithaccount App?\",\n                        \"answer\": \"The Paywithaccount  App is a mobile-first solution that allows individuals and merchants to send, receive, and manage payments directly from their bank accounts. It supports features like Pay4Me credit, QR code payments, rewards, and account management, all accessible from a single, intuitive dashboard.\"\n                    },\n                    {\n                        \"question\": \"How do I sign up for the Paywithaccount app?\",\n                        \"answer\": \"Signing up for the Paywithaccount app is simple.<br /><br /><ol><li>Open the Paywithaccount mobile app.</li><li>Select Country \\\"Nigeria\\\" (currently the only supported country).</li><li>Enter Your Details: Provide your phone number or account number.</li><li>Choose a Plan by selecting your desired plan.</li><li>Enter and validate your Identification Number.</li><li>Accept Terms & Conditions</li></ol>\"\n                    },\n                    {\n                        \"question\": \"Can I use Paywithaccount if I am not in Nigeria?\",\n                        \"answer\": \"Currently, Paywithaccount is only available in Nigeria. Other countries will display a 'coming soon' message upon selection.\"\n                    },\n                    {\n                        \"question\": \"What if my phone number is not associated with any account when I try to log in?\",\n                        \"answer\": \"If your phone number is not found in our records, the app will redirect you to the registration flow to complete the onboarding process.\"\n                    },\n                    {\n                        \"question\": \"How do I log in to Paywithaccount as an existing user?\",\n                        \"answer\": \"After launching the app and selecting your country (Nigeria), click on \\\"Login\\\" and enter your phone number. The system will check if you have biometric login enabled. If so, you can log in with biometrics. Otherwise, an OTP will be sent to your phone number via WhatsApp for verification. Once verified, you will be redirected to your personalised dashboard.\"\n                    },\n                    {\n                        \"question\": \"What if I am already logged in on another device?\",\n                        \"answer\": \"If you attempt to log in on a second device while already logged in on another, the system will reject the new login attempt and display an error message: \\\"You are already logged in on another device. Please log out first to continue.\\\"\"\n                    },\n                    {\n                        \"question\": \"How do I delete my profile?\",\n                        \"answer\": \"Send us an email at privacy@onepipe.io, requesting a deletion.\"\n                    },\n                    {\n                        \"question\": \"How do I raise a dispute on a transaction?\",\n                        \"answer\": \"Click Dispute on the specific transaction.<ul><li>Provide a reason for the dispute</li><li>Only successful transactions can be disputed.</li></ul>\"\n                    },\n                    {\n                        \"question\": \"How can I track my transactions?\",\n                        \"answer\": \"You can track all your transactions by visiting the Paywithaccount app. You will need to provide your phone number and verify ownership by entering an OTP sent to your number. Once logged in, you will see a list of all your transactions with options to view details and status. \"\n                    },\n                    {\n                        \"question\": \"Can I use the app to make payments?\",\n                        \"answer\": \"<strong>Yes!</strong><ul><li>Scan a merchant's QR code</li><li>Pay directly from your linked bank account.</li><li>Use your Pay4Me credit line.</li></ul><br /><br />To make a payment:<br /><br /><ul><li>Scan a merchant's QR code</li><li>Tap <strong>\\\"Pay\\\"<strong> on your dashboard.</li><li>Choose your preferred payment method.</li><li>Follow the on-screen prompts to complete the transaction.</li></ul>\"\n                    },\n                    {\n                        \"question\": \"What is Pay4Me, and how does it work?\",\n                        \"answer\": \"<strong>Pay4Me</strong> is a Buy Now, Pay Later (BNPL) feature that lets you make instant in-store payments using credit, without requiring a POS terminal or physical card.<br /><br />Here's how to use it:<br /><br /><ul><li>Tap <strong>\\\"Pay\\\"<strong> and scan the merchant's QR code.</li><li>Enter the payment amount.</li><li>Select <strong>\\\"Pay4Me\\\"</strong> as your payment method</li><li>Accept the terms and confirm the transaction.</li></ul>\"\n                    },\n                    {\n                        \"question\": \"How can merchants receive payments using the Paywithaccount  App?\",\n                        \"answer\": \"Merchants can accept payments in two simple ways:<br /><br /><ul><li><strong>QR Code:</strong> Display a static or dynamic QR code for customers to scan.</li><li><strong>Virtual Account:</strong> Share your unique virtual account number to receive direct transfers.</li></ul><br /> Both options are accessible from the <strong>\\\"Collect\\\"</strong> button on your dashboard.\"\n                    },\n                    {\n                        \"question\": \"Can I receive payments as a merchant?\",\n                        \"answer\": \"<strong>Yes.</strong> Once you're set up as a merchant, you can:<br /><br /><ul><li>Display your QR code for scanning.</li><li>Share your virtual account number to receive transfers.</li></ul>\"\n                    },\n                    {\n                        \"question\": \"What if my phone number is not associated with any account when I try to log in?\",\n                        \"answer\": \"If your phone number is not found in our records, the app will redirect you to the registration flow to complete the onboarding process.\"\n                    },\n                    {\n                        \"question\": \"Can I manage my membership or subscription settings through the app?\",\n                        \"answer\": \"Absolutely. Go to <strong>Settings > Membership</strong> to:<br /><br /><ul><li>View your current membership plan.</li><li>Upgrade or change your subscription.</li><li>Pause or cancel your plan</li></ul>\"\n                    },\n                    {\n                        \"question\": \"How do I get help or support?\",\n                        \"answer\": \"We're here to help! You can chat with us from the app's settings to start a live support chat, or email the support team at <a href='mailto:paywithaccount@onepipe.io.'>paywithaccount@onepipe.io.</a>\"\n                    }\n                ],\n                \"quick_amounts\": [\n                    \"2,000\",\n                    \"5,000\",\n                    \"7,000\",\n                    \"10,000\",\n                    \"15,000\",\n                    \"20,000\"\n                ]\n            }\n        }\n    }\n}"
								}
							]
						}
					],
					"id": "c03aa95f-3d1b-4827-a9a6-e3df886ff2d3"
				},
				{
					"name": "Get TnC",
					"item": [
						{
							"name": "Get Tnc [R] - Success",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cafca03b-4b41-48de-8f0f-e5c812f618d5",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status in response returns correctly\", function (){\r",
											"    pm.expect(jsonData.status).to.eql(\"Successful\");\r",
											"});\r",
											"\r",
											"pm.test(\"Message in response is correct\", function () {\r",
											"    pm.expect(jsonData.message).to.eql(\"Utilities retrieved successfully\");\r",
											"});\r",
											"\r",
											"pm.test(\"Provider response data is correct\", function () {\r",
											"    pm.expect(jsonData.data.provider_response.reference).to.exist;\r",
											"    pm.expect(jsonData.data.provider_response.utilities).to.be.an(\"object\")\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "3c2895f3-b652-4430-adb7-288fcbc99ab7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{Token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"misc.get-utility\",\n    \"data\": {\n        \"customer_ref\": \"{{customer_ref}}\",\n        \"utilities\": \"get_tnc,get_privacy_policy\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}",
								"description": "List of data to Cach offlne\n\n1. Accounts\n    \n    1. All accounts and their last balance\n        \n2. Loan Limits\n    \n3. Membership status\n    \n4. Onboard Approval Status"
							},
							"response": [
								{
									"id": "7fc17e78-cf8d-495f-b752-3b0c4e1e7872",
									"name": "Get Tnc",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"misc.get-utility\",\n    \"data\": {\n        \"customer_ref\": \"1234567890\",\n        \"utilities\": [\n            \"get_tnc\",\n            \"get_privacy_policy\"\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{url}}/misc/get-tnc"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [
										{
											"expires": "Invalid Date",
											"domain": "",
											"path": ""
										}
									],
									"responseTime": null,
									"body": "\n{\n    \"status\": \"Successful\",\n    \"message\": \"Transaction processed successfully\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"Pay4Me\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"utilities\": {\n                \"tnc\": \"https://onepipe.io/start/terms/\",\n                \"privacy_policy\": \"https://onepipe.io/start/privacy/\"\n            }\n        }\n    }\n}\n"
								}
							]
						},
						{
							"name": "Get Tnc [R] - Empty Customer Reference",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cafca03b-4b41-48de-8f0f-e5c812f618d5",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status in response returns correctly\", function (){\r",
											"    pm.expect(jsonData.status).to.eql(\"Failed\");\r",
											"});\r",
											"\r",
											"pm.test(\"Error message in response is correct\", function () {\r",
											"    pm.expect(jsonData.message).to.exist.and.not.be.empty;\r",
											"});\r",
											"\r",
											"pm.test(\"Provider response error code is correct\", function () {\r",
											"    pm.expect(jsonData.data.error.code).to.exist;\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "acbef1f5-6fb7-4840-8b5d-7639e616892a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{Token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"misc.get-utility\",\n    \"data\": {\n        \"customer_ref\": \"\",\n        \"utilities\": \"get_tnc,get_privacy_policy\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}",
								"description": "List of data to Cach offlne\n\n1. Accounts\n    \n    1. All accounts and their last balance\n        \n2. Loan Limits\n    \n3. Membership status\n    \n4. Onboard Approval Status"
							},
							"response": [
								{
									"id": "4934e5a1-64e7-45c5-84b2-b0fac94ec876",
									"name": "Get Tnc",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"misc.get-utility\",\n    \"data\": {\n        \"customer_ref\": \"1234567890\",\n        \"utilities\": [\n            \"get_tnc\",\n            \"get_privacy_policy\"\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{url}}/misc/get-tnc"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [
										{
											"expires": "Invalid Date",
											"domain": "",
											"path": ""
										}
									],
									"responseTime": null,
									"body": "\n{\n    \"status\": \"Successful\",\n    \"message\": \"Transaction processed successfully\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"Pay4Me\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"utilities\": {\n                \"tnc\": \"https://onepipe.io/start/terms/\",\n                \"privacy_policy\": \"https://onepipe.io/start/privacy/\"\n            }\n        }\n    }\n}\n"
								}
							]
						},
						{
							"name": "Get Tnc [R] - Empty Utility Field",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cafca03b-4b41-48de-8f0f-e5c812f618d5",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status in response returns correctly\", function (){\r",
											"    pm.expect(jsonData.status).to.eql(\"Failed\");\r",
											"});\r",
											"\r",
											"pm.test(\"Error message in response is correct\", function () {\r",
											"    pm.expect(jsonData.message).to.exist.and.not.be.empty;\r",
											"});\r",
											"\r",
											"pm.test(\"Provider response error code is correct\", function () {\r",
											"    pm.expect(jsonData.data.error.code).to.exist;\r",
											"})\r",
											"   "
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "5f088c0c-27b1-4486-8c74-6e1a2a631fd2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{Token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"misc.get-utility\",\n    \"data\": {\n        \"customer_ref\": \"{{customer_ref}}\",\n        \"utilities\": \"\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}",
								"description": "List of data to Cach offlne\n\n1. Accounts\n    \n    1. All accounts and their last balance\n        \n2. Loan Limits\n    \n3. Membership status\n    \n4. Onboard Approval Status"
							},
							"response": [
								{
									"id": "f922e45a-7632-4d0e-81f6-9e56bd85d594",
									"name": "Get Tnc",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"misc.get-utility\",\n    \"data\": {\n        \"customer_ref\": \"1234567890\",\n        \"utilities\": [\n            \"get_tnc\",\n            \"get_privacy_policy\"\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{url}}/misc/get-tnc"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [
										{
											"expires": "Invalid Date",
											"domain": "",
											"path": ""
										}
									],
									"responseTime": null,
									"body": "\n{\n    \"status\": \"Successful\",\n    \"message\": \"Transaction processed successfully\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"Pay4Me\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"utilities\": {\n                \"tnc\": \"https://onepipe.io/start/terms/\",\n                \"privacy_policy\": \"https://onepipe.io/start/privacy/\"\n            }\n        }\n    }\n}\n"
								}
							]
						},
						{
							"name": "Get Tnc [R] - No Auth Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cafca03b-4b41-48de-8f0f-e5c812f618d5",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status in response returns correctly\", function (){\r",
											"    pm.expect(jsonData.status).to.eql(\"Failed\");\r",
											"});\r",
											"\r",
											"pm.test(\"Error message in response is correct\", function () {\r",
											"    pm.expect(jsonData.message).to.exist.and.not.be.empty;\r",
											"});\r",
											"\r",
											"pm.test(\"Provider response error code is correct\", function () {\r",
											"    pm.expect(jsonData.data.error.code).to.exist;\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "6919f90c-c616-4bac-9030-6bc0a5a34db3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{Token}}",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"misc.get-utility\",\n    \"data\": {\n        \"customer_ref\": \"{{customer_ref}}\",\n        \"utilities\": \"get_tnc,get_privacy_policy\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}",
								"description": "List of data to Cach offlne\n\n1. Accounts\n    \n    1. All accounts and their last balance\n        \n2. Loan Limits\n    \n3. Membership status\n    \n4. Onboard Approval Status"
							},
							"response": [
								{
									"id": "b2ef28f2-7bc6-41bd-8617-44b96442de47",
									"name": "Get Tnc",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"misc.get-utility\",\n    \"data\": {\n        \"customer_ref\": \"1234567890\",\n        \"utilities\": [\n            \"get_tnc\",\n            \"get_privacy_policy\"\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{url}}/misc/get-tnc"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [
										{
											"expires": "Invalid Date",
											"domain": "",
											"path": ""
										}
									],
									"responseTime": null,
									"body": "\n{\n    \"status\": \"Successful\",\n    \"message\": \"Transaction processed successfully\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"Pay4Me\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"utilities\": {\n                \"tnc\": \"https://onepipe.io/start/terms/\",\n                \"privacy_policy\": \"https://onepipe.io/start/privacy/\"\n            }\n        }\n    }\n}\n"
								}
							]
						},
						{
							"name": "Get TnC [R] - Invalid Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cafca03b-4b41-48de-8f0f-e5c812f618d5",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status in response returns correctly\", function (){\r",
											"    pm.expect(jsonData.status).to.eql(\"Failed\");\r",
											"});\r",
											"\r",
											"pm.test(\"Error message in response is correct\", function () {\r",
											"    pm.expect(jsonData.message).to.exist.and.not.be.empty;\r",
											"});\r",
											"\r",
											"pm.test(\"Provider response error code is correct\", function () {\r",
											"    pm.expect(jsonData.data.error.code).to.exist;\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "d0766d92-4057-4f60-8c36-8b4378bbd6ef",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer 6ec10a2f18cf9f894c49462",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"misc.get-utility\",\n    \"data\": {\n        \"customer_ref\": \"{{customer_ref}}\",\n        \"utilities\": \"get_tnc,get_privacy_policy\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}",
								"description": "List of data to Cach offlne\n\n1. Accounts\n    \n    1. All accounts and their last balance\n        \n2. Loan Limits\n    \n3. Membership status\n    \n4. Onboard Approval Status"
							},
							"response": [
								{
									"id": "324aa049-4865-47c6-8db4-128a7dc84e75",
									"name": "Get Tnc",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"misc.get-utility\",\n    \"data\": {\n        \"customer_ref\": \"1234567890\",\n        \"utilities\": [\n            \"get_tnc\",\n            \"get_privacy_policy\"\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{url}}/misc/get-tnc"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [
										{
											"expires": "Invalid Date",
											"domain": "",
											"path": ""
										}
									],
									"responseTime": null,
									"body": "\n{\n    \"status\": \"Successful\",\n    \"message\": \"Transaction processed successfully\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"Pay4Me\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"utilities\": {\n                \"tnc\": \"https://onepipe.io/start/terms/\",\n                \"privacy_policy\": \"https://onepipe.io/start/privacy/\"\n            }\n        }\n    }\n}\n"
								}
							]
						}
					],
					"id": "a5e396cc-a58a-4c52-b60e-13c8d365809a"
				},
				{
					"name": "Get Banks",
					"item": [
						{
							"name": "Get Banks [R]",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4ca48a13-0426-4bc5-b1a1-4ef37a438374",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Check that status response is correct\", function () {\r",
											"    pm.expect(jsonData.status).to.eql(\"Successful\");\r",
											"})\r",
											"\r",
											"pm.test(\"Check that message response is correct\", function () {\r",
											"    pm.expect(jsonData.message).to.exist.and.not.to.be.empty;\r",
											"})\r",
											"\r",
											"pm.test(\"Check that banks are being returned correctly\", function () {\r",
											"    pm.expect(jsonData.data.provider_response.banks).to.be.an(\"array\");\r",
											"    pm.expect(jsonData.data.provider_response.banks).to.not.be.empty\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "d009dab8-8d02-4eaa-b25d-f5fa2891fce3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{Token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"misc.get-banks\",\n    \"data\": {\n        \"customer_ref\": \"{{customer_ref}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}",
								"description": "List of data to Cach offlne\n\n1. Accounts\n    \n    1. All accounts and their last balance\n        \n2. Loan Limits\n    \n3. Membership status\n    \n4. Onboard Approval Status"
							},
							"response": [
								{
									"id": "e888979c-532e-4f4f-ad06-23c56029267e",
									"name": "Get Banks",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"misc.get-banks\",\n    \"data\": {\n        \"customer_ref\": \"1234567890\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{url}}/misc/get-banks"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [
										{
											"expires": "Invalid Date",
											"domain": "",
											"path": ""
										}
									],
									"responseTime": null,
									"body": "{\n    \"status\": \"Successful\",\n    \"message\": \"Transaction processed successfully\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"PaywithAccount\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"banks\": [\n                {\n                    \"logo_url\": \"https://lendstack-s3.s3.us-east-2.amazonaws.com/bank_logos/050.png\",\n                    \"bank_cbn_code\": \"050\",\n                    \"bank_name\": \"Ecobank Bank\"\n                },\n                {\n                    \"logo_url\": \"https://lendstack-s3.s3.us-east-2.amazonaws.com/bank_logos/050.png\",\n                    \"bank_cbn_code\": \"214\",\n                    \"bank_name\": \"FCMB\"\n                },\n                {\n                    \"logo_url\": \"https://lendstack-s3.s3.us-east-2.amazonaws.com/bank_logos/050.png\",\n                    \"bank_cbn_code\": \"313\",\n                    \"bank_name\": \"Mkudi\"\n                },\n                {\n                    \"logo_url\": \"https://lendstack-s3.s3.us-east-2.amazonaws.com/bank_logos/050.png\",\n                    \"bank_cbn_code\": \"401\",\n                    \"bank_name\": \"ASOSavings\"\n                },\n                {\n                    \"logo_url\": null,\n                    \"bank_cbn_code\": \"917\",\n                    \"bank_name\": \"GOWANS MFB\"\n                }\n            ],\n            \"reference\": 1089408276583,\n            \"meta\": {\n                \"field_key\": \"field_value\"\n            }\n        },\n        \"client_info\": {\n            \"name\": null,\n            \"id\": null,\n            \"bank_cbn_code\": null,\n            \"bank_name\": null,\n            \"console_url\": null,\n            \"js_background_image\": null,\n            \"css_url\": null,\n            \"logo_url\": null,\n            \"footer_text\": null,\n            \"show_options_icon\": false,\n            \"paginate\": false,\n            \"paginate_count\": 0,\n            \"options\": null,\n            \"merchant\": null,\n            \"colors\": null,\n            \"meta\": null\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get Banks [R]  - empty  customer reference",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4ca48a13-0426-4bc5-b1a1-4ef37a438374",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Check that status response is correct\", function () {\r",
											"    pm.expect(jsonData.status).to.eql(\"Failed\");\r",
											"})\r",
											"\r",
											"pm.test(\"Check that message response is correct\", function () {\r",
											"    pm.expect(jsonData.message).to.exist.and.not.to.be.empty;\r",
											"})\r",
											"\r",
											"pm.test(\"Check that banks are being returned correctly\", function () {\r",
											"    pm.expect(jsonData.data.provider_response_code).to.be.a(\"number\");\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "cd83de2d-b71c-4c4a-ad61-78c6a3290d6d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{Token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"misc.get-banks\",\n    \"data\": {\n        \"customer_ref\": \"\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}",
								"description": "List of data to Cach offlne\n\n1. Accounts\n    \n    1. All accounts and their last balance\n        \n2. Loan Limits\n    \n3. Membership status\n    \n4. Onboard Approval Status"
							},
							"response": [
								{
									"id": "39e5ba95-128e-40ea-876e-3252b8cfaa75",
									"name": "Get Banks",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"misc.get-banks\",\n    \"data\": {\n        \"customer_ref\": \"1234567890\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{url}}/misc/get-banks"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [
										{
											"expires": "Invalid Date",
											"domain": "",
											"path": ""
										}
									],
									"responseTime": null,
									"body": "{\n    \"status\": \"Successful\",\n    \"message\": \"Transaction processed successfully\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"PaywithAccount\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"banks\": [\n                {\n                    \"logo_url\": \"https://lendstack-s3.s3.us-east-2.amazonaws.com/bank_logos/050.png\",\n                    \"bank_cbn_code\": \"050\",\n                    \"bank_name\": \"Ecobank Bank\"\n                },\n                {\n                    \"logo_url\": \"https://lendstack-s3.s3.us-east-2.amazonaws.com/bank_logos/050.png\",\n                    \"bank_cbn_code\": \"214\",\n                    \"bank_name\": \"FCMB\"\n                },\n                {\n                    \"logo_url\": \"https://lendstack-s3.s3.us-east-2.amazonaws.com/bank_logos/050.png\",\n                    \"bank_cbn_code\": \"313\",\n                    \"bank_name\": \"Mkudi\"\n                },\n                {\n                    \"logo_url\": \"https://lendstack-s3.s3.us-east-2.amazonaws.com/bank_logos/050.png\",\n                    \"bank_cbn_code\": \"401\",\n                    \"bank_name\": \"ASOSavings\"\n                },\n                {\n                    \"logo_url\": null,\n                    \"bank_cbn_code\": \"917\",\n                    \"bank_name\": \"GOWANS MFB\"\n                }\n            ],\n            \"reference\": 1089408276583,\n            \"meta\": {\n                \"field_key\": \"field_value\"\n            }\n        },\n        \"client_info\": {\n            \"name\": null,\n            \"id\": null,\n            \"bank_cbn_code\": null,\n            \"bank_name\": null,\n            \"console_url\": null,\n            \"js_background_image\": null,\n            \"css_url\": null,\n            \"logo_url\": null,\n            \"footer_text\": null,\n            \"show_options_icon\": false,\n            \"paginate\": false,\n            \"paginate_count\": 0,\n            \"options\": null,\n            \"merchant\": null,\n            \"colors\": null,\n            \"meta\": null\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get Banks [R]  - empty token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4ca48a13-0426-4bc5-b1a1-4ef37a438374",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Check that status response is correct\", function () {\r",
											"    pm.expect(jsonData.status).to.eql(\"Failed\");\r",
											"})\r",
											"\r",
											"pm.test(\"Check that message response is correct\", function () {\r",
											"    pm.expect(jsonData.message).to.exist.and.not.to.be.empty;\r",
											"})\r",
											"\r",
											"pm.test(\"Check that banks are being returned correctly\", function () {\r",
											"    pm.expect(jsonData.data.provider_response_code).to.exist;\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "3be8b41b-d08a-4e47-9eed-def19b8f54ce",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{Token}}",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"misc.get-banks\",\n    \"data\": {\n        \"customer_ref\": \"{{customer_ref}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}",
								"description": "List of data to Cach offlne\n\n1. Accounts\n    \n    1. All accounts and their last balance\n        \n2. Loan Limits\n    \n3. Membership status\n    \n4. Onboard Approval Status"
							},
							"response": [
								{
									"id": "b29c812d-5786-42c8-980a-64bfe45d09a0",
									"name": "Get Banks",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"misc.get-banks\",\n    \"data\": {\n        \"customer_ref\": \"1234567890\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{url}}/misc/get-banks"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [
										{
											"expires": "Invalid Date",
											"domain": "",
											"path": ""
										}
									],
									"responseTime": null,
									"body": "{\n    \"status\": \"Successful\",\n    \"message\": \"Transaction processed successfully\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"PaywithAccount\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"banks\": [\n                {\n                    \"logo_url\": \"https://lendstack-s3.s3.us-east-2.amazonaws.com/bank_logos/050.png\",\n                    \"bank_cbn_code\": \"050\",\n                    \"bank_name\": \"Ecobank Bank\"\n                },\n                {\n                    \"logo_url\": \"https://lendstack-s3.s3.us-east-2.amazonaws.com/bank_logos/050.png\",\n                    \"bank_cbn_code\": \"214\",\n                    \"bank_name\": \"FCMB\"\n                },\n                {\n                    \"logo_url\": \"https://lendstack-s3.s3.us-east-2.amazonaws.com/bank_logos/050.png\",\n                    \"bank_cbn_code\": \"313\",\n                    \"bank_name\": \"Mkudi\"\n                },\n                {\n                    \"logo_url\": \"https://lendstack-s3.s3.us-east-2.amazonaws.com/bank_logos/050.png\",\n                    \"bank_cbn_code\": \"401\",\n                    \"bank_name\": \"ASOSavings\"\n                },\n                {\n                    \"logo_url\": null,\n                    \"bank_cbn_code\": \"917\",\n                    \"bank_name\": \"GOWANS MFB\"\n                }\n            ],\n            \"reference\": 1089408276583,\n            \"meta\": {\n                \"field_key\": \"field_value\"\n            }\n        },\n        \"client_info\": {\n            \"name\": null,\n            \"id\": null,\n            \"bank_cbn_code\": null,\n            \"bank_name\": null,\n            \"console_url\": null,\n            \"js_background_image\": null,\n            \"css_url\": null,\n            \"logo_url\": null,\n            \"footer_text\": null,\n            \"show_options_icon\": false,\n            \"paginate\": false,\n            \"paginate_count\": 0,\n            \"options\": null,\n            \"merchant\": null,\n            \"colors\": null,\n            \"meta\": null\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get Banks [R]  - Invalid token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4ca48a13-0426-4bc5-b1a1-4ef37a438374",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Check that status response is correct\", function () {\r",
											"    pm.expect(jsonData.status).to.eql(\"Failed\");\r",
											"})\r",
											"\r",
											"pm.test(\"Check that message response is correct\", function () {\r",
											"    pm.expect(jsonData.message).to.exist.and.not.to.be.empty;\r",
											"})\r",
											"\r",
											"pm.test(\"Check that banks are being returned correctly\", function () {\r",
											"    pm.expect(jsonData.data.provider_response_code).to.exist;\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "72ad5cc7-0ca6-4a84-bb5d-f83ea4b98413",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer 6ec10a2f18cf9f894c49462b7c ",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"misc.get-banks\",\n    \"data\": {\n        \"customer_ref\": \"{{customer_ref}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}",
								"description": "List of data to Cach offlne\n\n1. Accounts\n    \n    1. All accounts and their last balance\n        \n2. Loan Limits\n    \n3. Membership status\n    \n4. Onboard Approval Status"
							},
							"response": [
								{
									"id": "f912e146-90be-4b48-bc5c-2d40129672d1",
									"name": "Get Banks",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"misc.get-banks\",\n    \"data\": {\n        \"customer_ref\": \"1234567890\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{url}}/misc/get-banks"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [
										{
											"expires": "Invalid Date",
											"domain": "",
											"path": ""
										}
									],
									"responseTime": null,
									"body": "{\n    \"status\": \"Successful\",\n    \"message\": \"Transaction processed successfully\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"PaywithAccount\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"banks\": [\n                {\n                    \"logo_url\": \"https://lendstack-s3.s3.us-east-2.amazonaws.com/bank_logos/050.png\",\n                    \"bank_cbn_code\": \"050\",\n                    \"bank_name\": \"Ecobank Bank\"\n                },\n                {\n                    \"logo_url\": \"https://lendstack-s3.s3.us-east-2.amazonaws.com/bank_logos/050.png\",\n                    \"bank_cbn_code\": \"214\",\n                    \"bank_name\": \"FCMB\"\n                },\n                {\n                    \"logo_url\": \"https://lendstack-s3.s3.us-east-2.amazonaws.com/bank_logos/050.png\",\n                    \"bank_cbn_code\": \"313\",\n                    \"bank_name\": \"Mkudi\"\n                },\n                {\n                    \"logo_url\": \"https://lendstack-s3.s3.us-east-2.amazonaws.com/bank_logos/050.png\",\n                    \"bank_cbn_code\": \"401\",\n                    \"bank_name\": \"ASOSavings\"\n                },\n                {\n                    \"logo_url\": null,\n                    \"bank_cbn_code\": \"917\",\n                    \"bank_name\": \"GOWANS MFB\"\n                }\n            ],\n            \"reference\": 1089408276583,\n            \"meta\": {\n                \"field_key\": \"field_value\"\n            }\n        },\n        \"client_info\": {\n            \"name\": null,\n            \"id\": null,\n            \"bank_cbn_code\": null,\n            \"bank_name\": null,\n            \"console_url\": null,\n            \"js_background_image\": null,\n            \"css_url\": null,\n            \"logo_url\": null,\n            \"footer_text\": null,\n            \"show_options_icon\": false,\n            \"paginate\": false,\n            \"paginate_count\": 0,\n            \"options\": null,\n            \"merchant\": null,\n            \"colors\": null,\n            \"meta\": null\n        }\n    }\n}"
								}
							]
						}
					],
					"id": "1da4b271-7709-4ea3-994f-deb4a634ef35"
				},
				{
					"name": "Get Countries",
					"item": [
						{
							"name": "Get Countries [R]",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "52b01eaf-ec11-4874-8cb8-760684df27e6",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status in response returns correctly\", function (){\r",
											"    pm.expect(jsonData.status).to.eql(\"Successful\");\r",
											"});\r",
											"\r",
											"pm.test(\"Message in response is correct\", function () {\r",
											"    pm.expect(jsonData.message).to.eql(\"Utilities retrieved successfully\");\r",
											"});\r",
											"\r",
											"pm.test(\"Provider response data is correct\", function () {\r",
											"    pm.expect(jsonData.data.provider_response.reference).to.exist;\r",
											"    pm.expect(jsonData.data.provider_response.utilities).to.be.an(\"object\")\r",
											"    pm.expect(jsonData.data.provider_response.utilities.countries).to.be.an(\"array\")\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "f3a3a376-36c9-45a2-9600-16edcba0bf22",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{Token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"misc.get-utility\",\n    \"data\": {\n        \"customer_ref\": \"{{customer_ref}}\",\n        \"utilities\": \"get_countries\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}"
							},
							"response": [
								{
									"id": "62932986-124f-403f-b5cf-5486adbe3418",
									"name": "Get Countries",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"misc.get-utility\",\n    \"data\": {\n        \"customer_ref\": \"1234567890\",\n        \"utilities\": \"get_countries\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{url}}/misc/locations"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [
										{
											"expires": "Invalid Date",
											"domain": "",
											"path": ""
										}
									],
									"responseTime": null,
									"body": "\n{\n    \"status\": \"Successful\",\n    \"message\": \"Transaction processed successfully\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"Pay4Me\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"utilities\": {\n                \"tnc\": \"https://onepipe.io/start/terms/\",\n                \"privacy_policy\": \"https://onepipe.io/start/privacy/\",\n                \"countries\": [\n                    {\n                        \"flag\": \"https://flagcdn.com/ng.svg\",\n                        \"is_live\": true,\n                        \"currency\": \"Naira\",\n                        \"full_name\": \"Federal Republic of Nigeria\",\n                        \"short_name\": \"Nigeria\",\n                        \"alpha_2_code\": \"NG\",\n                        \"alpha_3_code\": \"NGR\",\n                        \"currency_code\": \"NGN\",\n                        \"currency_symbol\": \"₦\"\n                    },\n                    {\n                        \"flag\": \"https://flagcdn.com/us.svg\",\n                        \"is_live\": false,\n                        \"currency\": \"United States Dollar\",\n                        \"full_name\": \"United States of America\",\n                        \"short_name\": \"United States\",\n                        \"alpha_2_code\": \"US\",\n                        \"alpha_3_code\": \"USA\",\n                        \"currency_code\": \"USD\",\n                        \"currency_symbol\": \"$\"\n                    },\n                    {\n                        \"flag\": \"https://flagcdn.com/gb.svg\",\n                        \"is_live\": false,\n                        \"currency\": \"Pound Sterling\",\n                        \"full_name\": \"United Kingdom of Great Britain and Northern Ireland\",\n                        \"short_name\": \"United Kingdom\",\n                        \"alpha_2_code\": \"GB\",\n                        \"alpha_3_code\": \"GBR\",\n                        \"currency_code\": \"GBP\",\n                        \"currency_symbol\": \"£\"\n                    },\n                    {\n                        \"flag\": \"https://flagcdn.com/ke.svg\",\n                        \"is_live\": false,\n                        \"currency\": \"Kenyan Shilling\",\n                        \"full_name\": \"Republic of Kenya\",\n                        \"short_name\": \"Kenya\",\n                        \"alpha_2_code\": \"KE\",\n                        \"alpha_3_code\": \"KEN\",\n                        \"currency_code\": \"KES\",\n                        \"currency_symbol\": \"KSh\"\n                    }\n                ],\n                \"splash_screens\": [\n                    {\n                        \"image\": \"https://cdn.onepipe.io/images/pwt-instore/signup.png\",\n                        \"title\": \"Card-free, Stress-free\",\n                        \"description\": \"All features available through your PaywithAccounts Benefits account.\",\n                        \"primary_button\": {\n                            \"link\": \"\",\n                            \"text\": \"Create Account\"\n                        },\n                        \"secondary_button\": {\n                            \"link\": \"\",\n                            \"text\": \"Login\"\n                        }\n                    },\n                    {\n                        \"image\": \"https://cdn.onepipe.io/images/pwt-instore/pay-smarter.png\",\n                        \"title\": \"Pay Smarter\",\n                        \"description\": \"Scan to pay instantly from your account\",\n                        \"primary_button\": {\n                            \"link\": \"\",\n                            \"text\": \"Create Account\"\n                        },\n                        \"secondary_button\": {\n                            \"link\": \"\",\n                            \"text\": \"Login\"\n                        }\n                    },\n                    {\n                        \"image\": \"https://cdn.onepipe.io/images/pwt-instore/smart-credit.png\",\n                        \"title\": \"Smart credit\",\n                        \"description\": \"Instant credit, right when you need it\",\n                        \"primary_button\": {\n                            \"link\": \"\",\n                            \"text\": \"Create Account\"\n                        },\n                        \"secondary_button\": {\n                            \"link\": \"\",\n                            \"text\": \"Login\"\n                        }\n                    }\n                ],\n                \"membership_plans\": [\n                    {\n                        \"name\": \"Regular\",\n                        \"color\": \"#032647\",\n                        \"amount\": \"N500\",\n                        \"savings\": \"N300\",\n                        \"duration\": \"weekly\",\n                        \"features\": [\n                            \"Start at N10,000 credit line\",\n                            \"Grow up to N1,000,000\",\n                            \"Interest: 3%\",\n                            \"N300 in your weekly savings\"\n                        ]\n                    },\n                    {\n                        \"name\": \"Premium\",\n                        \"color\": \"#DCA850\",\n                        \"amount\": \"N950\",\n                        \"savings\": \"N700\",\n                        \"duration\": \"weekly\",\n                        \"features\": [\n                            \"Start at N20,000 credit line\",\n                            \"Grow up to N3,000,000\",\n                            \"Interest: 3%\",\n                            \"N700 in your weekly savings\"\n                        ]\n                    }\n                ]\n            }\n        }\n    }\n}\n"
								}
							]
						},
						{
							"name": "Get Countries [R] - Empty Customer Reference",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "52b01eaf-ec11-4874-8cb8-760684df27e6",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status in response returns correctly\", function (){\r",
											"    pm.expect(jsonData.status).to.eql(\"Failed\");\r",
											"});\r",
											"\r",
											"pm.test(\"Error message in response is correct\", function () {\r",
											"    pm.expect(jsonData.message).to.exist.and.not.be.empty;\r",
											"});\r",
											"\r",
											"pm.test(\"Provider response error code is correct\", function () {\r",
											"    pm.expect(jsonData.data.error.code).to.exist;\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "6c85c799-6490-44d5-84f8-2523f40ee401",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{Token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"misc.get-utility\",\n    \"data\": {\n        \"customer_ref\": \"\",\n        \"utilities\": \"get_countries\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}"
							},
							"response": [
								{
									"id": "a53a4468-d8f8-4ac4-8b69-2ed2f06f5bc6",
									"name": "Get Countries",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"misc.get-utility\",\n    \"data\": {\n        \"customer_ref\": \"1234567890\",\n        \"utilities\": \"get_countries\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{url}}/misc/locations"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [
										{
											"expires": "Invalid Date",
											"domain": "",
											"path": ""
										}
									],
									"responseTime": null,
									"body": "\n{\n    \"status\": \"Successful\",\n    \"message\": \"Transaction processed successfully\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"Pay4Me\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"utilities\": {\n                \"tnc\": \"https://onepipe.io/start/terms/\",\n                \"privacy_policy\": \"https://onepipe.io/start/privacy/\",\n                \"countries\": [\n                    {\n                        \"flag\": \"https://flagcdn.com/ng.svg\",\n                        \"is_live\": true,\n                        \"currency\": \"Naira\",\n                        \"full_name\": \"Federal Republic of Nigeria\",\n                        \"short_name\": \"Nigeria\",\n                        \"alpha_2_code\": \"NG\",\n                        \"alpha_3_code\": \"NGR\",\n                        \"currency_code\": \"NGN\",\n                        \"currency_symbol\": \"₦\"\n                    },\n                    {\n                        \"flag\": \"https://flagcdn.com/us.svg\",\n                        \"is_live\": false,\n                        \"currency\": \"United States Dollar\",\n                        \"full_name\": \"United States of America\",\n                        \"short_name\": \"United States\",\n                        \"alpha_2_code\": \"US\",\n                        \"alpha_3_code\": \"USA\",\n                        \"currency_code\": \"USD\",\n                        \"currency_symbol\": \"$\"\n                    },\n                    {\n                        \"flag\": \"https://flagcdn.com/gb.svg\",\n                        \"is_live\": false,\n                        \"currency\": \"Pound Sterling\",\n                        \"full_name\": \"United Kingdom of Great Britain and Northern Ireland\",\n                        \"short_name\": \"United Kingdom\",\n                        \"alpha_2_code\": \"GB\",\n                        \"alpha_3_code\": \"GBR\",\n                        \"currency_code\": \"GBP\",\n                        \"currency_symbol\": \"£\"\n                    },\n                    {\n                        \"flag\": \"https://flagcdn.com/ke.svg\",\n                        \"is_live\": false,\n                        \"currency\": \"Kenyan Shilling\",\n                        \"full_name\": \"Republic of Kenya\",\n                        \"short_name\": \"Kenya\",\n                        \"alpha_2_code\": \"KE\",\n                        \"alpha_3_code\": \"KEN\",\n                        \"currency_code\": \"KES\",\n                        \"currency_symbol\": \"KSh\"\n                    }\n                ],\n                \"splash_screens\": [\n                    {\n                        \"image\": \"https://cdn.onepipe.io/images/pwt-instore/signup.png\",\n                        \"title\": \"Card-free, Stress-free\",\n                        \"description\": \"All features available through your PaywithAccounts Benefits account.\",\n                        \"primary_button\": {\n                            \"link\": \"\",\n                            \"text\": \"Create Account\"\n                        },\n                        \"secondary_button\": {\n                            \"link\": \"\",\n                            \"text\": \"Login\"\n                        }\n                    },\n                    {\n                        \"image\": \"https://cdn.onepipe.io/images/pwt-instore/pay-smarter.png\",\n                        \"title\": \"Pay Smarter\",\n                        \"description\": \"Scan to pay instantly from your account\",\n                        \"primary_button\": {\n                            \"link\": \"\",\n                            \"text\": \"Create Account\"\n                        },\n                        \"secondary_button\": {\n                            \"link\": \"\",\n                            \"text\": \"Login\"\n                        }\n                    },\n                    {\n                        \"image\": \"https://cdn.onepipe.io/images/pwt-instore/smart-credit.png\",\n                        \"title\": \"Smart credit\",\n                        \"description\": \"Instant credit, right when you need it\",\n                        \"primary_button\": {\n                            \"link\": \"\",\n                            \"text\": \"Create Account\"\n                        },\n                        \"secondary_button\": {\n                            \"link\": \"\",\n                            \"text\": \"Login\"\n                        }\n                    }\n                ],\n                \"membership_plans\": [\n                    {\n                        \"name\": \"Regular\",\n                        \"color\": \"#032647\",\n                        \"amount\": \"N500\",\n                        \"savings\": \"N300\",\n                        \"duration\": \"weekly\",\n                        \"features\": [\n                            \"Start at N10,000 credit line\",\n                            \"Grow up to N1,000,000\",\n                            \"Interest: 3%\",\n                            \"N300 in your weekly savings\"\n                        ]\n                    },\n                    {\n                        \"name\": \"Premium\",\n                        \"color\": \"#DCA850\",\n                        \"amount\": \"N950\",\n                        \"savings\": \"N700\",\n                        \"duration\": \"weekly\",\n                        \"features\": [\n                            \"Start at N20,000 credit line\",\n                            \"Grow up to N3,000,000\",\n                            \"Interest: 3%\",\n                            \"N700 in your weekly savings\"\n                        ]\n                    }\n                ]\n            }\n        }\n    }\n}\n"
								}
							]
						},
						{
							"name": "Get Countries [R] - Empty Utility Field",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "52b01eaf-ec11-4874-8cb8-760684df27e6",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status in response returns correctly\", function (){\r",
											"    pm.expect(jsonData.status).to.eql(\"Failed\");\r",
											"});\r",
											"\r",
											"pm.test(\"Error message in response is correct\", function () {\r",
											"    pm.expect(jsonData.message).to.exist.and.not.be.empty;\r",
											"});\r",
											"\r",
											"pm.test(\"Provider response error code is correct\", function () {\r",
											"    pm.expect(jsonData.data.error.code).to.exist;\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "11d9f6fd-dc98-42d1-9796-e4440bad9620",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{Token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"misc.get-utility\",\n    \"data\": {\n        \"customer_ref\": \"{{customer_ref}}\",\n        \"utilities\": \"\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}"
							},
							"response": [
								{
									"id": "c3de1ff4-fa43-4b64-ac5a-7db1bce814b6",
									"name": "Get Countries",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"misc.get-utility\",\n    \"data\": {\n        \"customer_ref\": \"1234567890\",\n        \"utilities\": \"get_countries\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{url}}/misc/locations"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [
										{
											"expires": "Invalid Date",
											"domain": "",
											"path": ""
										}
									],
									"responseTime": null,
									"body": "\n{\n    \"status\": \"Successful\",\n    \"message\": \"Transaction processed successfully\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"Pay4Me\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"utilities\": {\n                \"tnc\": \"https://onepipe.io/start/terms/\",\n                \"privacy_policy\": \"https://onepipe.io/start/privacy/\",\n                \"countries\": [\n                    {\n                        \"flag\": \"https://flagcdn.com/ng.svg\",\n                        \"is_live\": true,\n                        \"currency\": \"Naira\",\n                        \"full_name\": \"Federal Republic of Nigeria\",\n                        \"short_name\": \"Nigeria\",\n                        \"alpha_2_code\": \"NG\",\n                        \"alpha_3_code\": \"NGR\",\n                        \"currency_code\": \"NGN\",\n                        \"currency_symbol\": \"₦\"\n                    },\n                    {\n                        \"flag\": \"https://flagcdn.com/us.svg\",\n                        \"is_live\": false,\n                        \"currency\": \"United States Dollar\",\n                        \"full_name\": \"United States of America\",\n                        \"short_name\": \"United States\",\n                        \"alpha_2_code\": \"US\",\n                        \"alpha_3_code\": \"USA\",\n                        \"currency_code\": \"USD\",\n                        \"currency_symbol\": \"$\"\n                    },\n                    {\n                        \"flag\": \"https://flagcdn.com/gb.svg\",\n                        \"is_live\": false,\n                        \"currency\": \"Pound Sterling\",\n                        \"full_name\": \"United Kingdom of Great Britain and Northern Ireland\",\n                        \"short_name\": \"United Kingdom\",\n                        \"alpha_2_code\": \"GB\",\n                        \"alpha_3_code\": \"GBR\",\n                        \"currency_code\": \"GBP\",\n                        \"currency_symbol\": \"£\"\n                    },\n                    {\n                        \"flag\": \"https://flagcdn.com/ke.svg\",\n                        \"is_live\": false,\n                        \"currency\": \"Kenyan Shilling\",\n                        \"full_name\": \"Republic of Kenya\",\n                        \"short_name\": \"Kenya\",\n                        \"alpha_2_code\": \"KE\",\n                        \"alpha_3_code\": \"KEN\",\n                        \"currency_code\": \"KES\",\n                        \"currency_symbol\": \"KSh\"\n                    }\n                ],\n                \"splash_screens\": [\n                    {\n                        \"image\": \"https://cdn.onepipe.io/images/pwt-instore/signup.png\",\n                        \"title\": \"Card-free, Stress-free\",\n                        \"description\": \"All features available through your PaywithAccounts Benefits account.\",\n                        \"primary_button\": {\n                            \"link\": \"\",\n                            \"text\": \"Create Account\"\n                        },\n                        \"secondary_button\": {\n                            \"link\": \"\",\n                            \"text\": \"Login\"\n                        }\n                    },\n                    {\n                        \"image\": \"https://cdn.onepipe.io/images/pwt-instore/pay-smarter.png\",\n                        \"title\": \"Pay Smarter\",\n                        \"description\": \"Scan to pay instantly from your account\",\n                        \"primary_button\": {\n                            \"link\": \"\",\n                            \"text\": \"Create Account\"\n                        },\n                        \"secondary_button\": {\n                            \"link\": \"\",\n                            \"text\": \"Login\"\n                        }\n                    },\n                    {\n                        \"image\": \"https://cdn.onepipe.io/images/pwt-instore/smart-credit.png\",\n                        \"title\": \"Smart credit\",\n                        \"description\": \"Instant credit, right when you need it\",\n                        \"primary_button\": {\n                            \"link\": \"\",\n                            \"text\": \"Create Account\"\n                        },\n                        \"secondary_button\": {\n                            \"link\": \"\",\n                            \"text\": \"Login\"\n                        }\n                    }\n                ],\n                \"membership_plans\": [\n                    {\n                        \"name\": \"Regular\",\n                        \"color\": \"#032647\",\n                        \"amount\": \"N500\",\n                        \"savings\": \"N300\",\n                        \"duration\": \"weekly\",\n                        \"features\": [\n                            \"Start at N10,000 credit line\",\n                            \"Grow up to N1,000,000\",\n                            \"Interest: 3%\",\n                            \"N300 in your weekly savings\"\n                        ]\n                    },\n                    {\n                        \"name\": \"Premium\",\n                        \"color\": \"#DCA850\",\n                        \"amount\": \"N950\",\n                        \"savings\": \"N700\",\n                        \"duration\": \"weekly\",\n                        \"features\": [\n                            \"Start at N20,000 credit line\",\n                            \"Grow up to N3,000,000\",\n                            \"Interest: 3%\",\n                            \"N700 in your weekly savings\"\n                        ]\n                    }\n                ]\n            }\n        }\n    }\n}\n"
								}
							]
						},
						{
							"name": "Get Countries [R] - No Auth Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "52b01eaf-ec11-4874-8cb8-760684df27e6",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status in response returns correctly\", function (){\r",
											"    pm.expect(jsonData.status).to.eql(\"Failed\");\r",
											"});\r",
											"\r",
											"pm.test(\"Error message in response is correct\", function () {\r",
											"    pm.expect(jsonData.message).to.exist.and.not.be.empty;\r",
											"});\r",
											"\r",
											"pm.test(\"Provider response error code is correct\", function () {\r",
											"    pm.expect(jsonData.data.error.code).to.exist;\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "77cf37f6-b93a-45b8-81e4-9af2eeed036a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{Token}}",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"misc.get-utility\",\n    \"data\": {\n        \"customer_ref\": \"{{customer_ref}}\",\n        \"utilities\": \"get_countries\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}"
							},
							"response": [
								{
									"id": "75b4093a-350c-4e02-bdbb-98a2bd5c28d1",
									"name": "Get Countries",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"misc.get-utility\",\n    \"data\": {\n        \"customer_ref\": \"1234567890\",\n        \"utilities\": \"get_countries\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{url}}/misc/locations"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [
										{
											"expires": "Invalid Date",
											"domain": "",
											"path": ""
										}
									],
									"responseTime": null,
									"body": "\n{\n    \"status\": \"Successful\",\n    \"message\": \"Transaction processed successfully\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"Pay4Me\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"utilities\": {\n                \"tnc\": \"https://onepipe.io/start/terms/\",\n                \"privacy_policy\": \"https://onepipe.io/start/privacy/\",\n                \"countries\": [\n                    {\n                        \"flag\": \"https://flagcdn.com/ng.svg\",\n                        \"is_live\": true,\n                        \"currency\": \"Naira\",\n                        \"full_name\": \"Federal Republic of Nigeria\",\n                        \"short_name\": \"Nigeria\",\n                        \"alpha_2_code\": \"NG\",\n                        \"alpha_3_code\": \"NGR\",\n                        \"currency_code\": \"NGN\",\n                        \"currency_symbol\": \"₦\"\n                    },\n                    {\n                        \"flag\": \"https://flagcdn.com/us.svg\",\n                        \"is_live\": false,\n                        \"currency\": \"United States Dollar\",\n                        \"full_name\": \"United States of America\",\n                        \"short_name\": \"United States\",\n                        \"alpha_2_code\": \"US\",\n                        \"alpha_3_code\": \"USA\",\n                        \"currency_code\": \"USD\",\n                        \"currency_symbol\": \"$\"\n                    },\n                    {\n                        \"flag\": \"https://flagcdn.com/gb.svg\",\n                        \"is_live\": false,\n                        \"currency\": \"Pound Sterling\",\n                        \"full_name\": \"United Kingdom of Great Britain and Northern Ireland\",\n                        \"short_name\": \"United Kingdom\",\n                        \"alpha_2_code\": \"GB\",\n                        \"alpha_3_code\": \"GBR\",\n                        \"currency_code\": \"GBP\",\n                        \"currency_symbol\": \"£\"\n                    },\n                    {\n                        \"flag\": \"https://flagcdn.com/ke.svg\",\n                        \"is_live\": false,\n                        \"currency\": \"Kenyan Shilling\",\n                        \"full_name\": \"Republic of Kenya\",\n                        \"short_name\": \"Kenya\",\n                        \"alpha_2_code\": \"KE\",\n                        \"alpha_3_code\": \"KEN\",\n                        \"currency_code\": \"KES\",\n                        \"currency_symbol\": \"KSh\"\n                    }\n                ],\n                \"splash_screens\": [\n                    {\n                        \"image\": \"https://cdn.onepipe.io/images/pwt-instore/signup.png\",\n                        \"title\": \"Card-free, Stress-free\",\n                        \"description\": \"All features available through your PaywithAccounts Benefits account.\",\n                        \"primary_button\": {\n                            \"link\": \"\",\n                            \"text\": \"Create Account\"\n                        },\n                        \"secondary_button\": {\n                            \"link\": \"\",\n                            \"text\": \"Login\"\n                        }\n                    },\n                    {\n                        \"image\": \"https://cdn.onepipe.io/images/pwt-instore/pay-smarter.png\",\n                        \"title\": \"Pay Smarter\",\n                        \"description\": \"Scan to pay instantly from your account\",\n                        \"primary_button\": {\n                            \"link\": \"\",\n                            \"text\": \"Create Account\"\n                        },\n                        \"secondary_button\": {\n                            \"link\": \"\",\n                            \"text\": \"Login\"\n                        }\n                    },\n                    {\n                        \"image\": \"https://cdn.onepipe.io/images/pwt-instore/smart-credit.png\",\n                        \"title\": \"Smart credit\",\n                        \"description\": \"Instant credit, right when you need it\",\n                        \"primary_button\": {\n                            \"link\": \"\",\n                            \"text\": \"Create Account\"\n                        },\n                        \"secondary_button\": {\n                            \"link\": \"\",\n                            \"text\": \"Login\"\n                        }\n                    }\n                ],\n                \"membership_plans\": [\n                    {\n                        \"name\": \"Regular\",\n                        \"color\": \"#032647\",\n                        \"amount\": \"N500\",\n                        \"savings\": \"N300\",\n                        \"duration\": \"weekly\",\n                        \"features\": [\n                            \"Start at N10,000 credit line\",\n                            \"Grow up to N1,000,000\",\n                            \"Interest: 3%\",\n                            \"N300 in your weekly savings\"\n                        ]\n                    },\n                    {\n                        \"name\": \"Premium\",\n                        \"color\": \"#DCA850\",\n                        \"amount\": \"N950\",\n                        \"savings\": \"N700\",\n                        \"duration\": \"weekly\",\n                        \"features\": [\n                            \"Start at N20,000 credit line\",\n                            \"Grow up to N3,000,000\",\n                            \"Interest: 3%\",\n                            \"N700 in your weekly savings\"\n                        ]\n                    }\n                ]\n            }\n        }\n    }\n}\n"
								}
							]
						},
						{
							"name": "Get Countries [R] - Invalid Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "52b01eaf-ec11-4874-8cb8-760684df27e6",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status in response returns correctly\", function (){\r",
											"    pm.expect(jsonData.status).to.eql(\"Failed\");\r",
											"});\r",
											"\r",
											"pm.test(\"Error message in response is correct\", function () {\r",
											"    pm.expect(jsonData.message).to.exist.and.not.be.empty;\r",
											"});\r",
											"\r",
											"pm.test(\"Provider response error code is correct\", function () {\r",
											"    pm.expect(jsonData.data.error.code).to.exist;\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "a0320ae4-5137-4219-a9ce-733843fad4d6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer 6ec10a2f18cf9f894c49462",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"misc.get-utility\",\n    \"data\": {\n        \"customer_ref\": \"{{customer_ref}}\",\n        \"utilities\": \"get_countries\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}"
							},
							"response": [
								{
									"id": "29b7dde8-6445-46b9-8e7d-8c83e7e569f1",
									"name": "Get Countries",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"misc.get-utility\",\n    \"data\": {\n        \"customer_ref\": \"1234567890\",\n        \"utilities\": \"get_countries\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{url}}/misc/locations"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [
										{
											"expires": "Invalid Date",
											"domain": "",
											"path": ""
										}
									],
									"responseTime": null,
									"body": "\n{\n    \"status\": \"Successful\",\n    \"message\": \"Transaction processed successfully\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"Pay4Me\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"utilities\": {\n                \"tnc\": \"https://onepipe.io/start/terms/\",\n                \"privacy_policy\": \"https://onepipe.io/start/privacy/\",\n                \"countries\": [\n                    {\n                        \"flag\": \"https://flagcdn.com/ng.svg\",\n                        \"is_live\": true,\n                        \"currency\": \"Naira\",\n                        \"full_name\": \"Federal Republic of Nigeria\",\n                        \"short_name\": \"Nigeria\",\n                        \"alpha_2_code\": \"NG\",\n                        \"alpha_3_code\": \"NGR\",\n                        \"currency_code\": \"NGN\",\n                        \"currency_symbol\": \"₦\"\n                    },\n                    {\n                        \"flag\": \"https://flagcdn.com/us.svg\",\n                        \"is_live\": false,\n                        \"currency\": \"United States Dollar\",\n                        \"full_name\": \"United States of America\",\n                        \"short_name\": \"United States\",\n                        \"alpha_2_code\": \"US\",\n                        \"alpha_3_code\": \"USA\",\n                        \"currency_code\": \"USD\",\n                        \"currency_symbol\": \"$\"\n                    },\n                    {\n                        \"flag\": \"https://flagcdn.com/gb.svg\",\n                        \"is_live\": false,\n                        \"currency\": \"Pound Sterling\",\n                        \"full_name\": \"United Kingdom of Great Britain and Northern Ireland\",\n                        \"short_name\": \"United Kingdom\",\n                        \"alpha_2_code\": \"GB\",\n                        \"alpha_3_code\": \"GBR\",\n                        \"currency_code\": \"GBP\",\n                        \"currency_symbol\": \"£\"\n                    },\n                    {\n                        \"flag\": \"https://flagcdn.com/ke.svg\",\n                        \"is_live\": false,\n                        \"currency\": \"Kenyan Shilling\",\n                        \"full_name\": \"Republic of Kenya\",\n                        \"short_name\": \"Kenya\",\n                        \"alpha_2_code\": \"KE\",\n                        \"alpha_3_code\": \"KEN\",\n                        \"currency_code\": \"KES\",\n                        \"currency_symbol\": \"KSh\"\n                    }\n                ],\n                \"splash_screens\": [\n                    {\n                        \"image\": \"https://cdn.onepipe.io/images/pwt-instore/signup.png\",\n                        \"title\": \"Card-free, Stress-free\",\n                        \"description\": \"All features available through your PaywithAccounts Benefits account.\",\n                        \"primary_button\": {\n                            \"link\": \"\",\n                            \"text\": \"Create Account\"\n                        },\n                        \"secondary_button\": {\n                            \"link\": \"\",\n                            \"text\": \"Login\"\n                        }\n                    },\n                    {\n                        \"image\": \"https://cdn.onepipe.io/images/pwt-instore/pay-smarter.png\",\n                        \"title\": \"Pay Smarter\",\n                        \"description\": \"Scan to pay instantly from your account\",\n                        \"primary_button\": {\n                            \"link\": \"\",\n                            \"text\": \"Create Account\"\n                        },\n                        \"secondary_button\": {\n                            \"link\": \"\",\n                            \"text\": \"Login\"\n                        }\n                    },\n                    {\n                        \"image\": \"https://cdn.onepipe.io/images/pwt-instore/smart-credit.png\",\n                        \"title\": \"Smart credit\",\n                        \"description\": \"Instant credit, right when you need it\",\n                        \"primary_button\": {\n                            \"link\": \"\",\n                            \"text\": \"Create Account\"\n                        },\n                        \"secondary_button\": {\n                            \"link\": \"\",\n                            \"text\": \"Login\"\n                        }\n                    }\n                ],\n                \"membership_plans\": [\n                    {\n                        \"name\": \"Regular\",\n                        \"color\": \"#032647\",\n                        \"amount\": \"N500\",\n                        \"savings\": \"N300\",\n                        \"duration\": \"weekly\",\n                        \"features\": [\n                            \"Start at N10,000 credit line\",\n                            \"Grow up to N1,000,000\",\n                            \"Interest: 3%\",\n                            \"N300 in your weekly savings\"\n                        ]\n                    },\n                    {\n                        \"name\": \"Premium\",\n                        \"color\": \"#DCA850\",\n                        \"amount\": \"N950\",\n                        \"savings\": \"N700\",\n                        \"duration\": \"weekly\",\n                        \"features\": [\n                            \"Start at N20,000 credit line\",\n                            \"Grow up to N3,000,000\",\n                            \"Interest: 3%\",\n                            \"N700 in your weekly savings\"\n                        ]\n                    }\n                ]\n            }\n        }\n    }\n}\n"
								}
							]
						}
					],
					"id": "7bb6507b-b5a3-4d27-a236-2bbe0bd573d1"
				},
				{
					"name": "Lookup Bank Account",
					"item": [
						{
							"name": "Lookup Bank account [R]",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ca19a6b5-ba7b-4b5d-8349-15afd9965339",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Check status response is correct\", function () {\r",
											"    pm.expect(jsonData.status).to.eql(\"Successful\");\r",
											"});\r",
											"\r",
											"pm.test(\"Check message response is correct\", function () {\r",
											"    pm.expect(jsonData.message).to.exist.and.to.not.be.empty;\r",
											"})\r",
											"\r",
											"pm.test(\"Check provider response data is correct\", function () {\r",
											"    pm.expect(jsonData.data.provider_response).to.be.an(\"object\")\r",
											"    pm.expect(jsonData.data.provider_response).to.have.property(\"account_name\")\r",
											"    pm.expect(jsonData.data.provider_response).to.have.property(\"first_name\")\r",
											"    pm.expect(jsonData.data.provider_response).to.have.property(\"last_name\")\r",
											"})\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "a0e976c6-935a-4807-8686-f03a31a1e567",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{Token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"misc.lookup-bank-account\",\n    \"data\": {\n        \"customer_ref\": \"{{customer_ref}}\",\n        \"account_number\": \"2212979372\",\n        \"bank_code\": \"057\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}"
							},
							"response": [
								{
									"id": "7765adfd-f287-4fb1-a0c2-6f9164dc6a2e",
									"name": "Lookup Bank account",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"misc.lookup-bank-account\",\n    \"data\": {\n        \"account_number\": \"1234567890\",\n        \"bank_code\": \"123\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{url}}/misc/lookup-account"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [
										{
											"expires": "Invalid Date",
											"domain": "",
											"path": ""
										}
									],
									"responseTime": null,
									"body": "{\n    \"status\": \"Successful\",\n    \"message\": \"Transaction processed successfully\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"Polaris\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"customer_id\": null,\n            \"account_name\": \" John Doe\",\n            \"account_number\": \"1234567890\",\n            \"last_name\": null,\n            \"first_name\": null,\n            \"middle_name\": null,\n            \"gender\": null,\n            \"account_currency\": null,\n            \"dob\": null,\n            \"reference\": \"u9r7z90WywW3DFLPZ92j\",\n            \"meta\": {}\n        },\n        \"client_info\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Lookup Bank account [R] - Invalid account number",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ca19a6b5-ba7b-4b5d-8349-15afd9965339",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Check that status response is correct\", function () {\r",
											"    pm.expect(jsonData.status).to.eql(\"Failed\");\r",
											"})\r",
											"\r",
											"pm.test(\"Check that message response is correct\", function () {\r",
											"    pm.expect(jsonData.message).to.exist.and.not.to.be.empty;\r",
											"})\r",
											"\r",
											"pm.test(\"Check that banks are being returned correctly\", function () {\r",
											"    pm.expect(jsonData.data.provider_response_code).to.exist;\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "59a1499f-172b-4e99-9512-da7a4ad75126",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{Token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"misc.lookup-bank-account\",\n    \"data\": {\n        \"customer_ref\": \"{{customer_ref}}\",\n        \"account_number\": \"7080507367\",\n        \"bank_code\": \"057\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}"
							},
							"response": [
								{
									"id": "dd96115c-3b62-4562-abee-c9dc3f6fc375",
									"name": "Lookup Bank account",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"misc.lookup-bank-account\",\n    \"data\": {\n        \"account_number\": \"1234567890\",\n        \"bank_code\": \"123\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{url}}/misc/lookup-account"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [
										{
											"expires": "Invalid Date",
											"domain": "",
											"path": ""
										}
									],
									"responseTime": null,
									"body": "{\n    \"status\": \"Successful\",\n    \"message\": \"Transaction processed successfully\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"Polaris\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"customer_id\": null,\n            \"account_name\": \" John Doe\",\n            \"account_number\": \"1234567890\",\n            \"last_name\": null,\n            \"first_name\": null,\n            \"middle_name\": null,\n            \"gender\": null,\n            \"account_currency\": null,\n            \"dob\": null,\n            \"reference\": \"u9r7z90WywW3DFLPZ92j\",\n            \"meta\": {}\n        },\n        \"client_info\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Lookup Bank account [R] - empty customer reference",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ca19a6b5-ba7b-4b5d-8349-15afd9965339",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Check that status response is correct\", function () {\r",
											"    pm.expect(jsonData.status).to.eql(\"Failed\");\r",
											"})\r",
											"\r",
											"pm.test(\"Check that message response is correct\", function () {\r",
											"    pm.expect(jsonData.message).to.exist.and.not.to.be.empty;\r",
											"})\r",
											"\r",
											"pm.test(\"Check that banks are being returned correctly\", function () {\r",
											"    pm.expect(jsonData.data.provider_response_code).to.exist;\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "da28d8c1-84c7-4fa2-b869-f4e24e7f537b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{Token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"misc.lookup-bank-account\",\n    \"data\": {\n        \"customer_ref\": \"\",\n        \"account_number\": \"2212979372\",\n        \"bank_code\": \"057\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}"
							},
							"response": [
								{
									"id": "3c9b2a4e-80b3-4c1c-bd9b-228dfe12a1a3",
									"name": "Lookup Bank account",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"misc.lookup-bank-account\",\n    \"data\": {\n        \"account_number\": \"1234567890\",\n        \"bank_code\": \"123\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{url}}/misc/lookup-account"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [
										{
											"expires": "Invalid Date",
											"domain": "",
											"path": ""
										}
									],
									"responseTime": null,
									"body": "{\n    \"status\": \"Successful\",\n    \"message\": \"Transaction processed successfully\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"Polaris\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"customer_id\": null,\n            \"account_name\": \" John Doe\",\n            \"account_number\": \"1234567890\",\n            \"last_name\": null,\n            \"first_name\": null,\n            \"middle_name\": null,\n            \"gender\": null,\n            \"account_currency\": null,\n            \"dob\": null,\n            \"reference\": \"u9r7z90WywW3DFLPZ92j\",\n            \"meta\": {}\n        },\n        \"client_info\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Lookup Bank account [R] - empty token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ca19a6b5-ba7b-4b5d-8349-15afd9965339",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Check that status response is correct\", function () {\r",
											"    pm.expect(jsonData.status).to.eql(\"Failed\");\r",
											"})\r",
											"\r",
											"pm.test(\"Check that message response is correct\", function () {\r",
											"    pm.expect(jsonData.message).to.exist.and.not.to.be.empty;\r",
											"})\r",
											"\r",
											"pm.test(\"Check that banks are being returned correctly\", function () {\r",
											"    pm.expect(jsonData.data.provider_response_code).to.exist;\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "2d4173c5-a02d-450e-afaa-ed186fb7b314",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{Token}}",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"misc.lookup-bank-account\",\n    \"data\": {\n        \"customer_ref\": \"{{customer_ref}}\",\n        \"account_number\": \"2212979372\",\n        \"bank_code\": \"057\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}"
							},
							"response": [
								{
									"id": "c8854033-72bb-4416-919b-3f3b326f2b0f",
									"name": "Lookup Bank account",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"misc.lookup-bank-account\",\n    \"data\": {\n        \"account_number\": \"1234567890\",\n        \"bank_code\": \"123\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{url}}/misc/lookup-account"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [
										{
											"expires": "Invalid Date",
											"domain": "",
											"path": ""
										}
									],
									"responseTime": null,
									"body": "{\n    \"status\": \"Successful\",\n    \"message\": \"Transaction processed successfully\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"Polaris\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"customer_id\": null,\n            \"account_name\": \" John Doe\",\n            \"account_number\": \"1234567890\",\n            \"last_name\": null,\n            \"first_name\": null,\n            \"middle_name\": null,\n            \"gender\": null,\n            \"account_currency\": null,\n            \"dob\": null,\n            \"reference\": \"u9r7z90WywW3DFLPZ92j\",\n            \"meta\": {}\n        },\n        \"client_info\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Lookup Bank account [R] - Invalid token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ca19a6b5-ba7b-4b5d-8349-15afd9965339",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Check that status response is correct\", function () {\r",
											"    pm.expect(jsonData.status).to.eql(\"Failed\");\r",
											"})\r",
											"\r",
											"pm.test(\"Check that message response is correct\", function () {\r",
											"    pm.expect(jsonData.message).to.exist.and.not.to.be.empty;\r",
											"})\r",
											"\r",
											"pm.test(\"Check that banks are being returned correctly\", function () {\r",
											"    pm.expect(jsonData.data.provider_response_code).to.exist;\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "6fbcbaba-a4dd-4a2a-a9ff-4ef956a35058",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer 6ec10a2f18cf9f894c49462",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"misc.lookup-bank-account\",\n    \"data\": {\n        \"customer_ref\": \"{{customer_ref}}\",\n        \"account_number\": \"2212979372\",\n        \"bank_code\": \"057\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}"
							},
							"response": [
								{
									"id": "805ee6e1-4771-4581-a188-c535ddbbac89",
									"name": "Lookup Bank account",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"misc.lookup-bank-account\",\n    \"data\": {\n        \"account_number\": \"1234567890\",\n        \"bank_code\": \"123\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{url}}/misc/lookup-account"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [
										{
											"expires": "Invalid Date",
											"domain": "",
											"path": ""
										}
									],
									"responseTime": null,
									"body": "{\n    \"status\": \"Successful\",\n    \"message\": \"Transaction processed successfully\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"Polaris\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"customer_id\": null,\n            \"account_name\": \" John Doe\",\n            \"account_number\": \"1234567890\",\n            \"last_name\": null,\n            \"first_name\": null,\n            \"middle_name\": null,\n            \"gender\": null,\n            \"account_currency\": null,\n            \"dob\": null,\n            \"reference\": \"u9r7z90WywW3DFLPZ92j\",\n            \"meta\": {}\n        },\n        \"client_info\": null\n    }\n}"
								}
							]
						}
					],
					"id": "0854e9f4-d4dc-4901-b795-0c6437a6f1b1"
				},
				{
					"name": "Lookup customer ref",
					"item": [
						{
							"name": "Lookup customer ref",
							"id": "54f7da9f-60d3-48dc-88dc-a600276f0ab2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{Token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"action\": \"misc.lookup-customer-ref\",\r\n    \"data\": {\r\n        \"customer_ref\": \"2347080507367\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}"
							},
							"response": []
						}
					],
					"id": "4811449e-0dce-4c6c-a7ff-463939da4bbd"
				}
			],
			"id": "0bf15879-bb50-4af9-9caf-4ead99ef4bcd"
		},
		{
			"name": "Dashboard",
			"item": [
				{
					"name": "Transactions",
					"item": [
						{
							"name": "Transactions [R]",
							"id": "63b0da5a-d344-411b-ac88-0f0ef0a51169",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{Token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"dashboard.transactions\",\n    \"data\": {\n        \"customer_ref\": \"2347080507367\",\n        \"biller_code\": \"biller_code\"\n\n        // Optionals\n        //\"start_date\": \"start_date\",\n        //\"end_date\": \"end_date\",\n        //\"status\": \"status\",\n       // \"min_amount\": \"min_amount\",\n       // \"max_amount\": \"max_amount\",\n       // \"narration\": \"narration\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}"
							},
							"response": [
								{
									"id": "970fb2f7-3e52-492b-a732-53645a1a4d53",
									"name": "Transactions",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"dashboard.transactions\",\n    \"data\": {\n        \"customer_ref\": \"1234567890\",\n        \"biller_code\": \"biller_code\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{url}}/d/transaction"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [
										{
											"expires": "Invalid Date",
											"domain": "",
											"path": ""
										}
									],
									"responseTime": null,
									"body": "{\n    \"status\": \"Successful\",\n    \"message\": \"Transaction processed successfully\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"PaywithAccount\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"account_number\": \"1790303747\",\n            \"closing_balance\": 0,\n            \"opening_balance\": 0,\n            \"statement_list\": [\n                {\n                    \"transaction_reference\": \"788FTIB20045GJU\",\n                    \"transaction_amount\": 850,\n                    \"balance\": null,\n                    \"transaction_status\": \"successful\",\n                    \"transaction_type\": \"transfer\",\n                    \"transaction_date\": \"2020-02-14 00:00:00\",\n                    \"description\": \"MOB.BNKG:011/MUSA TOLULOPE/TRANSFER 30000 FROM 1780***243 TO 1077***364:000008200214190749669842598346\",\n                    \"from\": {\n                        \"account_name\": \"MUSA TOLULOPE\",\n                        \"account_number\": \"2100000000\",\n                        \"bank_name\": \"Zenith Bank\"\n                    },\n                    \"to\": {\n                        \"account_name\": \"Subscription Manager - PWA\",\n                        \"bank_name\": \"Fidelity Bank\"\n                    },\n                    \"meta\": {\n                        \"promo_url\":\"https://www.paywithaccount/com/win?ref=788FTIB20045GJU\",\n                        \"merchant\": \"Subscription Manager\",\n                        \"currency_symbol\": \"N\"\n                    }\n                },\n                {\n                    \"transaction_reference\": \"382FTTP20045000J\",\n                    \"transaction_amount\": 1000,\n                    \"balance\": null,\n                    \"transaction_status\": \"successful\",\n                    \"from\": {\n                        \"account_name\": \"CHIJIOKE JULIET JOHN\",\n                        \"bank_name\": \"Zenith Bank\"\n                    },\n                    \"to\": {\n                        \"account_number\": \"2100000000\",\n                        \"account_name\": \"Subscription Manager2 - PWA\",\n                        \"bank_name\": \"Fidelity Bank\"\n                    },\n                    \"transaction_type\": \"transfer\",\n                    \"transaction_date\": \"2020-02-14 00:00:00\",\n                    \"description\": \"MB: trans: Trf from CHIJIOKE JULIET JOHN to JOHN DOE JANE\",\n                     \"meta\": {\n                        \"promo_url\":\"https://www.paywithaccount/com/win?ref=382FTTP20045000J\",\n                        \"merchant\": \"Subscription Manager2\",\n                        \"currency_symbol\": \"N\"\n                    }\n                },\n                {\n                    \"transaction_reference\": \"136n15a200450084\",\n                    \"transaction_amount\": 400,\n                    \"balance\": 3756672,\n                    \"transaction_status\": \"successful\",\n                    \"from\": {\n                        \"account_number\":\"2100000000\",\n                        \"account_name\": \"MUSA TOLULOPE\",\n                        \"bank_name\": \"Zenith Bank\"\n                    },\n                    \"to\": null,\n                    \"transaction_type\": \"debit\",\n                    \"transaction_date\": \"2020-02-14 00:00:00\",\n                    \"description\": \"SMS SERVICE UNCHARGED APPLIED JAN 2020-1780161243\",\n                    \"meta\": {\n                        \"promo_url\":\"https://www.paywithaccount/com/win?ref=136n15a200450084\",\n                        \"merchant\": \"Subscription Manager\",\n                        \"currency_symbol\": \"N\"\n                    }\n                }\n            ],\n            \"reference\": \"000022200225154318222333334432\",\n            \"meta\":{\n                \"pagination\": {\n                    \"records\": 3,\n                    \"page\": 1,\n                    \"pages\": 1,\n                    \"page_size\": 10\n                }\n            }\n        }\n    }\n}"
								},
								{
									"id": "f2a64962-763a-4f14-a257-0037f8e6a2ab",
									"name": "Transactions old",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"dashboard.transactions\",\n    \"data\": {\n        \"customer_ref\": \"1234567890\",\n        \"biller_code\": \"biller_code\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{url}}/d/transaction"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [
										{
											"expires": "Invalid Date",
											"domain": "",
											"path": ""
										}
									],
									"responseTime": null,
									"body": "{\n    \"status\": \"Successful\",\n    \"message\": \"Transaction processed successfully\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"PaywithAccount\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"account_number\": \"1790303747\",\n            \"closing_balance\": 0,\n            \"opening_balance\": 0,\n            \"statement_list\": [\n                {\n                    \"transaction_reference\": \"788FTIB20045GJU\",\n                    \"transaction_amount\": 3000563,\n                    \"balance\": 1056109,\n                    \"transaction_type\": \"D\",\n                    \"transaction_date\": \"2020-02-14T00:00:00\",\n                    \"description\": \"MOB.BNKG:011/MUSA TOLULOPE/TRANSFER 30000 FROM 1780***243 TO 1077***364:000008200214190749669842598346\",\n                    \"meta\": {\n                        \"promo_url\": \"https://www.paywithaccount/com/win?ref=0094885757575\",\n                        \"merchant\": \"Subscription Manager\"\n                    }\n                },\n                {\n                    \"transaction_reference\": \"382FTTP20045000J\",\n                    \"transaction_amount\": 3000,\n                    \"balance\": 4056672,\n                    \"transaction_type\": \"C\",\n                    \"transaction_date\": \"2020-02-14T00:00:00\",\n                    \"description\": \"MB: trans: Trf from CHIJIOKE JULIET JOHN to JOHN DOE JANE\",\n                    \"meta\": {\n                        \"promo_url\": \"https://www.paywithaccount/com/win?ref=0094885757575\",\n                        \"merchant\": \"Subscription Manager2\"\n                    }\n                },\n                {\n                    \"transaction_reference\": \"136n15a200450084\",\n                    \"transaction_amount\": 400,\n                    \"balance\": 3756672,\n                    \"transaction_type\": \"D\",\n                    \"transaction_date\": \"2020-02-14T00:00:00\",\n                    \"description\": \"SMS SERVICE UNCHARGED APPLIED JAN 2020-1780161243\",\n                    \"meta\": {\n                        \"promo_url\": \"https://www.paywithaccount/com/win?ref=0094885757575\",\n                        \"merchant\": \"Subscription Manager\"\n                    }\n                }\n            ],\n            \"reference\": \"000022200225154318222333334432\",\n            \"meta\": {}\n        }\n    }\n}"
								}
							]
						}
					],
					"id": "42db2c17-7cc7-4dff-a504-8ff04915ef78"
				},
				{
					"name": "Customers",
					"item": [
						{
							"name": "Customers [R]",
							"id": "49a44dfb-7eb1-443e-bd92-b4629eeb62f2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{Token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"dashboard.customers\",\n    \"data\": {\n        \"customer_ref\": \"+2347080507367\",\n        \"biller_code\": \"06\"\n\n        // Optionals\n       // \"start_date\": \"start_date\",\n       // \"end_date\": \"end_date\",\n      //  \"status\": \"status\",\n      //  \"min_amount\": \"min_amount\",\n      //  \"max_amount\": \"max_amount\",\n      //  \"narration\": \"narration\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}"
							},
							"response": [
								{
									"id": "24626606-9ec3-487c-a3d0-7f16fbc54c8c",
									"name": "Customers",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"dashboard.customer\",\n    \"data\": {\n        \"customer_ref\": \"1234567890\",\n        \"biller_code\": \"biller_code\",\n\n        // Optionals\n        \"start_date\": \"start_date\",\n        \"end_date\": \"end_date\",\n        \"status\": \"status\",\n        \"min_amount\": \"min_amount\",\n        \"max_amount\": \"max_amount\",\n        \"narration\": \"narration\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{url}}/d/customers"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [
										{
											"expires": "Invalid Date",
											"domain": "",
											"path": ""
										}
									],
									"responseTime": null,
									"body": "{\n    \"status\": \"Successful\",\n    \"message\": \"Transaction processed successfully\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"PaywithAccount\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"status\": \"ACTIVE\",\n            \"created_on\": \"2020-04-05 23:08:01\",\n            \"biller_name\": \"Koko Below Stores\",\n            \"biller_code\": \"000019\",\n            \"tax_id\": \"\",\n            \"bank_code\": \"\",\n            \"bank_account_number\": \"\",\n            \"address\": \"\",\n            \"notification_phone_number\": \"\", //csv\n            \"notification_email\": \"\",\n            \"webhook_url\": \"\",\n            \"virtual_account_expiration\": \"\",\n            \"whatsapp_contact_number\": \"\",\n            \"whatsapp_contact_name\": \"\",\n            \"ussd_description\": \"\",\n            \"business_short_name\": \"\",\n            \"ussd_success_response_message\": \"\",\n            \"ussd_failure_response_message\": \"\",\n            \"ussd_failure_sms\": \"\",\n            \"ussd_success_sms\": \"\",\n            \"ussd_custom_fields\": \"age,bvn\", //csv\n            \"meta\": {\n                \"customers\": [\n                    {\n                        \"name\": \"Akin Olunloye\",\n                        \"phone_number\": \"09066870818\",\n                        \"email\": \"akin@onepipe.io\",\n                        \"address\": \"11b Badagry Street\",\n                        \"status\": \"ACTIVE\"\n                    }\n                ],\n                \"pagination\": {\n                    \"records\": 4,\n                    \"page\": 1,\n                    \"pages\": 1,\n                    \"page_size\": 1000000000\n                }\n            }\n        },\n        \"client_info\": {\n            \"name\": null,\n            \"id\": null,\n            \"bank_cbn_code\": null,\n            \"bank_name\": null,\n            \"console_url\": null,\n            \"js_background_image\": null,\n            \"css_url\": null,\n            \"logo_url\": null,\n            \"footer_text\": null,\n            \"show_options_icon\": false,\n            \"paginate\": false,\n            \"paginate_count\": 0,\n            \"options\": null,\n            \"merchant\": null,\n            \"colors\": null,\n            \"meta\": null\n        }\n    }\n}"
								}
							]
						}
					],
					"id": "e75efd4b-f66a-4561-8717-02f3bbdf1f93"
				},
				{
					"name": "Get Customer Data [R]",
					"id": "7d331772-01aa-4ffd-9e52-bbe2dbfa5ed9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"action\" : \"misc.get-customer\",\n    \"data\": {\n        \"customer_ref\":\"{{customer_ref}}\" // 234 Format\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}",
						"description": "List of data to Cach offlne\n\n1. Accounts\n    \n    1. All accounts and their last balance\n        \n2. Loan Limits\n    \n3. Membership status\n    \n4. Onboard Approval Status"
					},
					"response": [
						{
							"id": "f605de34-360f-4f9a-8c29-9be60a31f5a4",
							"name": "Get Customer Data",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\" : \"misc.get-customer\",\n    \"data\": {\n        \"customer_ref\":\"1234567890123\" // 234 Format\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{url}}/misc/get-onboard status"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date",
									"domain": "",
									"path": ""
								}
							],
							"responseTime": null,
							"body": "{\n    \"status\": \"Successful\",\n    \"message\": \"Transaction processed successful\",\n    \"data\": {\n        \"provider_response_code\": \"00\",\n        \"provider\": \"Pay4Me\",\n        \"errors\": null,\n        \"error\": null,\n        \"provider_response\": {\n            \"approval_status\": \"approved\",// \"declined|pending|approved\" //approved means customer understands products\n            \"membership_status\": \"active\", // \"inactive|active\n            \"membership_plan\": \"Premium\",\n\n            \"is_pwa_biller\": \"true\", // \"true|false|null\"\n            \"is_pay4me_distro\": \"true\", // \"true|false|null\"\n            \n            //\n            \"can_take_pay4me\": \"true|false\", //true|false // Lookout for this.. use it to hide the Pay4Me button\n            \"lender_terms_url\": null,\n            \"loan_terms\": {\n                \"tenure\": \"12\",\n                \"interest_rate\": \"10%\",\n                \"repayment_frequency\": \"monthly\"            \n            },\n            \"running_loans\": [\n                { // would be null when there's no running loan\n                    \"amount\": \"N500,000\",\n                    \"due_date\": \"29-03-2025\"\n                },\n                { // would be null when there's no running loan\n                    \"amount\": \"N500,000\",\n                    \"due_date\": \"29-03-2025\"\n                }\n            ],\n            \"pay4me_limit\": \"N500,000.00 | N0.00\",\n            \"pay4me_used\": \"N300,000.00 | N0.00\",\n            \"pay4me_available\": \"N200,000.00 | N0.00\",\n            \n            \"meta\": {\n                \"reference\": \"{{$randomPassword}}\"\n            }\n        }\n    }\n}"
						}
					]
				}
			],
			"id": "69005ca2-bd2f-495f-8605-14faf8e4add7"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "675e0f1e-9fcc-46ab-808c-8ae02198a5ae",
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "53239fb7-a658-498e-898a-3a6118398df2",
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "https://pwa-instore.bits.dev.onepipe.io/api/v1/execute"
		},
		{
			"key": "Token",
			"value": "6ec10a2f18cf9f894c49462b7c24a3d9"
		},
		{
			"key": "customer_ref",
			"value": "1234567890123"
		},
		{
			"key": "biller_code",
			"value": "biller_code"
		},
		{
			"key": "otp",
			"value": "12345"
		},
		{
			"key": "otp_reference",
			"value": "otp_reference"
		},
		{
			"key": "pin",
			"value": "12345"
		},
		{
			"key": "wrong_pin",
			"value": "11111"
		},
		{
			"key": "password",
			"value": "Password123!"
		},
		{
			"key": "wrong_password",
			"value": "Wrong123!"
		},
		{
			"key": "ip_address",
			"value": "127.0.0.1"
		},
		{
			"key": "use_agent",
			"value": "device-123"
		},
		{
			"key": "transaction_ref",
			"value": ""
		},
		{
			"key": "reference",
			"value": ""
		},
		{
			"key": "login_reference",
			"value": ""
		},
		{
			"key": "current_subscription_id",
			"value": ""
		},
		{
			"key": "wrong_token",
			"value": "6ec10a2f18cf9f894c49462b7c24a3d2",
			"type": "default"
		}
	]
}